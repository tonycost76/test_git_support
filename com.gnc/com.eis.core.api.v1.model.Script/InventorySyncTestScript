{
  "refName" : "InventorySyncTestScript",
  "refKey" : "82fd037f20ac14d53fdc8692f7ffb911",
  "displayName" : "InventorySyncTestScript",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1533882998928,
    "createUser" : "Saket Satyarthi",
    "updateTs" : 1535326495379,
    "updateUser" : "GNC VDP"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "1785165b-8bd0-462e-9991-6f03e6e0e982",
  "script" : "var log = org.slf4j.LoggerFactory.getLogger(\"vendorSetup script:\");\nvar csvPackage = Packages.com.opencsv.CSVReader;\n\n\nfunction removeWhiteSpace(value) {\n    if (value !== null && value !== undefined) {\n        return new java.lang.String(value).trim();\n    } else {\n        return value;\n    }\n}\n\nfunction strEndsWith(str, suffix) {\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n\nfunction processPhoneNumber(value) {\n    if (!isBlank(value)) {\n        if (value.equals(\"00000000000000\")) {\n            value = \"0000000000\";\n        } else if (strEndsWith(value, \"0000\")) {\n            value = value.substring(0, 10);\n        }\n    } else {\n        value = \"0000000000\";\n    }\n\n    return value;\n\n}\n\nfunction isBlank(value) {\n    if (value === null || value === undefined || value === '') {\n        return true;\n    }\n\n    return false;\n}\n\nfunction getVendorByVendorNumber(vendorNumber) {\n    var vendor = null;\n    var vendors = organizationService.getList(0, 1, \"dynAttributes.vendorNumber:\" + vendorNumber, null, null);\n    if (vendors.size() > 0) {\n        vendor = vendors.get(0);\n    }\n    return vendor;\n}\n\nfunction createVendorEmailName(companyName) {\n    var inputString = companyName;\n    if (inputString == null) {\n        return null;\n    } else if (inputString === '') {\n        return inputString;\n    }\n\n    inputString = java.lang.String(inputString).replaceAll(\"[^a-zA-Z0-9]+\", \"\");\n    if (inputString.length > 25) {\n        inputString = inputString.substring(0, 25);\n    }\n\n    inputString = inputString.toLowerCase();\n    return inputString;\n\n}\n\n\nfunction createDefaultPackageOptions(vendor) {\n\n    var vendorDataDomain = dataDomain + \".vendors.\" + vendor.getRefName();\n    var correlation = correlationService.getCorrelationByHierarchy(\"ShippingPackageOptions\", vendorDataDomain);\n    if (correlation === null || correlation.getRefName() === null) {\n        taskHelper.notifyAndCreateTask(\n            \"No default correlation named 'ShippingPackageOptions' has been created.\" + java.lang.System.nanoTime(),\n            \"No default correlation named 'ShippingPackageOptions' has been created.\",\n            \"No default correlation named 'ShippingPackageOptions' has been created. Please set up a default correlation for 'ShippingPackageOptions'. No 'ShippingPackageOptions' will be autocreated for vendor:\" + vendor.getRefName(),\n            \"Vendor Set Up Failure\", \"com.gnc\",\n            \"Vendor Set Up Failure\", \"vendor-setup-failure\", \"Tony Costanzo\");\n\n    } else {\n\n        if (correlation.getDataDomain() === null || correlation.getDataDomain().equals(dataDomain) || correlation.getDataDomain().equals(\"app.cantata\")) {\n            log.info(\"Creating ShippingPackageOptions for vendor:\" + vendor.getCompanyName());\n            correlation.setId(java.util.UUID.randomUUID().toString());\n            correlation.setDataDomain(vendorDataDomain);\n            correlation = correlationDAO.save(correlation);\n        } else {\n            log.info(\"ShippingPackageOptions already exist for vendor:\" + vendor.getCompanyName());\n        }\n    }\n\n}\n\n\nfunction updatePrimaryContact(vendor, merchant, contactName, phone, emails, address) {\n    var contact = null;\n    if (contactName !== null && contactName !== '' && contactName !== 'na') {\n        var vendorNumber = vendor.getDynAttributes().get(\"vendorNumber\");\n        var contactEmails = emails.split(\";\");\n        var primaryEmail = contactEmails[0];\n        var names = contactName.split(\" \", -1);\n\n        var refName = vendorNumber + \"-\" + names[0] + \" \" + names[1] + \"-\" + primaryEmail;\n\n        contact = contactService.getByRefName(refName);\n\n        if (contact === null) {\n            contact = new com.eis.core.api.v1.model.Contact();\n        }\n        if (log.isDebugEnabled()) {\n            log.debug(\"Contact Name is:\" + contactName);\n        }\n        //contact.setName(contactName);\n        contact.setPrimaryEmail(primaryEmail);\n\n        contact.setFirstName(names[0]);\n        contact.setLastName(names[1]);\n        contact.setCompanyName(vendor.getRefName());\n        contact.setRefName(refName);\n        contact.setDisplayName(contact.getFirstName() + \" \" + contact.getLastName());\n        contact.setPrimaryPhone(phone);\n        if (contact.getAddress() === null) {\n            contact.setAddress(address);\n        }\n    } else {\n        contact = getMerchantBuyerContact(merchant);\n    }\n\n    vendor.setPrimaryContact(contact);\n}\n\n\n\nfunction getVendorDataDomains(vendor) {\n    var dataDomains = new java.util.ArrayList();\n\n    var dataDomain = com.eis.security.multitenancy.model.SecureSession.getDefaultDataDomain();\n\n    dataDomains.add(dataDomain);\n\n    dataDomains.add(vendor.getDataDomain() + \".vendors.\" + vendor.getRefName());\n\n    return dataDomains;\n\n}\n\nfunction createFormUserDataDomainPolicy(vendor) {\n    var vendorDataDomain = dataDomain + \".vendors.\" + vendor.getRefName();\n    var dataDomains = new java.util.ArrayList();\n\n    var dataDomainPolicy = dataDomainPolicyService.getByRefName(vendor.getRefName() + \"-policy\");\n\n    if (dataDomainPolicy !== null) {\n        dataDomainPolicyService['delete'](dataDomainPolicy.getId());\n    }\n\n    dataDomains.add(dataDomain);\n    dataDomains.add(vendorDataDomain);\n    var createFunctionalDomains = [\"Shipment:Create\", \"FileSystemEntry:Create\", \"Invoice:Create\", \"ShipmentLabel:Create\", \"ShipmentRequest:Create\", \"ShipmentRequest:Ack\", \"ShipmentRequest:Reject\", \"PackingSlip:Create\", \"Item:Create\", \"Variant:Create\", \"Script:Execute\", \"MailboxEntry:Create\", \"MailboxEntry:List\"];\n\n    var listFunctionalDomains = [\"Shipment:List\", \"Invoice:List\", \"ShipmentRequest:List\", \"Shipment:View\", \"Invoice:View\", \"ShipmentRequest:View\", \"FileSystemEntry:List\", \"FileSystemEntry:View\", \"RemittanceAdvice:List\", \"RemittanceAdvice:View\", \"Organization:View\"];\n\n    var domainOnlyFunctionalDomains = [\"Correlation:Create\",\n        \"Correlation:Update\"\n    ];\n\n    dataDomainPolicy = com.eis.core.api.v1.model.DataDomainPolicy();\n    for (var x = 0; x < createFunctionalDomains.length; x++) {\n        var fd = createFunctionalDomains[x];\n        var domain = fd.split(\":\")[0];\n        var action = fd.split(\":\")[1];\n        var dataDomainPolicyEntry = com.eis.core.api.v1.model.DataDomainPolicyEntry();\n        dataDomainPolicyEntry.getDataDomains().addAll(dataDomains);\n        dataDomainPolicyEntry.setFunctionalActionString(action);\n        dataDomainPolicyEntry.setFunctionalDomainString(domain);\n        dataDomainPolicy.getEntries().put(fd, dataDomainPolicyEntry);\n    }\n\n    for (var x = 0; x < domainOnlyFunctionalDomains.length; x++) {\n        var fd = domainOnlyFunctionalDomains[x];\n        var domain = fd.split(\":\")[0];\n        var action = fd.split(\":\")[1];\n        var dataDomainPolicyEntry = com.eis.core.api.v1.model.DataDomainPolicyEntry();\n        dataDomainPolicyEntry.getDataDomains().add(vendorDataDomain);\n        dataDomainPolicyEntry.setFunctionalActionString(action);\n        dataDomainPolicyEntry.setFunctionalDomainString(domain);\n        dataDomainPolicy.getEntries().put(fd, dataDomainPolicyEntry);\n    }\n\n\n    for (var x = 0; x < listFunctionalDomains.length; x++) {\n        var fd = listFunctionalDomains[x];\n        var domain = fd.split(\":\")[0];\n        var action = fd.split(\":\")[1];\n        var dataDomainPolicyEntry = com.eis.core.api.v1.model.DataDomainPolicyEntry();\n        dataDomainPolicyEntry.getDataDomains().add(vendorDataDomain);\n        dataDomainPolicyEntry.setFunctionalActionString(action);\n        dataDomainPolicyEntry.setFunctionalDomainString(domain);\n        dataDomainPolicy.getEntries().put(fd, dataDomainPolicyEntry);\n    }\n\n\n    dataDomainPolicy.setRefName(vendor.getRefName() + \"-policy\")\n    dataDomainPolicy = dataDomainPolicyService.save(dataDomainPolicy);\n    return dataDomainPolicy;\n\n}\n\n\n\n\nfunction createFileUserDataDomainPolicy(vendor) {\n    var vendorDataDomain = dataDomain + \".vendors.\" + vendor.getRefName();\n    var dataDomains = new java.util.ArrayList();\n\n    var dataDomainPolicy = dataDomainPolicyService.getByRefName(vendor.getRefName() + \"-policy\");\n\n    if (dataDomainPolicy !== null) {\n        dataDomainPolicyService['delete'](dataDomainPolicy.getId());\n    }\n\n    dataDomains.add(dataDomain);\n    dataDomains.add(vendorDataDomain);\n    var createFunctionalDomains = [\"FileSystemEntry:Create\"];\n\n    var listFunctionalDomains = [\"Shipment:List\", \"Invoice:List\", \"ShipmentRequest:List\", \"Shipment:View\", \"Invoice:View\", \"ShipmentRequest:View\", \"RemittanceAdvice:List\", \"RemittanceAdvice:View\", \"Organization:View\", \"FileSystemEntry:View\", \"FileSystemEntry:List\", \"FileSystemEntry:Update\", \"FileSystemEntry:Delete\", \"MailboxEntry:Create\", \"MailboxEntry:List\"];\n\n    var dataDomainPolicy = com.eis.core.api.v1.model.DataDomainPolicy();\n    for (var x = 0; x < createFunctionalDomains.length; x++) {\n        var fd = createFunctionalDomains[x];\n        var domain = fd.split(\":\")[0];\n        var action = fd.split(\":\")[1];\n        var dataDomainPolicyEntry = com.eis.core.api.v1.model.DataDomainPolicyEntry();\n        dataDomainPolicyEntry.getDataDomains().addAll(dataDomains);\n        dataDomainPolicyEntry.setFunctionalActionString(action);\n        dataDomainPolicyEntry.setFunctionalDomainString(domain);\n        dataDomainPolicy.getEntries().put(fd, dataDomainPolicyEntry);\n    }\n\n    for (var x = 0; x < listFunctionalDomains.length; x++) {\n        var fd = listFunctionalDomains[x];\n        var domain = fd.split(\":\")[0];\n        var action = fd.split(\":\")[1];\n        var dataDomainPolicyEntry = com.eis.core.api.v1.model.DataDomainPolicyEntry();\n        dataDomainPolicyEntry.getDataDomains().add(vendorDataDomain);\n        dataDomainPolicyEntry.setFunctionalActionString(action);\n        dataDomainPolicyEntry.setFunctionalDomainString(domain);\n        dataDomainPolicy.getEntries().put(fd, dataDomainPolicyEntry);\n    }\n\n\n    dataDomainPolicy.setRefName(vendor.getRefName() + \"-policy\")\n    dataDomainPolicy = dataDomainPolicyService.save(dataDomainPolicy);\n    return dataDomainPolicy;\n\n}\n\n\nfunction createEDIUserDataDomainPolicy(vendor) {\n    var vendorDataDomain = dataDomain + \".vendors.\" + vendor.getRefName();\n    var dataDomains = new java.util.ArrayList();\n\n\n    var dataDomainPolicy = dataDomainPolicyService.getByRefName(vendor.getRefName() + \"-policy\");\n\n    if (dataDomainPolicy !== null) {\n        dataDomainPolicyService['delete'](dataDomainPolicy.getId());\n    }\n\n    dataDomains.add(dataDomain);\n    dataDomains.add(vendorDataDomain);\n    var createFunctionalDomains = [\"FileSystemEntry:Create\"];\n\n    //add salesOrder\n    var listFunctionalDomains = [\"Shipment:List\", \"Invoice:List\", \"ShipmentRequest:List\", \"Shipment:View\", \"Invoice:View\", \"ShipmentRequest:View\", \"RemittanceAdvice:List\", \"RemittanceAdvice:View\", \"Organization:View\", \"FileSystemEntry:View\", \"FileSystemEntry:List\", \"FileSystemEntry:Update\", \"FileSystemEntry:Delete\", \"MailboxEntry:Create\", \"MailboxEntry:List\", \"SalesOrder:List\", \"SalesOrder:View\"];\n\n    var dataDomainPolicy = com.eis.core.api.v1.model.DataDomainPolicy();\n    for (var x = 0; x < createFunctionalDomains.length; x++) {\n        var fd = createFunctionalDomains[x];\n        var domain = fd.split(\":\")[0];\n        var action = fd.split(\":\")[1];\n        var dataDomainPolicyEntry = com.eis.core.api.v1.model.DataDomainPolicyEntry();\n        dataDomainPolicyEntry.getDataDomains().addAll(dataDomains);\n        dataDomainPolicyEntry.setFunctionalActionString(action);\n        dataDomainPolicyEntry.setFunctionalDomainString(domain);\n        dataDomainPolicy.getEntries().put(fd, dataDomainPolicyEntry);\n    }\n\n    for (var x = 0; x < listFunctionalDomains.length; x++) {\n        var fd = listFunctionalDomains[x];\n        var domain = fd.split(\":\")[0];\n        var action = fd.split(\":\")[1];\n        var dataDomainPolicyEntry = com.eis.core.api.v1.model.DataDomainPolicyEntry();\n        dataDomainPolicyEntry.getDataDomains().add(vendorDataDomain);\n        dataDomainPolicyEntry.setFunctionalActionString(action);\n        dataDomainPolicyEntry.setFunctionalDomainString(domain);\n        dataDomainPolicy.getEntries().put(fd, dataDomainPolicyEntry);\n    }\n\n\n    //dataDomainPolicy.setRefName(vendor.getRefName()+\"-policy\")\n    dataDomainPolicy.setRefName(vendor.getRefName() + \"-policy\")\n    dataDomainPolicy = dataDomainPolicyService.save(dataDomainPolicy);\n    return dataDomainPolicy;\n\n}\n\n\n\n\nfunction getVendorHomeDirectory() {\n    var directory = fileSystemEntryService.getByRefName(\"vendors\");\n    return directory;\n}\n\nfunction createFileSystemEntryHome(vendor, dataDomains, homeDirectory) {\n    var vendorType = vendor.getDynAttributes().get(\"vendorType\");\n    var entry = null;\n    if (vendorType === 'Form Portal' || vendorType === 'EDI') {\n        entry = createFormUserFileSystemEntryHome(vendor, dataDomains, homeDirectory);\n    } else {\n        entry = createFileUserFileSystemEntryHome(vendor, dataDomains, homeDirectory);\n    }\n\n    return entry;\n}\n\nfunction createFormUserFileSystemEntryHome(vendor, dataDomains, homeDirectory) {\n\n\n    //var path = vendor.getRefName() + \"-home\";\n\tvar vendorEmailName = createVendorEmailName(vendor.getCompanyName());\n\t//var path = vendorEmailName + \"-home\";\n\tvar path = vendorEmailName;\n\t\n\t\n    var entry = fileSystemEntryService.getByRefName(homeDirectory.getRefName() + \"/\" + path);\n    if (entry === null) {\n        entry = new com.eis.core.api.v1.model.FileSystemEntry();\n        entry.setRefName(homeDirectory.getRefName() + \"/\" + path);\n        entry.setName(path);\n        entry.setParentFileEntryId(homeDirectory.getId());\n        entry.setTrackable(true);\n        entry.setId(java.util.UUID.randomUUID().toString());\n        entry.setOwnerUserProfileRefName(\"admin@gnc.com\");\n        entry.setType(com.eis.core.api.v1.model.FileSystemEntryType.Directory);\n        entry.getDataDomains().addAll(dataDomains);\n        entry = fileSystemEntryDAO.save(entry);\n\n        var subdirectories = [\"inventory-update\"];\n\n        for (var x = 0; x < subdirectories.length; x++) {\n            var subEntry = new com.eis.core.api.v1.model.FileSystemEntry();\n            var name = subdirectories[x];\n            subEntry.setRefName(entry.getRefName() + \"/\" + name);\n            subEntry.setName(name);\n            subEntry.setId(java.util.UUID.randomUUID().toString());\n            subEntry.setParentFileEntryId(entry.getId());\n            subEntry.setTrackable(true);\n            subEntry.setOwnerUserProfileRefName(\"admin@gnc.com\");\n            subEntry.setType(com.eis.core.api.v1.model.FileSystemEntryType.Directory);\n            subEntry.getDataDomains().addAll(dataDomains);\n            subEntry = fileSystemEntryDAO.save(subEntry);\n        }\n    }\n\n    return entry;\n}\n\nfunction createFileUserFileSystemEntryHome(vendor, dataDomains, homeDirectory) {\n\n    var vendorEmailName = createVendorEmailName(vendor.getCompanyName());\n\tvar path = vendorEmailName;\n    //var path = vendor.getRefName() + \"-home\";\n    var entry = fileSystemEntryService.getByRefName(homeDirectory.getRefName() + \"/\" + path);\n    if (entry === null) {\n        entry = new com.eis.core.api.v1.model.FileSystemEntry();\n        entry.setRefName(homeDirectory.getRefName() + \"/\" + path);\n        entry.setName(path);\n        entry.setParentFileEntryId(homeDirectory.getId());\n        entry.setTrackable(true);\n        entry.setId(java.util.UUID.randomUUID().toString());\n        entry.setOwnerUserProfileRefName(\"admin@gnc.com\");\n        entry.setType(com.eis.core.api.v1.model.FileSystemEntryType.Directory);\n        entry.getDataDomains().addAll(dataDomains);\n        entry = fileSystemEntryDAO.save(entry);\n\n        var subdirectories = [\"inventory-update\", \"invoices\", \"order-updates\", \"asn\", \"orders\", \"remit-advice\"];\n\n        for (var x = 0; x < subdirectories.length; x++) {\n            var subEntry = new com.eis.core.api.v1.model.FileSystemEntry();\n            var name = subdirectories[x];\n            subEntry.setRefName(entry.getRefName() + \"/\" + name);\n            subEntry.setName(name);\n            subEntry.setId(java.util.UUID.randomUUID().toString());\n            subEntry.setParentFileEntryId(entry.getId());\n            subEntry.setTrackable(true);\n            subEntry.setOwnerUserProfileRefName(\"admin@gnc.com\");\n            subEntry.setType(com.eis.core.api.v1.model.FileSystemEntryType.Directory);\n            subEntry.getDataDomains().addAll(dataDomains);\n            subEntry = fileSystemEntryDAO.save(subEntry);\n        }\n    }\n\n    return entry;\n}\n\n\nfunction createCapablityPermission(capability, domain) {\n    var capabilityPermission = new com.eis.core.api.v1.model.CapabilityPermission();\n    capabilityPermission.setCapability(capability);\n    capabilityPermission.setPermittedDataDomain(domain);\n    capabilityPermission.setRefName(capability.getRefName() + \"-\" + domain);\n    return capabilityPermission;\n}\n\n\n\n//adding getRefName\nfunction createVendorRole(org) {\n    var vendorType = org.getDynAttributes().get(\"vendorType\");\n    var capabilityPermissions = new java.util.ArrayList();\n\n    //var refName = \"vendor-\"+org.getRefName()+\"Role\";\n    var refName = \"vendor-\" + org.getRefName() + \"Role\";\n    var role = roleService.getByRefName(refName);\n    if (role === null) {\n        var role = com.eis.core.api.v1.model.Role();\n        role.setRefName(\"vendor-\" + org.getRefName() + \"Role\");\n        role.setDisplayName(\"vendor-\" + org.getRefName() + \"Role\");\n        role.setDataDomain(dataDomain);\n        role.setRoleType(com.eis.core.api.v1.model.RoleType.USER_ROLE);\n    }\n\n    //var baseFeaturesCapability = capabilityService.getList(0, 1, \"refName:BaseFeatures\", null, null).get(0);\n    // var basicUserProfileCapablity = capabilityService.getList(0, 1, \"refName:VendorUserProfile\",null, null).get(0);\n\n    var viewSystemObjectsCapability = capabilityService.getList(0, 1, \"refName:ViewSystemObjs\", null, null).get(0);\n    // var createShipmentsCapability = capabilityService.getList(0, 1, \"refName:CreateShipments\",null, null).get(0);\n\n    var reportViewerCapability = capabilityService.getList(0, 1, \"refName:ReportViewer\", null, null).get(0);\n\n    // var fileViewerCapability = capabilityService.getList(0, 1, \"refName:ViewFiles\",null, null).get(0);\n\n\n    role.getCapabilityPermissions().clear();\n\n    /*  if(vendorType === 'Form Portal') \n\t{\n        var vendorAccessCapablity = capabilityService.getList(0, 1, \"refName:VendorFormUserAccess\",null, null).get(0);  \n\t\tvar createShipmentsCapability = capabilityService.getList(0, 1, \"refName:createShipmentsCapability\",null, null).get(0); \n        var Vendororder = capabilityService.getList(0, 1, \"refName:VendorOrder\",null, null).get(0); \t\n\n        var Dashboardvendor = capabilityService.getList(0, 1, \"refName:Dashboardvendor\",null, null).get(0); \t\t\t\n\t\t\n        role.getCapabilityPermissions().add(createCapablityPermission(vendorAccessCapablity, dataDomain));\n         role.getCapabilityPermissions().add(createCapablityPermission(createShipmentsCapability, dataDomain));\n\t\t  role.getCapabilityPermissions().add(createCapablityPermission(Vendororder, dataDomain));\n\t\t  role.getCapabilityPermissions().add(createCapablityPermission(Dashboardvendor, dataDomain));\n\t\t  \n    } */\n\n\n\n\n    if (vendorType === 'EDI' || vendorType === 'Form Portal') {\n        var vendorAccessCapablity = capabilityService.getList(0, 1, \"refName:VendorFormUserAccess\", null, null).get(0);\n\n        var Dashboardvendor = capabilityService.getList(0, 1, \"refName:Dashboardvendor\", null, null).get(0);\n\n        var VendorUser = capabilityService.getList(0, 1, \"refName:VendorOrder\", null, null).get(0);\n\n        var shipmentvendor = capabilityService.getList(0, 1, \"refName:createShipmentsCapability\", null, null).get(0);\n\n        role.getCapabilityPermissions().add(createCapablityPermission(Dashboardvendor, dataDomain));\n        role.getCapabilityPermissions().add(createCapablityPermission(vendorAccessCapablity, dataDomain + \".vendors.\" + org.getRefName()));\n\n        //role.getCapabilityPermissions().add(createCapablityPermission(fileViewerCapability, dataDomain));\n        role.getCapabilityPermissions().add(createCapablityPermission(shipmentvendor, dataDomain));\n        role.getCapabilityPermissions().add(createCapablityPermission(VendorUser, dataDomain));\n\n    } else if (vendorType === 'File Portal') {\n        java.lang.System.out.println(\"Vendor Is File Portal\");\n        var vendorAccessCapablity = capabilityService.getList(0, 1, \"refName:VendorFileUserAccess\", null, null).get(0);\n        role.getCapabilityPermissions().add(createCapablityPermission(vendorAccessCapablity, dataDomain + \".vendors.\" + org.getRefName()));\n        //role.getCapabilityPermissions().add(createCapablityPermission(fileViewerCapability, dataDomain));\n        role.getCapabilityPermissions().add(createCapablityPermission(createShipmentsCapability, dataDomain));\n    }\n\n\n\n\n    //role.getCapabilityPermissions().add(createCapablityPermission(basicUserProfileCapablity, dataDomain));\n\n    role.getCapabilityPermissions().add(createCapablityPermission(reportViewerCapability, dataDomain));\n    role.getCapabilityPermissions().add(createCapablityPermission(viewSystemObjectsCapability, \"app.cantata\"));\n\n    role = roleService.save(role);\n    return role;\n\n\n}\n\nfunction createVendorUserProfile(org, fileSystemEntry) {\n\n    var vendorEmailName = createVendorEmailName(org.getCompanyName());\n    var vendorType = org.getDynAttributes().get(\"vendorType\");\n\t//var dataDomain = com.eis.security.multitenancy.model.SecureSession.getDefaultDataDomain();\n    // var refName = \"vendor-\"+vendorEmailName+\"@gnc.com\";\n    var refName = \"vendor-\" + vendorEmailName + \"@gnc.com\";\n    var displayName = \"vendor-\" + vendorEmailName + \"@gnc.com\";\n    var testProfile = userProfileService.getByRefName(refName);\n    if (testProfile === null) {\n        testProfile = new com.eis.core.api.v1.model.UserProfile();\n        var cred = new com.eis.core.api.v1.model.UserIdPasswordCredential();\n        cred.setUserId(refName);\n        cred.setPassword(\"mypassword\");\n\n        testProfile.setRefName(refName);\n        testProfile.setDisplayName(displayName);\n        testProfile.setDataDomain(dataDomain);\n        testProfile.setFirstName(\"Portal\");\n        testProfile.setLastName(\"User\");\n\n        testProfile.setEmailAddress(\"vendor-\" + vendorEmailName + \"@gnc.com\");\n        testProfile.setUserIdPasswordToken(cred);\n        if (vendorType === 'Form Portal') {\n            testProfile.setHomePageURL(\"/fulfillment/requests/\");\n            var dataDomainPolicy = createFormUserDataDomainPolicy(org);\n            testProfile.setDataDomainPolicy(dataDomainPolicy);\n            testProfile.setRootDirectory(\"/vendors/\"+vendorEmailName);\n            \n            \n        } else if (vendorType === 'File Portal') {\n            testProfile.setHomePageURL(\"/data-management/communications/files/\");\n            var dataDomainPolicy = createFileUserDataDomainPolicy(org);\n            testProfile.setDataDomainPolicy(dataDomainPolicy);\n        } else if (vendorType === 'EDI') {\n            testProfile.setHomePageURL(\"/fulfillment/requests/\");\n            var dataDomainPolicy = createEDIUserDataDomainPolicy(org);\n            testProfile.setDataDomainPolicy(dataDomainPolicy);\n        }\n\n\t\t\n\t\t var account = accountService.getByRefName(\"PerformanceBikes-Account\");\n\t\t\n        testProfile.setOwningAccountId(account.getId());\n        testProfile.getUserGroups().add(createVendorUserGroup(org));\n        testProfile = userProfileService.save(testProfile);\n\n    } else {\n        if (vendorType === 'Form Portal') {\n            testProfile.setHomePageURL(\"/fulfillment/requests/\");\n            var dataDomainPolicy = createFormUserDataDomainPolicy(org);\n            testProfile.setDataDomainPolicy(dataDomainPolicy);\n        } else if (vendorType === 'File Portal') {\n            testProfile.setHomePageURL(\"/data-management/communications/files/\");\n            var dataDomainPolicy = createFileUserDataDomainPolicy(org);\n            testProfile.setDataDomainPolicy(dataDomainPolicy);\n        } else if (vendorType === 'EDI') {\n            testProfile.setHomePageURL(\"/fulfillment/requests/\");\n            var dataDomainPolicy = createEDIUserDataDomainPolicy(org);\n            testProfile.setDataDomainPolicy(dataDomainPolicy);\n        }\n\n        testProfile.getUserGroups().add(createVendorUserGroup(org));\n        testProfile = userProfileService.save(testProfile);\n    }\n    return testProfile;\n\n}\n\nfunction createVendorUserGroup(org) {\n\n    //var refName = \"vendor-\" + org.getRefName() + \"UserGroup\";\n    //var displayName = \"vendor-\" + org.getRefName() + \"UserGroup\";\n    var Name = createVendorEmailName(org.getCompanyName());\n    var refName = \"vendor-\" + Name + \"UserGroup\";\n\tvar displayName = \"vendor-\" + Name + \"UserGroup\";\n\n\t\n    var userGroup = userGroupService.getByRefName(refName);\n    if (userGroup === null) {\n        userGroup = com.eis.core.api.v1.model.UserGroup();\n        userGroup.setRefName(refName);\n        userGroup.setDisplayName(displayName);\n        userGroup.getRoles().add(createVendorRole(org));\n        userGroup.setDataDomain(dataDomain);\n        userGroup = userGroupService.save(userGroup);\n    } else {\n        userGroup.getRoles().clear();\n        userGroup.getRoles().add(createVendorRole(org));\n        userGroup = userGroupService.save(userGroup);\n    }\n    return userGroup;\n}\n\nfunction createVendorLocation(org, address) {\n    var vendorLocation = vendorLocationService.getByRefName(org.getRefName() + \"-location\");\n\n    if (vendorLocation === null) {\n        vendorLocation = new com.eis.core.api.v1.model.VendorLocation();\n        vendorLocation.setRefName(org.getRefName() + \"-location\");\n        vendorLocation.setDisplayName(org.getRefName() + \"-location\");\n    }\n\n    vendorLocation.setVendorRef(org.constructObjectReference());\n    vendorLocation.setLocationId(address.getRefName());\n    vendorLocation.setVendorLocationId(address.getRefName());\n    vendorLocation.setSiteType(\"VendorLocation\");\n    vendorLocation.setAddress(com.eis.core.api.v1.model.MailingAddress.copyToMailingAddress(address));\n    vendorLocation.setOrganization(org);\n\n\n    vendorLocation = vendorLocationService.save(vendorLocation);\n    return vendorLocation;\n\n}\n\nfunction createTradeAgreement(vendor, merchant, pricebook) {\n    //var mer = vendor.getRefName();\n    var refName = merchant.getRefName() + \"-\" + vendor.getRefName() + \"-ta\";\n\n    //var refName = merchant+\"-\"+vendor.getRefName()+\"-ta\"; \n    var tradeAgreement = tradeAgreementService.getByRefName(refName);\n\n    if (tradeAgreement === null) {\n        tradeAgreement = new com.eis.ssit.api.v1.model.TradeAgreement();\n        tradeAgreement.setRefName(refName);\n        tradeAgreement.setDisplayName(refName);\n    }\n\n    tradeAgreement.setBuyer(merchant);\n    tradeAgreement.setSeller(vendor);\n    tradeAgreement.setEffectiveStartDate(new java.util.Date());\n    tradeAgreement.setEffectiveEndDate(new java.util.Date());\n    tradeAgreement.setDefaultBuyerCurrency(com.eis.core.api.v1.model.CurrencyCode.USD);\n    tradeAgreement.setDefaultSellerCurrency(com.eis.core.api.v1.model.CurrencyCode.USD);\n    tradeAgreement.setPriceBook(pricebook);\n    tradeAgreement.setDefaultPaymentTerms(\"NET30\");\n    tradeAgreement = tradeAgreementService.save(tradeAgreement);\n    return tradeAgreement;\n}\n\n\nfunction createPriceBook(vendor, channelName) {\n\n    var refName = vendor.getRefName() + \"-pb\";\n    var displayName = vendor.getRefName() + \"-pb\";\n    var pb = priceBookService.getByRefName(refName);\n\n    if (pb === null) {\n        pb = new com.eis.ssit.api.v1.model.PriceBook();\n        pb.setRefName(refName);\n        pb.setDisplayName(displayName);\n    }\n\n    pb.setMaster(true);\n    //pb.setOrgOwnerRefName(vendor.getRefName());\n    //pb.setCurrency(com.eis.ssit.api.v1.model.CurrencyCode.USD);\n    pb.setCurrency(com.eis.core.api.v1.model.CurrencyCode.USD);\n    pb.setEntryPolicy(com.eis.ssit.api.v1.model.PriceBookEntryPolicy.EXCLUSIVE);\n    pb.setChannelRefName(channelName);\n    pb = priceBookService.save(pb);\n    return pb;\n}\n\nfunction createItemMaster(vendor) {\n\n    var refName = vendor.getRefName() + \"-im\";\n    var displayName = vendor.getRefName() + \"-im\";\n    var im = itemMasterService.getByRefName(refName);\n\n    if (im === null) {\n        im = new com.eis.ssit.api.v1.model.ItemMaster();\n        im.setRefName(refName);\n        im.setDisplayName(displayName);\n    }\n\n    im.setVendorReference(vendor.constructObjectReference());\n    im.setDescription(vendor.getCompanyName() + \" Item Master\");\n\n    im = itemMasterService.save(im);\n    return im;\n}\n\n\n\nfunction createOrgRefName(companyName) {\n    var inputString = companyName;\n    if (inputString == null) {\n        return null;\n    } else if (inputString === '') {\n        return inputString;\n    }\n\n    inputString = java.lang.String(inputString).replaceAll(\"[^a-zA-Z0-9]+\", \"\");\n    if (inputString.length > 25) {\n        inputString = inputString.substring(0, 25);\n    }\n\n    inputString = inputString.toLowerCase();\n    return inputString;\n\n}\n\nfunction getMerchant(refName) {\n    var merchant = organizationService.getByRefName(refName);\n\n    if (merchant === null) {\n\n    } else {\n\n        return merchant;\n    }\n\n}\n\nfunction getMerchantBuyerContact(merchant) {\n    var contacts = merchant.getContacts();\n    var contact = merchant.getPrimaryContact();\n    if (contacts.size() > 0) {\n        for (var x = 0; x < contacts.size(); x++) {\n            var orgContact = contacts.get(x);\n            if (\"SupportContact\" == orgContact.getRole()) {\n                contact = orgContact;\n                break;\n            }\n        }\n    }\n\n    return contact;\n}\n\nfunction getDefaultAddress(fields) {\n    var address = new com.eis.core.api.v1.model.PhysicalAddress();\n    address.setAddress1(removeWhiteSpace(fields[6]));\n    address.setAddress2(removeWhiteSpace(fields[7]));\n    address.setCity(removeWhiteSpace(fields[8]));\n    address.setState(removeWhiteSpace(fields[9]));\n    address.setCountry(removeWhiteSpace(fields[10]));\n    address.setZip5(removeWhiteSpace(fields[11]));\n    address.setRefName(removeWhiteSpace(fields[6]));\n    address.setDisplayName(removeWhiteSpace(fields[6]));\n    return address;\n\n}\n\n\nfunction getVendor(fields) {\n\n\tlog.info(\"Entered getVendor:\");\n    var newVendor = false;\n\n    var vendorName = removeWhiteSpace(fields[0]);\n    var vendorNumber = removeWhiteSpace(fields[1]);\n    var vendorType = removeWhiteSpace(fields[2]);\n    var contactName = removeWhiteSpace(fields[3]);\n    var phone1 = processPhoneNumber(removeWhiteSpace(fields[4]));\n    var emails = processPhoneNumber(removeWhiteSpace(fields[5]));\n  //var refName = createOrgRefName(vendorName);\n\n  //var vendor = vendorService.getByRefName(refName);\n    var vendor = vendorService.getByRefName(vendorNumber);\n\n    if (vendor === null) {\n        newVendor = true;\n    }\n    if (newVendor) {\n\t\tlog.info(\"newVendor is true:\");\n        var existingVendorByNumber = getVendorByVendorNumber(vendorNumber);\n        if (existingVendorByNumber !== null) {\n            taskHelper.notifyAndCreateTask(\n                \"Existing Vendor With Vendor Number:\" + vendorNumber + \" was found.:\" + java.lang.System.nanoTime(),\n                \"Existing Vendor With Vendor Number:\" + vendorNumber + \" was found.\",\n                \"Existing Vendor With Vendor Number:\" + vendorNumber + \" was found. Please check to see that the vendors are set up correctly with the correct vendor number.\",\n                \"Vendor Set Up Failure\", \"com.gnc\",\n                \"Vendor Set Up Failure\", \"vendor-setup-failure\", \"Tony Costanzo\");\n            //throw new com.eis.core.api.v1.exception.AccountConfigurationException(\"Account Setup Invalid\");  \n\n        } else {\n\t\t\tlog.info(\"newVendor is true2:\");\n            vendor = new com.eis.core.api.v1.model.Vendor();\n            vendor.setRefName(vendorNumber);\n            vendor.setDisplayName(vendorName);\n            vendor.getOrgRoles().clear();\n            vendor.getOrgRoles().add(com.eis.core.api.v1.model.OrganizationRole.Vendor);\n            vendor.getDynAttributes().put(\"vendorNumber\", vendorNumber);\n            vendor.getDynAttributes().put(\"vendorType\", vendorType);\n            vendor.setOrganizationReferenceId(vendorNumber);\n            vendor.setOrganizationAccessType(vendorType);\n            //vendor.setActive(true);\n            vendor.setCompanyName(vendorName);\n\n            var address = getDefaultAddress(fields);\n\n            var contact = updatePrimaryContact(vendor, merchant, contactName, phone1, emails, address);\n\n            vendor.setAddress(address);\n\n            vendor = vendorService.save(vendor);\n            var vendorType = vendor.getDynAttributes().get(\"vendorType\");\n            //var dataDomain = \"com.gnc\";\n\n            //createVendorLocation(vendor, address);\n\n            var dataDomains = getVendorDataDomains(vendor)\n            var fileSystemEntry = createFileSystemEntryHome(vendor, dataDomains, homeDirectory);\n            createVendorUserProfile(vendor, fileSystemEntry);\n\n\n            pb = createPriceBook(vendor, \"Dropship\");\n            var merchant = getMerchant(removeWhiteSpace(fields[1]));\n            var tradeAgreement = createTradeAgreement(vendor, merchant, pb);\n            vendor.getTradeAgreements().add(tradeAgreement);\n            vendor.setCurrentTradeAgreement(tradeAgreement);\n           // createItemMaster(vendor);\n            createDefaultPackageOptions(vendor);\n\n        }\n    }\n    /*else {\n        //var address = getDefaultAddress();\n        //updatePrimaryContact(vendor,merchant, contactName, phone1, emails, address);\n        //vendor = vendorService.save(vendor);\n\n        var vendorType = vendor.getDynAttributes().get(\"vendorType\");\n        var dataDomain = \"com.gnc\";\n\n       var dataDomains = new java.util.ArrayList(); \n       dataDomains.add(dataDomain);\n       domains.add(dataDomain + \".vendors.\" + vendor.getRefName());\n\n\n        var fileSystemEntry = createFileSystemEntryHome(vendor, dataDomains, homeDirectory);\n        createVendorUserProfile(vendor, fileSystemEntry);\n\n\n        pb = createPriceBook(vendor, \"Dropship\");\n        var merchant = getMerchant(removeWhiteSpace(fields[1]));\n        var tradeAgreement = createTradeAgreement(vendor, merchant, pb);\n        vendor.getTradeAgreements().add(tradeAgreement);\n        vendor.setCurrentTradeAgreement(tradeAgreement);\n        createItemMaster(vendor);\n        createDefaultPackageOptions(vendor);\n\n    }*/\n}\n\n//var dataDomain = \"com.gnc\";\nvar dataDomain = com.eis.security.multitenancy.model.SecureSession.getDefaultDataDomain();\nvar br = new java.io.BufferedReader(new java.io.InputStreamReader(org.apache.commons.io.IOUtils.toInputStream(body)));\n\nvar csvReader = new com.opencsv.CSVReader(br, ',');\nvar rowFields = csvReader.readNext();\n//var merchant = getMerchant(\"shimano2\");\nvar homeDirectory = getVendorHomeDirectory();\nlog.info(\"homeDirectory :\" + homeDirectory);\nlog.info(\"fields :\" + fields);\nwhile (rowFields) {\n    rowFields = csvReader.readNext();\n    if (rowFields) {\n        var vendorNum = rowFields[1];\n        log.info(\"vendorNum :\" + vendorNum);\n        var vendorType = rowFields[2];\n        if (vendorNum !== 'TBD' && (vendorType !== \"TBD\" && vendorType !== \"N/A\")) {\n            getVendor(rowFields);\n\n        }\n    }\n}\n\ncsvReader.close();",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "inventorySync",
    "refKey" : "7892949dba97a8e8ab54db78e1a7f694",
    "displayName" : "inventorySync",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "inventorySync" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531383956414,
      "createUser" : "Saket Satyarthi",
      "updateTs" : 1538714254617,
      "updateUser" : "Saket Satyarthi"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "984ac88d-3f72-4f11-8a7c-2b26dec77783",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        },
        "header_CamelFileName" : {
          "id" : null,
          "refName" : "header_CamelFileName",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_CamelFileName",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "businessNumberGeneratorDAO" : {
        "type" : "javaBean",
        "name" : "businessNumberGeneratorDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "emailNotifier" : {
        "type" : "javaBean",
        "name" : "emailNotifier",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "header_CamelFileName" : {
        "type" : "scriptInputVariable",
        "name" : "header_CamelFileName",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_CamelFileName",
        "parameters" : { }
      },
      "inventoryPoolEntryAuditLogEntryDAO" : {
        "type" : "javaBean",
        "name" : "inventoryPoolEntryAuditLogEntryDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryPoolEntryDAO" : {
        "type" : "javaBean",
        "name" : "inventoryPoolEntryDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryPoolEntryService" : {
        "type" : "serviceBean",
        "name" : "inventoryPoolEntryService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolEntryService",
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryPoolService" : {
        "type" : "serviceBean",
        "name" : "inventoryPoolService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolService",
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationService" : {
        "type" : "serviceBean",
        "name" : "organizationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "organizationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "productService" : {
        "type" : "serviceBean",
        "name" : "productService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "productService",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderService" : {
        "type" : "serviceBean",
        "name" : "salesOrderService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderService",
        "parameterName" : null,
        "parameters" : { }
      },
      "scriptUtils" : {
        "type" : "javaBean",
        "name" : "scriptUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "siteDAO" : {
        "type" : "javaBean",
        "name" : "siteDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "siteService" : {
        "type" : "serviceBean",
        "name" : "siteService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "siteService",
        "parameterName" : null,
        "parameters" : { }
      },
      "skuDAO" : {
        "type" : "javaBean",
        "name" : "skuDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "skuService" : {
        "type" : "serviceBean",
        "name" : "skuService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "skuService",
        "parameterName" : null,
        "parameters" : { }
      },
      "taskHelper" : {
        "type" : "javaBean",
        "name" : "taskHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorService" : {
        "type" : "serviceBean",
        "name" : "vendorService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "utility",
  "inputs" : { },
  "result" : null,
  "active" : false,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "MyTestCopySecurityPolicy",
    "refKey" : "5827b3d2e84ae8409976328fa8f0ca84",
    "displayName" : "MyTestCopySecurityPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "MyTestCopySecurityPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531384513737,
      "createUser" : "Saket Satyarthi",
      "updateTs" : 1535326495317,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "3ca01532-b426-4906-a351-15394a7b5546",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventoryallocationEnginegncactions" : "com.eis.oms.inventory.allocationEngine.gnc.actions",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "inventorySync",
    "refId" : "984ac88d-3f72-4f11-8a7c-2b26dec77783",
    "refKey" : "7892949dba97a8e8ab54db78e1a7f694",
    "displayName" : "inventorySync",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "MyTestCopySecurityPolicy",
    "refId" : "3ca01532-b426-4906-a351-15394a7b5546",
    "refKey" : "5827b3d2e84ae8409976328fa8f0ca84",
    "displayName" : "MyTestCopySecurityPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : null,
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}