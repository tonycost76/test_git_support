{
  "refName" : "VendorPerformanceReport",
  "refKey" : "e5e912975943cecf6f8da8c18ba565bb",
  "displayName" : "VendorPerformanceReport",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1562615414076,
    "createUser" : "GNC VDP",
    "updateTs" : 1562676171224,
    "updateUser" : "GNC VDP"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "9f14d3a5-88a2-441a-8842-f17070795cfa",
  "script" : "\r\n\r\nfunction queryForData() {\r\n    var ytdEndDate = new org.joda.time.DateTime();\r\n    var ytdStartDate = new org.joda.time.DateTime(ytdEndDate.getYear(), 1, 1, 0, 0, 0);\r\n    \r\n    var queryFormatter = org.joda.time.format.DateTimeFormat.forPattern(\"yyyy-MM-dd\");\r\n    var queryStartDate = queryFormatter.print(ytdStartDate);\r\n    var queryEndDate = queryFormatter.print(ytdEndDate);\r\n    \r\n    var  dataDomains = java.util.Collections.singletonList(\"*\");\r\n    var query = 'header.dueDate:>=' + queryStartDate + '&&header.dueDate:<=' \r\n        + queryEndDate + '&&dataDomain:com.%'; \r\n    \r\n    return vendorDataUtils.shipmentRequestVendorSLAStats(query, dataDomains,\r\n              \".*[.].*[.].*\", // Exclude subdomains from consideration\r\n              false, false, -1);\r\n} \r\n\r\nfunction createNewVendorStats(obj) {\r\n    var totalCount = obj.get(\"numShipmentReqs\");\r\n    var slaComplianceCount = obj.get(\"slaComplianceCount\");\r\n    var cancelledCount = obj.get(\"numShipmentReqsCancelled\");\r\n    var delayedCount = totalCount - slaComplianceCount - cancelledCount;\r\n    var invoicedCount = obj.get(\"numShipmentReqsInvoiced\");\r\n    \r\n    java.lang.System.out.println(\"$$$$$$$$totalCount:\"+obj.get(\"numShipmentReqs\"))\r\n      \r\n    vendorStats = {};\r\n    vendorStats.totalCount = totalCount;\r\n    vendorStats.totalRevenue = obj.get(\"totalAmountDue\");\r\n    vendorStats.shippedInTimeCount = slaComplianceCount;\r\n    vendorStats.shippedInTimePercent = totalCount > 0 ? (slaComplianceCount / totalCount) * 100 : 0;\r\n    vendorStats.delayedCount = delayedCount;\r\n    vendorStats.delayedPercent = totalCount > 0 ? (delayedCount / totalCount) * 100 : 0;\r\n    vendorStats.cancelledCount = cancelledCount;\r\n    vendorStats.cancelledPercent = totalCount > 0 ? (cancelledCount / totalCount) * 100 : 0;\r\n    vendorStats.invoicedCount = invoicedCount;\r\n    vendorStats.notInvoicedCount = totalCount - cancelledCount - invoicedCount;\r\n    \r\n    return vendorStats;\r\n}\r\n\r\nfunction aggregateVendorStats(vendorData, obj) {\r\n   \r\n    var totalCount = obj.get(\"numShipmentReqs\") + vendorData.totalCount;\r\n    var slaComplianceCount = obj.get(\"slaComplianceCount\") + vendorData.shippedInTimeCount;\r\n    var cancelledCount = obj.get(\"numShipmentReqsCancelled\") + vendorData.cancelledCount;\r\n    var delayedCount = totalCount - slaComplianceCount - cancelledCount;\r\n    var invoicedCount = obj.get(\"numShipmentReqsInvoiced\") + vendorData.invoicedCount;\r\n    \r\n     java.lang.System.out.println(\"*******Obj:\"+obj+\" vendorData:\"+vendorData+\", vendorData.totalCount:\"+vendorData.totalCount+\", totalCount:\"+totalCount);\r\n  \r\n    vendorData.totalCount = totalCount;\r\n    vendorData.totalRevenue = vendorData.totalRevenue + obj.get(\"totalAmountDue\");\r\n    vendorData.shippedInTimeCount =  slaComplianceCount;\r\n    vendorData.shippedInTimePercent = totalCount > 0 ? (slaComplianceCount / totalCount) * 100 : 0;\r\n    vendorData.delayedCount = delayedCount;\r\n    vendorData.delayedPercent = totalCount > 0 ? (delayedCount / totalCount) * 100 : 0;\r\n    vendorData.cancelledCount = cancelledCount;\r\n    vendorData.cancelledPercent = totalCount > 0 ? (cancelledCount / totalCount) * 100 : 0;\r\n    vendorData.invoicedCount = invoicedCount;\r\n    vendorData.notInvoicedCount = totalCount - cancelledCount - invoicedCount;\r\n}\r\n\r\nfunction processQueryResults(queryResults) {\r\n    var results = new java.util.LinkedHashMap();\r\n    var dueDateFormatter = org.joda.time.format.DateTimeFormat.forPattern(\"yyyy-MM-dd\");\r\n    \r\n    var lastWeekReportPeriod = com.eis.core.api.v1.model.ReportPeriod.LW;\r\n    var reportData = billingHelper.getReportPeriodFilter(lastWeekReportPeriod, \"startDateTime\", new org.joda.time.DateTime());\r\n    var reportDateFormatter = org.joda.time.format.DateTimeFormat.forPattern(\"MM-dd-yyyy\");\r\n    var lwStartDate = reportDateFormatter.parseDateTime(reportData.getStartDate());\r\n    var lwEndDate = reportDateFormatter.parseDateTime(reportData.getEndDate());\r\n    \r\n    \r\n    for (var obj in Iterator(queryResults)) {\r\n      var key = obj.get(\"vendorDisplayName\") + \" - \" + obj.get(\"vendorRefName\");\r\n      var vendorData;\r\n      var dueDate = dueDateFormatter.parseDateTime(obj.get(\"dueDate\"));\r\n      \r\n      if(results.containsKey(key)) {\r\n          vendorData = results.get(key);\r\n          java.lang.System.out.println(\"Vendor Data is:\"+vendorData.ytd);\r\n          var ytdVendorData = vendorData.ytd;\r\n          aggregateVendorStats(ytdVendorData, obj);\r\n          \r\n          if(dueDate.isAfter(lwStartDate) && dueDate.isBefore(lwEndDate)) {\r\n              var lwVendorData = vendorData.lw;\r\n              aggregateVendorStats(lwVendorData, obj);\r\n          }\r\n      } else {\r\n          var vendorStats = createNewVendorStats(obj);\r\n          vendorData = {};\r\n          vendorData.ytd = vendorStats;\r\n          \r\n          if(dueDate.isAfter(lwStartDate) && dueDate.isBefore(lwEndDate)) {\r\n              vendorData.lw = vendorStats;\r\n          } else {\r\n              var vendorStats = {};\r\n              vendorStats.totalCount = 0;\r\n              vendorStats.totalRevenue = 0;\r\n              vendorStats.shippedInTimeCount =  0;\r\n              vendorStats.shippedInTimePercent = 0;\r\n              vendorStats.delayedCount = 0;\r\n              vendorStats.delayedPercent = 0;\r\n              vendorStats.cancelledCount = 0;\r\n              vendorStats.cancelledPercent = 0;\r\n              vendorStats.invoicedCount = 0;\r\n              vendorStats.notInvoicedCount = 0;\r\n              vendorData.lw = vendorStats;\r\n          }\r\n      }\r\n      \r\n      results.put(key, vendorData);\r\n    }\r\n    \r\n    return results;\r\n}\r\n\r\nvar it =  queryForData();\r\nvar data = processQueryResults(it);\r\nit.close();\r\n\r\n\r\n\r\nvar output = new java.util.ArrayList();\r\n//todo: iterate through yearData keyset and combine with weekdata for required output structure\r\nvar it = data.entrySet().iterator();\r\nwhile (it.hasNext()) {\r\n    var pair = it.next();\r\n    var vendorName = pair.getKey();\r\n    var entry = pair.getValue();\r\n    entry.vendorName = vendorName;\r\n    output.add(entry);\r\n}\r\noutput;",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "VendorPerformanceReport",
    "refKey" : "e5e912975943cecf6f8da8c18ba565bb",
    "displayName" : "VendorPerformanceReport",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "VendorPerformanceReport" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1562615230179,
      "createUser" : "GNC VDP",
      "updateTs" : null,
      "updateUser" : null
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "e5dbecec-6eb6-4d66-a8c5-59cb8eca3e9b",
    "inputs" : {
      "name" : null,
      "attributes" : { }
    },
    "outputs" : {
      "name" : null,
      "attributes" : {
        "output" : {
          "id" : null,
          "refName" : "output",
          "type" : "Object",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "output",
          "description" : null
        }
      }
    },
    "scriptContextObjects" : {
      "billingHelper" : {
        "type" : "javaBean",
        "name" : "billingHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorDataUtils" : {
        "type" : "javaBean",
        "name" : "vendorDataUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "reportData",
  "inputs" : { },
  "result" : null,
  "active" : true,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "gncPolicy",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "gncPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531337454496,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1591201352156,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1common" : "com.eis.b2bmb.api.v1.common",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbcamelcustomutil" : "com.eis.b2bmb.camel.custom.util",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscloudcanonicalmodel" : "com.eis.cloud.canonical.model",
      "comeiscloudcanonicalmodelimports" : "com.eis.cloud.canonical.model.imports",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrskwiapiv1model" : "com.eis.extsvrs.kwi.api.v1.model",
      "comeisextsvrskwiapiv1services" : "com.eis.extsvrs.kwi.api.v1.services",
      "comeisextsvrsquickbooksapiv1dao" : "com.eis.extsvrs.quickbooks.api.v1.dao",
      "comeisextsvrsshipstationapiv1exception" : "com.eis.extsvrs.shipstation.api.v1.exception",
      "comeisextsvrsshipstationapiv1model" : "com.eis.extsvrs.shipstation.api.v1.model",
      "comeisextsvrsshipstationapiv1services" : "com.eis.extsvrs.shipstation.api.v1.services",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisextsvrssnapfulfilapiv1dao" : "com.eis.extsvrs.snapfulfil.api.v1.dao",
      "comeisextsvrssnapfulfilapiv1model" : "com.eis.extsvrs.snapfulfil.api.v1.model",
      "comeisextsvrssnapfulfilapiv1services" : "com.eis.extsvrs.snapfulfil.api.v1.services",
      "comeisextsvrssnapfulfilapiv1util" : "com.eis.extsvrs.snapfulfil.api.v1.util",
      "comeisgitimpl" : "com.eis.git.impl",
      "comeisgitmodel" : "com.eis.git.model",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngine" : "com.eis.oms.inventory.allocationEngine",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysync" : "com.eis.oms.inventory.sync",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparserscustomer" : "com.eis.ssit.parsers.customer",
      "comeisssitparserspricing" : "com.eis.ssit.parsers.pricing",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersvendor" : "com.eis.ssit.parsers.vendor",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comfasterxmljacksondataformatxml" : "com.fasterxml.jackson.dataformat.xml",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunorgapachexmlinternalserialize" : "com.sun.org.apache.xml.internal.serialize",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilregex" : "java.util.regex",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscodecbinary" : "org.apache.commons.codec.binary",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecommonslangtime" : "org.apache.commons.lang.time",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "VendorPerformanceReport",
    "refId" : "e5dbecec-6eb6-4d66-a8c5-59cb8eca3e9b",
    "refKey" : "e5e912975943cecf6f8da8c18ba565bb",
    "displayName" : "VendorPerformanceReport",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "gncPolicy",
    "refId" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "admin@gnc.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}