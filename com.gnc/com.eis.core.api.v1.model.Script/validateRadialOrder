{
  "refName" : "validateRadialOrder",
  "refKey" : "074fff885391bb4bb4d48ca1c00e8473",
  "displayName" : "validateRadialOrder",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1550572664250,
    "createUser" : "Lakshmi Ashok Kumar",
    "updateTs" : 1557497008664,
    "updateUser" : "GNC VDP"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "c8a43ac9-186d-4a88-82e8-d13c8cfe360c",
  "script" : "var log = org.slf4j.LoggerFactory.getLogger(\"validateRadialOrder:\");\r\n\r\nfunction isBlank(value) {\r\n\tif (value === null || value === undefined || value.trim() === '') {\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction createTaskandEmail(message) {\r\n\tvar message = \"Invalid \" + message;\r\n\tvar subject = \"Validation errors for Radial Order File:\"+ header_CamelFileName;\r\n\t\r\n\tvar velocityContext = new org.apache.velocity.VelocityContext();\r\n\tvelocityContext.put(\"description\", \"The file \" + header_CamelFileName + \" has failed because of the following incorrect data\");\r\n\tvelocityContext.put(\"error\", message);\r\n\r\n\tvar body = scriptUtils.buildMessageFromVelocityTemplate(\"inbound/templates/validateRadialOrder.vm\", velocityContext);\r\n\t\r\n\tvar mailbox = scriptUtils.getMailbox(\"Radial-Order-Errors-Email\", dataDomain);\r\n\r\n    var mailIds = \"lakumar@envistacorp.com\"; \r\n\r\n\tscriptUtils.createMailboxEntry(mailbox, body, \"InvalidOrder.html\", subject, mailIds, \"alerts@enspirecommerce.com\", null, null, \"text/html\" , true , null , dataDomain);  \r\n\r\n\ttaskHelper.notifyAndCreateTask(\r\n\t\tsubject + \"-\" + java.lang.System.nanoTime(),\r\n\t\tsubject,\r\n\t\tmessage,\r\n\t\tsubject, dataDomain,\r\n\t\tsubject, \"order-validation-error\", \"GNC Admin\");\r\n}\r\n\r\nfunction parseLine(line)\r\n{\r\n\tvar lineStr = new java.lang.String(line);\r\n\tif(lineStr.startsWith(\"H1\"))\r\n\t{\r\n\t\tvalidateHeader(line);\r\n\t}\r\n\telse if(lineStr.startsWith(\"D1\"))\r\n\t{\r\n\t\tvalidateLine(line);\r\n\t}\r\n\treturn;\r\n}\r\n\r\nfunction validateExists(field, fieldName)\r\n{\r\n\tif(isBlank(field))\r\n\t\tthrow new com.eis.core.api.v1.exception.B2BException(fieldName);\r\n}\r\n\r\nfunction validateForLength(field, length, fieldName, matchLength)\r\n{\r\n\tif (log.isInfoEnabled()) \r\n\t\t\tlog.info(\"********laks validateForLength: \" + field);\r\n\tvar fieldStr = new java.lang.String(field);\r\n\tif(!isBlank(field))\r\n\t{\r\n\t\tif(matchLength)\r\n\t\t{\r\n\t\t\tif(fieldStr.length() !== length)\r\n\t\t\t{\r\n\t\t\t\tthrow new com.eis.core.api.v1.exception.B2BException(fieldName);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(fieldStr.length() > length)\r\n\t\t{\r\n\t\t\tthrow new com.eis.core.api.v1.exception.B2BException(fieldName);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction validateHeaderFields(fields)\r\n{\r\n\tvar hdrSize = fields.size();\r\n\tfor(var i = 0 ; i < hdrSize ; i++)\r\n\t{\r\n\t\tvar field = fields.get(i);\r\n\t\tswitch(i)\r\n\t\t{\r\n\t\t\tcase 0:\r\n\t\t\t\tif(!isBlank(field) && !(\"H1\" === field))\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new com.eis.core.api.v1.exception.B2BException(\"Record Identifier for Header\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tvalidateForLength(field, 14 ,\"Invoice Number\" , false);\r\n\t\t\t\tbreak;\t\t\t\t\r\n\t\t\tcase 4:\r\n\t\t\t\tvalidateForLength(field, 30 ,\"Customer Order Number\" , false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tvalidateForLength(field, 14 ,\"Order Entry Date\" , true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 9:\r\n\t\t\t\tvalidateForLength(field, 10 ,\"Bill To Customer  ID\" , true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 10:\r\n\t\t\t\tvalidateForLength(field, 60 ,\"Bill To  Full Name\" , false);\r\n\t\t\t\tbreak;\t\t\t\t\r\n\t\t\tcase 11:\r\n\t\t\t\tvalidateForLength(field, 50 ,\"Bill To Address 1\" , false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 14:\r\n\t\t\t\tvalidateForLength(field, 30 ,\"Bill To City\" , false);\r\n\t\t\t\tbreak;\t\r\n\t\t\tcase 15:\r\n\t\t\t\tvalidateExists(field, \"Bill To State/Province\");\r\n\t\t\t\tbreak;\t\r\n\t\t\tcase 16:\r\n\t\t\t\tvalidateExists(field, \"Bill To Country Code\");\r\n\t\t\t\tif(!((\"US\" === field) ||  (\"USA\"=== field)))\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new com.eis.core.api.v1.exception.B2BException(\"Bill To Country Code\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 17:\r\n\t\t\t\tvalidateExists(field, \"Bill To Zip/Postal Code\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 18:\r\n\t\t\t\t/**\r\n\t\t\t\tvalidateExists(field, \"Bill To Phone Number\");\r\n\t\t\t\tvar fieldStr = new java.lang.String(field);\r\n\t\t\t\tif (!((fieldStr.matches(\"\\\\d{10}\")) || (fieldStr.matches(\"\\\\d{3}[-\\\\.\\\\s]\\\\d{3}[-\\\\.\\\\s]\\\\d{4}\"))))\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new com.eis.core.api.v1.exception.B2BNotFoundException(fieldStr );\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t**/\r\n\t\t\t\tbreak;\r\n\t\t\tcase 19:\r\n\t\t\t\tvalidateForLength(field, 60 ,\"Ship To Customer  Full Name\" , false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 20:\r\n\t\t\t\tvalidateForLength(field, 50 ,\"Ship To Address 1\" , false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 23:\r\n\t\t\t\tvalidateForLength(field, 30 ,\"Ship To City\" , false);\r\n\t\t\t\tbreak;\t\r\n\t\t\tcase 24:\r\n\t\t\t\tvalidateExists(field, \"Ship To State/Province\");\r\n\t\t\t\tbreak;\t\r\n\t\t\tcase 25:\r\n\t\t\t\tvalidateExists(field, \"Ship To Country Code\");\r\n\t\t\t\tif(!((\"US\" === field) ||  (\"USA\"=== field)))\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new com.eis.core.api.v1.exception.B2BException(\"Ship To Country Code\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 26:\r\n\t\t\t\tvalidateExists(field, \"Ship To Zip/Postal Code\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 27:\r\n\t\t\t\t/**\r\n\t\t\t\tvalidateExists(field, \"Ship To Phone Number\");\r\n\t\t\t\tvar fieldStr = new java.lang.String(field);\r\n\t\t\t\tif (!((fieldStr.matches(\"\\\\d{10}\")) || (fieldStr.matches(\"\\\\d{3}[-\\\\.\\\\s]\\\\d{3}[-\\\\.\\\\s]\\\\d{4}\"))))\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new com.eis.core.api.v1.exception.B2BException(\"Ship To Phone Number\");\r\n\t\t\t\t}\r\n\t\t\t\t**/\r\n\t\t\t\tbreak;\r\n\t\t\tcase 28:\r\n\t\t\t\tif( !(isBlank(field) || (\"USPS\" === field) ||  (\"FEDX\" === field) ||  (\"ANY\" === field)))\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new com.eis.core.api.v1.exception.B2BException(\"Carrier Code\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 29:\r\n\t\t\t\tif( !(isBlank(field) || (\"1DAY\" === field) ||  (\"2DAY\" === field) ||  (\"GRD\" === field)\r\n\t\t\t\t||  (\"PRIOR\" === field) ))\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new com.eis.core.api.v1.exception.B2BException(\"Carrier Mode\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t default:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction validateHeader(str){\r\n\tvar sc = new java.util.Scanner(str);\r\n\tsc.useDelimiter(java.util.regex.Pattern.compile(\"[|]\"));\r\n\tvar fields = new java.util.ArrayList();\r\n\t// Check if there is another line of input\r\n\twhile(sc.hasNext()){\r\n\t\tvar field = sc.next();\r\n\t\tfields.add(field);\r\n\t}\r\n\tsc.close();\r\n\tvalidateHeaderFields(fields);\r\n}\r\n\r\n\r\nfunction validateDetailFields(fields)\r\n{\r\n\tvar hdrSize = fields.size();\r\n\tfor(var i = 0 ; i < hdrSize ; i++)\r\n\t{\r\n\t\tvar field = fields.get(i);\r\n\t\tswitch(i)\r\n\t\t{\r\n\t\t\tcase 0:\r\n\t\t\t\tif(!isBlank(field) && !(\"D1\" === field))\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new com.eis.core.api.v1.exception.B2BException(\"Record Identifier for Detail\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tvalidateForLength(field, 4 ,\"Order Line Number\" , false);\r\n\t\t\t\tbreak;\t\t\t\t\r\n\t\t\tcase 3:\r\n\t\t\t\tvalidateForLength(field, 15 ,\"Vendor Part Number\" , false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tvalidateForLength(field, 7 ,\"Ordered Quantity\" , true);\r\n\t\t\t\tif(!org.apache.commons.lang3.StringUtils.isNumeric(field))\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new com.eis.core.api.v1.exception.B2BException(\"Ordered Quantity\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\t\r\n\t\t\t default:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction validateDetail(str)\r\n{\r\n\tvar sc = new java.util.Scanner(str);\r\n\tsc.useDelimiter(java.util.regex.Pattern.compile(\"[|]\"));\r\n\tvar fields = new java.util.ArrayList();\r\n\t// Check if there is another line of input\r\n\twhile(sc.hasNext()){\r\n\t\tvar field = sc.next();\r\n\t\tfields.add(field);\r\n\t}\r\n\tsc.close();\r\n\tvalidateDetailFields(fields);\r\n}\r\n\r\nfunction validateRadialOrder(lines)\r\n{\r\n\tif(log.isInfoEnabled())\r\n\t{\r\n\t    log.info(\"*****Entering validateRadialOrder\" + lines);\r\n\t}\r\n\tvar size = lines.size();\r\n\tvar header = true;\r\n\tvar detail = false;\r\n\tvar success = true;\r\n\ttry\r\n\t{\r\n\t\tfor(var i = 0 ; i < size ; i++)\r\n\t\t{\r\n\t\t\tvar line = lines.get(i);\r\n\t\t\tif(header)\r\n\t\t\t{\r\n\t\t\t\tvalidateHeader(line);\r\n\t\t\t\theader = false;\r\n\t\t\t\tdetail = true;\r\n\t\t\t}\r\n\t\t\telse if(detail)\r\n\t\t\t{\r\n\t\t\t\tvalidateDetail(line);\r\n\t\t\t\tdetail = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tparseLine(line);\r\n\t\t\tbreak;\t\t\r\n\t\t}\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t \tif (log.isErrorEnabled()) {\r\n            log.error(\"stacktrace --\", e);\r\n        }\r\n        success = false;\r\n\t\tcreateTaskandEmail(e.message);\r\n\t}\r\n\treturn success;\r\n}\r\n\r\nfunction validateRadialOrders()\r\n{\r\n\tif(log.isInfoEnabled())\r\n\t{\r\n\t    log.info(\"*****Entering validateRadialOrders\");\r\n\t}\r\n\tvar scanner = new java.util.Scanner(body);\r\n\tvar orderMap = new java.util.HashMap();\r\n\tvar lines = null;\r\n\tvar i = 1;\r\n\tvar first = true;\r\n\twhile (scanner.hasNext()) {\r\n\t\tvar line = scanner.nextLine();\r\n\t\tif(log.isInfoEnabled())\r\n    \t{\r\n\t       log.info(\"***** validateRadialOrders line \" + line);\r\n\t    }\r\n\t\tif(new java.lang.String(line).startsWith(\"H1\"))\r\n\t\t{\r\n\t\t\tif(log.isInfoEnabled())\r\n    \t    {\r\n\t            log.info(\"***** H1 line\");\r\n\t        }\r\n\t\t\tif(!first)\r\n\t\t\t{\r\n\t\t\t   \tif(log.isInfoEnabled())\r\n\t            {\r\n\t                log.info(\"*****Adding to map validateRadialOrders\" + lines);\r\n\t            } \r\n\t\t\t    orderMap.put(i,lines);\r\n\t\t\t    i++;\r\n\t\t\t}\r\n\t\t\tlines = new java.util.ArrayList();\r\n\t\t\r\n\t\t}\r\n\t\tif(first)\r\n\t\t{\r\n\t\t    first = false;\r\n\t\t    if(lines === null)\r\n\t\t        lines = new java.util.ArrayList();\r\n\t\t}\r\n\t\tlines.add(line);\r\n\t}\r\n\tscanner.close();\r\n\torderMap.put(i,lines);\r\n\tif(log.isInfoEnabled())\r\n\t{\r\n\t    log.info(\"*****orderMap : \" , orderMap);\r\n\t}\r\n\t\r\n\tvar success = false;\r\n\tif(!orderMap.isEmpty())\r\n\t{\r\n\t    if(log.isInfoEnabled())\r\n\t    {\r\n\t        log.info(\"*****orderMap not empty\");\r\n\t    }\r\n\t\tvar itr = orderMap.values().iterator();\r\n\t\twhile(itr.hasNext())\t\r\n\t\t{\r\n\t\t\tvar lines = itr.next();\r\n\t\t\tif(validateRadialOrder(lines))\r\n\t\t\t{\r\n\t\t\t\tsuccess = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvar mailboxName=\"test-radial-invalid\";\r\n\tif(success)\r\n\t{\r\n\t\tmailboxName=\"SalesOrder-To-Map\";\r\n\t}\r\n    var mailbox = scriptUtils.getMailbox(mailboxName, dataDomain);\r\n\tscriptUtils.createMailboxEntry(mailbox, body, header_CamelFileName, header_CamelFileName, \"orders@oms.com\", \"orders@radial.com\", null, null, \"text/html\" , true , null , dataDomain);  \r\n}\r\n\r\nvar dataDomain = com.eis.security.multitenancy.model.SecureSession.getDefaultDataDomain();\r\nvalidateRadialOrders();\r\n",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "validateRadialOrder",
    "refKey" : "074fff885391bb4bb4d48ca1c00e8473",
    "displayName" : "validateRadialOrder",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "validateRadialOrder" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1550573121552,
      "createUser" : "Lakshmi Ashok Kumar",
      "updateTs" : 1550750742101,
      "updateUser" : "Lakshmi Ashok Kumar"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "220b0397-a860-42f5-b4ec-6974dbce824e",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        },
        "header_CamelFileName" : {
          "id" : null,
          "refName" : "header_CamelFileName",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_CamelFileName",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "header_CamelFileName" : {
        "type" : "scriptInputVariable",
        "name" : "header_CamelFileName",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_CamelFileName",
        "parameters" : { }
      },
      "scriptUtils" : {
        "type" : "javaBean",
        "name" : "scriptUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "taskHelper" : {
        "type" : "javaBean",
        "name" : "taskHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "routing",
  "inputs" : { },
  "result" : null,
  "active" : true,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "gncPolicy",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "gncPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531337454496,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1591201352156,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1common" : "com.eis.b2bmb.api.v1.common",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbcamelcustomutil" : "com.eis.b2bmb.camel.custom.util",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscloudcanonicalmodel" : "com.eis.cloud.canonical.model",
      "comeiscloudcanonicalmodelimports" : "com.eis.cloud.canonical.model.imports",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrskwiapiv1model" : "com.eis.extsvrs.kwi.api.v1.model",
      "comeisextsvrskwiapiv1services" : "com.eis.extsvrs.kwi.api.v1.services",
      "comeisextsvrsquickbooksapiv1dao" : "com.eis.extsvrs.quickbooks.api.v1.dao",
      "comeisextsvrsshipstationapiv1exception" : "com.eis.extsvrs.shipstation.api.v1.exception",
      "comeisextsvrsshipstationapiv1model" : "com.eis.extsvrs.shipstation.api.v1.model",
      "comeisextsvrsshipstationapiv1services" : "com.eis.extsvrs.shipstation.api.v1.services",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisextsvrssnapfulfilapiv1dao" : "com.eis.extsvrs.snapfulfil.api.v1.dao",
      "comeisextsvrssnapfulfilapiv1model" : "com.eis.extsvrs.snapfulfil.api.v1.model",
      "comeisextsvrssnapfulfilapiv1services" : "com.eis.extsvrs.snapfulfil.api.v1.services",
      "comeisextsvrssnapfulfilapiv1util" : "com.eis.extsvrs.snapfulfil.api.v1.util",
      "comeisgitimpl" : "com.eis.git.impl",
      "comeisgitmodel" : "com.eis.git.model",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngine" : "com.eis.oms.inventory.allocationEngine",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysync" : "com.eis.oms.inventory.sync",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparserscustomer" : "com.eis.ssit.parsers.customer",
      "comeisssitparserspricing" : "com.eis.ssit.parsers.pricing",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersvendor" : "com.eis.ssit.parsers.vendor",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comfasterxmljacksondataformatxml" : "com.fasterxml.jackson.dataformat.xml",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunorgapachexmlinternalserialize" : "com.sun.org.apache.xml.internal.serialize",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilregex" : "java.util.regex",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscodecbinary" : "org.apache.commons.codec.binary",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecommonslangtime" : "org.apache.commons.lang.time",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "validateRadialOrder",
    "refId" : "220b0397-a860-42f5-b4ec-6974dbce824e",
    "refKey" : "074fff885391bb4bb4d48ca1c00e8473",
    "displayName" : "validateRadialOrder",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "gncPolicy",
    "refId" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "scriptrunner@gnc.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}