{
  "refName" : "defaultpackingslip",
  "refKey" : "deadd213127cb650e43a217fc397d2ea",
  "displayName" : "defaultpackingslip",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1533673853776,
    "createUser" : "Hiram Knickerbocker",
    "updateTs" : 1533678472867,
    "updateUser" : "Hiram Knickerbocker"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "88093049-5d44-4649-a8cd-ce6b1de07979",
  "script" : "var newInstance = function(className, optionalStaticMethodName) {\r\n    var clazz = java.lang.Class.forName(className);\r\n    if (optionalStaticMethodName == null) {\r\n                var noArgCtor = clazz.getDeclaredConstructor(null);\r\n                return noArgCtor.invoke(null);\r\n    }\r\n    else {\r\n                var noArgMethod = clazz.getDeclaredMethod(optionalStaticMethodName, null);\r\n                return noArgMethod.invoke(null);\r\n    }\r\n}\r\n\r\n// Convoluted but the simpler \"DocumentBuilderFactory.newInstance()\" failed\r\nvar documentBuilderFactory = newInstance(\"javax.xml.parsers.DocumentBuilderFactory\", \"newInstance\");\r\nvar docBuilder = documentBuilderFactory.newDocumentBuilder();\r\nvar comboDoc = docBuilder.newDocument();\r\nvar combo = comboDoc.createElement(\"combo\");\r\ncomboDoc.appendChild(combo);\r\n\r\nvar appendDOM = function(srcXMLStr) {\r\n    var stream = new java.io.ByteArrayInputStream((new java.lang.String(srcXMLStr)).getBytes());\r\n    var srcDoc = docBuilder.parse(stream);\r\n    stream.close();\r\n\r\n    combo.appendChild(comboDoc.importNode(srcDoc.getDocumentElement(), true));\r\n}\r\n\r\nvar makeDataURLFromBlob = function(blob, contentTypeFallback) {\r\n    var contentType = (blob.getContentType() == null) ? contentTypeFallback : blob.getContentType();\r\n    return \"url('data:\" + contentType + \";base64,\"\r\n                + org.apache.commons.io.IOUtils.toString(\r\n                    new org.apache.commons.codec.binary.Base64InputStream(blob.getInputStream(), true), \"UTF-8\")\r\n                + \"')\"\r\n}\r\n\r\nvar makeDataURLForUPC = function(upc) {\r\n    var bean = new org.krysalis.barcode4j.impl.code128.Code128Bean();\r\n\r\n    var dpi = 300; // This calculation borrows from SalesOrderDAOImpl.save()\r\n    bean.setModuleWidth(org.krysalis.barcode4j.tools.UnitConv.in2mm(2.8/dpi));\r\n    bean.doQuietZone(false);\r\n    var outStream = new java.io.ByteArrayOutputStream();\r\n    var canvas = new org.krysalis.barcode4j.output.bitmap.BitmapCanvasProvider(outStream, \"image/x-png\", dpi, 12, false, 0);\r\n    bean.generateBarcode(canvas, upc);\r\n    outStream.close();\r\n    canvas.finish();\r\n\r\n    return \"url('data:image/x-ping;base64,\"\r\n                + org.apache.commons.codec.binary.Base64.encodeBase64String(outStream.toByteArray())\r\n                + \"')\";\r\n}\r\n\r\nvar replaceUPCsWithBarcodes = function(shipment) {\r\n    if (shipment.getPackages() != null) {\r\n                var lastPackage = null;\r\n\r\n                for (var it1 = shipment.getPackages().iterator(); it1.hasNext(); ) {\r\n                    var pkg = it1.next();\r\n                    var lastLineItem = null;\r\n\r\n                    if (pkg.getLineItems() != null) {\r\n                                for (var it2 = pkg.getLineItems().iterator(); it2.hasNext(); ) {\r\n                                    lastLineItem = it2.next();\r\n                                }\r\n                    }\r\n\r\n                    /* DEBUG: Uncomment this block of code to emulate the\r\n                     * effect of a large number of line items\r\n                    for (var i = 0; i < 10 && lastLineItem != null; i++) {\r\n                                pkg.getLineItems().add(lastLineItem);\r\n                    } */\r\n\r\n                    var lastPackage = pkg;\r\n                }\r\n\r\n                /* DEBUG: Uncomment this block of code to emulate the\r\n                * effect of more than one package\r\n                for (var i = 0; i < 1 && lastPackage != null; i++) {\r\n                    shipment.getPackages().add(lastPackage);\r\n                } */\r\n    }\r\n}\r\n\r\nvar shipment = shipmentService.getById(shipmentId);\r\n\r\nvar mapper = new com.eis.json.EnvisionJacksonJaxbXMLMapper();\r\nappendDOM(mapper.writeValueAsString(shipment));\r\n\r\nif (shipment.getOrderId() != null) {\r\n    var salesOrder = salesOrderService.getById(shipment.getOrderId());\r\n    if (salesOrder != null) {\r\n                appendDOM(mapper.writeValueAsString(salesOrder));\r\n\r\n                if (salesOrder.getHeader() != null && salesOrder.getHeader().getBarCodeBlobId() != null) {\r\n                    var barcodeBlob = blobService.getById(salesOrder.getHeader().getBarCodeBlobId());\r\n                    appendDOM(\"<order-barcode-url>\" + makeDataURLFromBlob(barcodeBlob) + \"</order-barcode-url>\");\r\n                }\r\n    }\r\n}\r\n\r\nif (shipment.getShipmentRequestId() != null) {\r\n    var shipmentRequest = shipmentRequestService.getById(shipment.getShipmentRequestId());\r\n    if (shipmentRequest != null) { appendDOM(mapper.writeValueAsString(shipmentRequest)); }\r\n\r\n    var logoEntry = fileSystemEntryService.getByRefName(\"printLogos/gnc.png\", \"com.gnc\");\r\n\r\n    if (logoEntry != null) {\r\n                var logoBlob = fileSystemEntryService.downloadFileContents(logoEntry);\r\n\r\n                appendDOM(\"<logo-url>\" + makeDataURLFromBlob(logoBlob, logoEntry.getContentType()) + \"</logo-url>\");\r\n    }\r\n}\r\n\r\nvar comboLS = comboDoc.getImplementation().getFeature(\"LS\", \"3.0\");\r\nvar comboLSO = comboLS.createLSOutput();\r\nvar comboLSS = comboLS.createLSSerializer();\r\n\r\nvar comboByteStream = new java.io.ByteArrayOutputStream();\r\ncomboLSO.setByteStream(comboByteStream);\r\ncomboLSS.write(comboDoc, comboLSO);\r\ncomboByteStream.close();\r\n\r\nshipmentEtAl = new java.lang.String(comboByteStream.toByteArray());\r\n\r\njava.lang.System.out.println(\"DEBUG shipmentEtAl:\" + shipmentEtAl);\r\n\r\n\"IGNORED\";\r\n",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "defaultpackingslip",
    "refKey" : "deadd213127cb650e43a217fc397d2ea",
    "displayName" : "defaultpackingslip",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "defaultpackingslip" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1533673698436,
      "createUser" : "Hiram Knickerbocker",
      "updateTs" : null,
      "updateUser" : null
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "98fb0b87-a5c6-416f-a6ed-bb09929bf930",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "shipmentId" : {
          "id" : null,
          "refName" : "shipmentId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "shipmentId",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : {
        "shipmentEtAl" : {
          "id" : null,
          "refName" : "shipmentEtAl",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "shipmentEtAl",
          "description" : null
        }
      }
    },
    "scriptContextObjects" : {
      "blobService" : {
        "type" : "serviceBean",
        "name" : "blobService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "blobService",
        "parameterName" : null,
        "parameters" : { }
      },
      "fileSystemEntryService" : {
        "type" : "serviceBean",
        "name" : "fileSystemEntryService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "fileSystemEntryService",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderService" : {
        "type" : "serviceBean",
        "name" : "salesOrderService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderService",
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentId" : {
        "type" : "scriptInputVariable",
        "name" : "shipmentId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "shipmentId",
        "parameters" : { }
      },
      "shipmentRequestService" : {
        "type" : "serviceBean",
        "name" : "shipmentRequestService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentRequestService",
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentService" : {
        "type" : "serviceBean",
        "name" : "shipmentService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "reportData",
  "inputs" : { },
  "result" : null,
  "active" : false,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "gncPolicy",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "gncPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531337454496,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1591201352156,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1common" : "com.eis.b2bmb.api.v1.common",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbcamelcustomutil" : "com.eis.b2bmb.camel.custom.util",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscloudcanonicalmodel" : "com.eis.cloud.canonical.model",
      "comeiscloudcanonicalmodelimports" : "com.eis.cloud.canonical.model.imports",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrskwiapiv1model" : "com.eis.extsvrs.kwi.api.v1.model",
      "comeisextsvrskwiapiv1services" : "com.eis.extsvrs.kwi.api.v1.services",
      "comeisextsvrsquickbooksapiv1dao" : "com.eis.extsvrs.quickbooks.api.v1.dao",
      "comeisextsvrsshipstationapiv1exception" : "com.eis.extsvrs.shipstation.api.v1.exception",
      "comeisextsvrsshipstationapiv1model" : "com.eis.extsvrs.shipstation.api.v1.model",
      "comeisextsvrsshipstationapiv1services" : "com.eis.extsvrs.shipstation.api.v1.services",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisextsvrssnapfulfilapiv1dao" : "com.eis.extsvrs.snapfulfil.api.v1.dao",
      "comeisextsvrssnapfulfilapiv1model" : "com.eis.extsvrs.snapfulfil.api.v1.model",
      "comeisextsvrssnapfulfilapiv1services" : "com.eis.extsvrs.snapfulfil.api.v1.services",
      "comeisextsvrssnapfulfilapiv1util" : "com.eis.extsvrs.snapfulfil.api.v1.util",
      "comeisgitimpl" : "com.eis.git.impl",
      "comeisgitmodel" : "com.eis.git.model",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngine" : "com.eis.oms.inventory.allocationEngine",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysync" : "com.eis.oms.inventory.sync",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparserscustomer" : "com.eis.ssit.parsers.customer",
      "comeisssitparserspricing" : "com.eis.ssit.parsers.pricing",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersvendor" : "com.eis.ssit.parsers.vendor",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comfasterxmljacksondataformatxml" : "com.fasterxml.jackson.dataformat.xml",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunorgapachexmlinternalserialize" : "com.sun.org.apache.xml.internal.serialize",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilregex" : "java.util.regex",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscodecbinary" : "org.apache.commons.codec.binary",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecommonslangtime" : "org.apache.commons.lang.time",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "defaultpackingslip",
    "refId" : "98fb0b87-a5c6-416f-a6ed-bb09929bf930",
    "refKey" : "deadd213127cb650e43a217fc397d2ea",
    "displayName" : "defaultpackingslip",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "gncPolicy",
    "refId" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "scriptrunner@gnc.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}