{
  "refName" : "vendorCreation",
  "refKey" : "110dfe7bed1ff9a19aaf864aee4d552b",
  "displayName" : "vendorCreation",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1534411448001,
    "createUser" : "Lakshmi Ashok Kumar",
    "updateTs" : 1554030838108,
    "updateUser" : "GNC VDP"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "7717dfc9-225b-40f7-b649-608a64a7aaaf",
  "script" : "var log = org.slf4j.LoggerFactory.getLogger(\"vendorSetup script:\");\nvar csvPackage = Packages.com.opencsv;\nvar stringUtilsPackage = Packages.org.apache.commons.lang;\nvar eisExceptionsPackage = Packages.com.eis.core.api.v1.exception;\nvar jsonMapper = new com.eis.json.EnvisionJacksonJaxbJSONMapper();\n\n\nfunction removeWhiteSpace(value) {\n    if (value !== null && value !== undefined) {\n        return new java.lang.String(value).trim();\n    } else {\n        return value;\n    }\n}\n\nfunction strEndsWith(str, suffix) {\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n\nfunction processPhoneNumber(value) {\n    if (!isBlank(value)) {\n        if (value.equals(\"00000000000000\")) {\n            value = \"0000000000\";\n        } else if (strEndsWith(value, \"0000\")) {\n            value = value.substring(0, 10);\n        }\n    } else {\n        value = \"0000000000\";\n    }\n\n    return value;\n\n}\n\nfunction isBlank(value) {\n    if (value === null || value === undefined || value === '') {\n        return true;\n    }\n\n    return false;\n}\n\nfunction getVendorByVendorNumber(vendorNumber) {\n    var vendor = null;\n    var vendors = organizationService.getList(0, 1, \"dynAttributes.vendorNumber:\" + vendorNumber, null, null);\n    if (vendors.size() > 0) {\n        vendor = vendors.get(0);\n    }\n    return vendor;\n}\n\nfunction createVendorEmailName(companyName) {\n    var inputString = companyName;\n    if (inputString == null) {\n        return null;\n    } else if (inputString === '') {\n        return inputString;\n    }\n\n    inputString = java.lang.String(inputString).replaceAll(\"[^a-zA-Z0-9]+\", \"\");\n    if (inputString.length > 25) {\n        inputString = inputString.substring(0, 25);\n    }\n\n    inputString = inputString.toLowerCase();\n    return inputString;\n\n}\n\nfunction createVendorLocation(org, address, fedExAccountNum, uspsAccountNum) {\n    var vendorLocation = vendorLocationService.getByRefName(org.getRefName()+\"-location\");\n    var shippingProfile = shippingProfileService.getByRefName(\"defaultshippingprofile\");\n    \n    \n    if(vendorLocation === null) {\n        vendorLocation = new com.eis.core.api.v1.model.VendorLocation();\n        vendorLocation.setRefName(org.getRefName()+\"-location\");\n        vendorLocation.setDisplayName(org.getRefName()+\"-location\");\n    }\n    \n    vendorLocation.setVendorRef(org.constructObjectReference());\n    vendorLocation.setLocationId(address.getRefName());\n    vendorLocation.setVendorLocationId(address.getRefName());\n    vendorLocation.setSiteType(\"VendorLocation\");\n    vendorLocation.setAddress(com.eis.core.api.v1.model.MailingAddress.copyToMailingAddress(address));\n    vendorLocation.setOrganization(org);\n    var contact = org.getPrimaryContact();\n    if(contact.getPrimaryPhone() === undefined || contact.getPrimaryPhone() === null || contact.getPrimaryPhone() === '') {\n        contact.setPrimaryPhone(\"7704321212\");\n    }\n    vendorLocation.getContacts().add(contact);\n    \n    if(!isBlank(fedExAccountNum)) {\n        var shippingAccount = shippingProfile.getFedExAccountInfo();\n        if(shippingAccount !== null) {\n            shippingAccount.setAccountNumber(fedExAccountNum);\n            vendorLocation.getShippingAccounts().add(shippingAccount);\n        }\n    \n    }\n    \n    if(!isBlank(uspsAccountNum)) {\n        var shippingAccount = shippingProfile.getUspsAccountInfo();\n        if(shippingAccount !== null) {\n            shippingAccount.setAccountNumber(uspsAccountNum);\n            shippingAccount.setUserId(uspsAccountNum);\n            vendorLocation.getShippingAccounts().add(shippingAccount);\n        }\n    }\n    \n    vendorLocation = vendorLocationService.save(vendorLocation);\n    return vendorLocation;\n\n}\n\n\nfunction createInventoryPool(org) {\n   var invPool = inventoryPoolService.getByRefName(org.getRefName()+\"-location\");\n\n   if(invPool === null)\n    {\n        invPool = new com.eis.ssit.api.v1.model.InventoryPool();\n        invPool.setRefName(org.getRefName()+\"-location\");\n        invPool.setDisplayName(org.getRefName()+\"-location\");\n        invPool.setDataDomain(dataDomain);\n    }\n    \n    invPool.setCatalog(catalogService.getByRefName(\"gnccatalog\", dataDomain));\n    var lChannels = invPool.getChannels();\n    lChannels.add(channelService.getByRefName(\"default\", dataDomain));\n    invPool.setType( com.eis.ssit.api.v1.model.InventoryPoolType.NEW);\n    var vendorLocation = vendorLocationService.getByRefName(org.getRefName()+\"-location\");\n    invPool.setSiteId(vendorLocation.getId());\n    \n    invPool = inventoryPoolService.save(invPool);\n    return invPool;\n}\n\nfunction createWarehouseInShipStation(vendor, vendorLocation) {\n    \n    var warehouseId = null;\n    \n    if(vendorLocation !== null) {\n        warehouseId = vendorLocation.getDynAttributes().get(\"shipStationWarehouseId\");\n        if(warehouseId === null) {\n            warehouseId = shipStationHelper.createWarehouse(vendorLocation);\n            vendorLocation.getDynAttributes().put(\"shipStationWarehouseId\",\n                warehouseId);\n            vendorLocation.setVendorRef(vendor.constructObjectReference());\n            vendorLocationService.save(vendorLocation);    \n        } else {\n            vendorLocation.getDynAttributes().put(\"shipStationWarehouseId\",\n                new java.lang.Integer(warehouseId));\n            vendorLocation.setVendorRef(vendor.constructObjectReference());   \n            vendorLocationService.save(vendorLocation);\n            //warehouseId = shipStationHelper.updateWarehouse(vendorLocation);\n        }\n        \n    }\n    return warehouseId;\n}\n\n\n\nfunction createDefaultPackageOptions(vendor, vendorDataDomain) {\n\n    var correlation = correlationService.getCorrelationByHierarchy(\"ShippingPackageOptions\", vendorDataDomain);\n    if (correlation === null || correlation.getRefName() === null) {\n    \t taskHelper.notifyAndCreateTask(\n            \"No default correlation named 'ShippingPackageOptions' has been created.\" + java.lang.System.nanoTime(),\n            \"No default correlation named 'ShippingPackageOptions' has been created.\",\n            \"No default correlation named 'ShippingPackageOptions' has been created. Please set up a default correlation for 'ShippingPackageOptions'. No 'ShippingPackageOptions' will be autocreated for vendor:\" + vendor.getRefName(),\n            \"Vendor Set Up Failure\", \"com.gnc\",\n            \"Vendor Set Up Failure\", \"vendor-setup-failure\", \"Admin GNC\");\n        throw new com.eis.core.api.v1.exception.B2BNotFoundException( \"No default correlation named 'ShippingPackageOptions' has been created.\"); \n    } else {\n        if (correlation.getDataDomain() === null || correlation.getDataDomain().equals(dataDomain) || correlation.getDataDomain().equals(\"app.cantata\")) {\n            log.info(\"Creating ShippingPackageOptions for vendor:\" + vendor.getCompanyName());\n            correlation.setId(java.util.UUID.randomUUID().toString());\n            correlation.setDataDomain(vendorDataDomain);\n            correlation = correlationDAO.save(correlation);\n        } else {\n            log.info(\"ShippingPackageOptions already exist for vendor:\" + vendor.getCompanyName());\n        }\n    }\n}\n\n\nfunction updatePrimaryContact(vendor, contactName, phone, emails, address) {\n    var contact = null;\n    if (contactName !== null && contactName !== '' && contactName !== 'na') {\n        var vendorNumber = vendor.getDynAttributes().get(\"vendorNumber\");\n        var contactEmails = emails.split(\";\");\n        var primaryEmail = contactEmails[0];\n        var names = contactName.split(\" \", -1);\n\n        var refName = vendorNumber + \"-\" + names[0] + \" \" + names[1] + \"-\" + primaryEmail;\n\n        contact = contactService.getByRefName(refName);\n\n        if (contact === null) {\n            contact = new com.eis.core.api.v1.model.Contact();\n        }\n        if (log.isDebugEnabled()) {\n            log.debug(\"Contact Name is:\" + contactName);\n        }\n        //contact.setName(contactName);\n        contact.setPrimaryEmail(primaryEmail);\n\n        contact.setFirstName(names[0]);\n        contact.setLastName(names[1]);\n        contact.setCompanyName(vendor.getRefName());\n        contact.setRefName(refName);\n        contact.setDisplayName(contact.getFirstName() + \" \" + contact.getLastName());\n        contact.setPrimaryPhone(phone);\n        if (contact.getAddress() === null) {\n            contact.setAddress(address);\n        }\n    } else {\n        contact = getMerchantBuyerContact(merchant);\n    }\n    vendor.setPrimaryContact(contact);\n}\n\n\nfunction createDataDomainPolicy(vendor, dataDomains, vendorDataDomain, createFunctionalDomains, listFunctionalDomains , domainOnlyFunctionalDomains) {\n    var dataDomainPolicy = dataDomainPolicyService.getByRefName(vendor.getRefName() + \"-policy\");\n    if (dataDomainPolicy !== null) {\n        dataDomainPolicyService['delete'](dataDomainPolicy.getId());\n    }\n\n    dataDomainPolicy = com.eis.core.api.v1.model.DataDomainPolicy();\n    for (var x = 0; x < createFunctionalDomains.length; x++) {\n        var fd = createFunctionalDomains[x];\n        var domain = fd.split(\":\")[0];\n        var action = fd.split(\":\")[1];\n        var dataDomainPolicyEntry = com.eis.core.api.v1.model.DataDomainPolicyEntry();\n        dataDomainPolicyEntry.getDataDomains().addAll(dataDomains);\n        dataDomainPolicyEntry.setFunctionalActionString(action);\n        dataDomainPolicyEntry.setFunctionalDomainString(domain);\n        dataDomainPolicy.getEntries().put(fd, dataDomainPolicyEntry);\n    }\n\n\tif(domainOnlyFunctionalDomains)\n\t{\n   \t \tfor (var x = 0; x < domainOnlyFunctionalDomains.length; x++) \n   \t \t{\n        \tvar fd = domainOnlyFunctionalDomains[x];\n        \tvar domain = fd.split(\":\")[0];\n        \tvar action = fd.split(\":\")[1];\n        \tvar dataDomainPolicyEntry = com.eis.core.api.v1.model.DataDomainPolicyEntry();\n        \tdataDomainPolicyEntry.getDataDomains().add(vendorDataDomain);\n        \tdataDomainPolicyEntry.setFunctionalActionString(action);\n        \tdataDomainPolicyEntry.setFunctionalDomainString(domain);\n        \tdataDomainPolicy.getEntries().put(fd, dataDomainPolicyEntry);\n    \t}\n\t}\n\n    for (var x = 0; x < listFunctionalDomains.length; x++) {\n        var fd = listFunctionalDomains[x];\n        var domain = fd.split(\":\")[0];\n        var action = fd.split(\":\")[1];\n        var dataDomainPolicyEntry = com.eis.core.api.v1.model.DataDomainPolicyEntry();\n        dataDomainPolicyEntry.getDataDomains().add(vendorDataDomain);\n        dataDomainPolicyEntry.setFunctionalActionString(action);\n        dataDomainPolicyEntry.setFunctionalDomainString(domain);\n        dataDomainPolicy.getEntries().put(fd, dataDomainPolicyEntry);\n    }\n\n\n    dataDomainPolicy.setRefName(vendor.getRefName() + \"-policy\")\n    dataDomainPolicy = dataDomainPolicyService.save(dataDomainPolicy);\n    return dataDomainPolicy;\n\n}\n\nfunction getVendorHomeDirectory() {\n    var directory = fileSystemEntryService.getByRefName(\"vendor\");\n    return directory;\n}\n\nfunction createFileSystemEntryHome(vendor, dataDomains, homeDirectory, vendorEmailName) {\n    var vendorType = vendor.getDynAttributes().get(\"vendorType\");\n    var entry = null;\n    var subdirectories = null;\n    if (vendorType === 'Form Portal' || vendorType === 'EDI') {\n    \t subdirectories = [\"inventory-update\"];\n    } else {\n    \t subdirectories = [\"inventory-update\", \"invoices\", \"order-updates\", \"asn\", \"orders\", \"remit-advice\"];\n    }\n   \tentry = createFileSystemSubDir(vendor, dataDomains, homeDirectory, vendorEmailName, subdirectories); \n    return entry;\n}\n\nfunction createFileSystemSubDir(vendor, dataDomains, homeDirectory, vendorEmailName , subdirectories) {\n    var entry = fileSystemEntryService.getByRefName(homeDirectory.getRefName() + \"/\" + vendorEmailName);\n    if (entry === null) {\n        entry = new com.eis.core.api.v1.model.FileSystemEntry();\n        entry.setRefName(homeDirectory.getRefName() + \"/\" + vendorEmailName);\n        entry.setName(vendorEmailName);\n        entry.setParentFileEntryId(homeDirectory.getId());\n        entry.setTrackable(true);\n        entry.setId(java.util.UUID.randomUUID().toString());\n        entry.setOwnerUserProfileRefName(\"admin@gnc.com\");\n        entry.setType(com.eis.core.api.v1.model.FileSystemEntryType.Directory);\n        entry.getDataDomains().addAll(dataDomains);\n        entry = fileSystemEntryDAO.save(entry);\n\n        for (var x = 0; x < subdirectories.length; x++) {\n            var subEntry = new com.eis.core.api.v1.model.FileSystemEntry();\n            var name = subdirectories[x];\n            subEntry.setRefName(entry.getRefName() + \"/\" + name);\n            subEntry.setName(name);\n            subEntry.setId(java.util.UUID.randomUUID().toString());\n            subEntry.setParentFileEntryId(entry.getId());\n            subEntry.setTrackable(true);\n            subEntry.setOwnerUserProfileRefName(\"admin@gnc.com\");\n            subEntry.setType(com.eis.core.api.v1.model.FileSystemEntryType.Directory);\n            subEntry.getDataDomains().addAll(dataDomains);\n            subEntry = fileSystemEntryDAO.save(subEntry);\n        }\n    }\n    return entry;\n}\n\nfunction createCapablityPermission(capability, domain) {\n    var capabilityPermission = new com.eis.core.api.v1.model.CapabilityPermission();\n    capabilityPermission.setCapability(capability);\n    capabilityPermission.setPermittedDataDomain(domain);\n    capabilityPermission.setRefName(capability.getRefName() + \"-\" + domain);\n    return capabilityPermission;\n}\n\n//adding getRefName\nfunction createVendorRole(org, vendorDataDomain) {\n    var vendorType = org.getDynAttributes().get(\"vendorType\");\n    var capabilityPermissions = new java.util.ArrayList();\n\n    var refName = \"vendor-\" + org.getRefName() + \"Role\";\n    var role = roleService.getByRefName(refName);\n    if (role === null) {\n        var role = com.eis.core.api.v1.model.Role();\n        role.setRefName(\"vendor-\" + org.getRefName() + \"Role\");\n        role.setDisplayName(\"vendor-\" + org.getRefName() + \"Role\");\n        role.setDataDomain(dataDomain);\n        role.setRoleType(com.eis.core.api.v1.model.RoleType.USER_ROLE);\n    }\n\n    var viewSystemObjectsCapability = capabilityService.getList(0, 1, \"refName:ViewSystemObjs\", null, null).get(0);\n\n    var reportViewerCapability = capabilityService.getList(0, 1, \"refName:ReportViewer\", null, null).get(0);\n\n    role.getCapabilityPermissions().clear();\n\n    if (vendorType === 'EDI' || vendorType === 'Form Portal') {\n        var vendorAccessCapablity = capabilityService.getList(0, 1, \"refName:VendorFormUserAccess\", null, null).get(0);\n        role.getCapabilityPermissions().add(createCapablityPermission(vendorAccessCapablity, vendorDataDomain));\n        \n        if (vendorType === 'Form Portal') {\n\t\t\tvar VendorUser = capabilityService.getList(0, 1, \"refName:vendorUserUI\", null, null).get(0);\n\t\t\tvar shipmentvendor = capabilityService.getList(0, 1, \"refName:FormVendorCreateShipment\", null, null).get(0);\n\t\t\tvar invoiceRelease = capabilityService.getList(0, 1, \"refName:FormInvoiceRelease\", null, null).get(0);\n\t\t\trole.getCapabilityPermissions().add(createCapablityPermission(VendorUser, dataDomain));\n\t\t\trole.getCapabilityPermissions().add(createCapablityPermission(shipmentvendor, dataDomain));\n\t\t\trole.getCapabilityPermissions().add(createCapablityPermission(invoiceRelease, dataDomain));\n        }\n    } else if (vendorType === 'File Portal') {\n        var vendorAccessCapablity = capabilityService.getList(0, 1, \"refName:VendorFileUserAccess\", null, null).get(0);\n        role.getCapabilityPermissions().add(createCapablityPermission(vendorAccessCapablity, vendorDataDomain));\n    }\n    role.getCapabilityPermissions().add(createCapablityPermission(reportViewerCapability, dataDomain));\n    role.getCapabilityPermissions().add(createCapablityPermission(viewSystemObjectsCapability, \"app.cantata\"));\n\n    role = roleService.save(role);\n    return role;\n}\n\n\nfunction createVendorUserProfile(org,dataDomains,vendorEmailName, vendorDataDomain) \n{\n    var vendorType = org.getDynAttributes().get(\"vendorType\");\n\n    var refName = \"vendor-\" + vendorEmailName + \"@gnc.com\";\n    var displayName = \"vendor-\" + vendorEmailName + \"@gnc.com\";\n    var testProfile = userProfileService.getByRefName(refName);\n    if (testProfile === null) {\n        testProfile = new com.eis.core.api.v1.model.UserProfile();\n        var cred = new com.eis.core.api.v1.model.UserIdPasswordCredential();\n        cred.setUserId(refName);\n        cred.setPassword(\"mypassword\");\n\n        testProfile.setRefName(refName);\n        testProfile.setDisplayName(displayName);\n        testProfile.setDataDomain(dataDomain);\n        testProfile.setFirstName(\"Portal\");\n        testProfile.setLastName(\"User\");\n\n        testProfile.setEmailAddress(\"vendor-\" + vendorEmailName + \"@gnc.com\");\n        testProfile.setUserIdPasswordToken(cred);\n\t\tvar account = accountService.getByRefName(\"GNC-Account\");\t\t\n        testProfile.setOwningAccountId(account.getId());\n    } \n    var domainOnlyFunctionalDomains = null;\n    if (vendorType === 'Form Portal') {\n        testProfile.setHomePageURL(\"/fulfillment/requests/\");\n        testProfile.setRootDirectory(\"vendor/\" + vendorEmailName + \"/\");\n        var createFunctionalDomains = [\"Shipment:Create\", \"FileSystemEntry:Create\", \"Invoice:Create\", \"ShipmentLabel:Create\", \"ShipmentRequest:Create\", \"ShipmentRequest:Ack\", \"ShipmentRequest:Reject\", \"PackingSlip:Create\", \"Item:Create\", \"Variant:Create\", \"Script:Execute\", \"MailboxEntry:Create\", \"MailboxEntry:List\"];\n\n    var listFunctionalDomains = [\"Shipment:List\", \"Invoice:List\", \"ShipmentRequest:List\", \"Shipment:View\", \"Invoice:View\", \"ShipmentRequest:View\", \"FileSystemEntry:List\", \"FileSystemEntry:View\", \"RemittanceAdvice:List\", \"RemittanceAdvice:View\", \"Organization:View\"];\n\n     domainOnlyFunctionalDomains = [\"Correlation:Create\",\n        \"Correlation:Update\"\n    ];\n    } else if (vendorType === 'File Portal') {\n        testProfile.setHomePageURL(\"/data-management/communications/files/\");\n         var createFunctionalDomains = [\"FileSystemEntry:Create\"];\n\n    var listFunctionalDomains = [\"Shipment:List\", \"Invoice:List\", \"ShipmentRequest:List\", \"Shipment:View\", \"Invoice:View\", \"ShipmentRequest:View\", \"RemittanceAdvice:List\", \"RemittanceAdvice:View\", \"Organization:View\", \"FileSystemEntry:View\", \"FileSystemEntry:List\", \"FileSystemEntry:Update\", \"FileSystemEntry:Delete\", \"MailboxEntry:Create\", \"MailboxEntry:List\"];\n    \n    } else if (vendorType === 'EDI') {\n        testProfile.setHomePageURL(\"/fulfillment/requests/\");\n         var createFunctionalDomains = [\"FileSystemEntry:Create\"];\n\n    \t//add salesOrder\n   \t\t var listFunctionalDomains = [\"Shipment:List\", \"Invoice:List\", \"ShipmentRequest:List\", \"Shipment:View\", \"Invoice:View\", \"ShipmentRequest:View\", \"RemittanceAdvice:List\", \"RemittanceAdvice:View\", \"Organization:View\", \"FileSystemEntry:View\", \"FileSystemEntry:List\", \"FileSystemEntry:Update\", \"FileSystemEntry:Delete\", \"MailboxEntry:Create\", \"MailboxEntry:List\", \"SalesOrder:List\", \"SalesOrder:View\"];\n    }\n    var dataDomainPolicy = createDataDomainPolicy(org, dataDomains, vendorDataDomain, createFunctionalDomains, listFunctionalDomains , domainOnlyFunctionalDomains);\n    testProfile.setDataDomainPolicy(dataDomainPolicy);\n    testProfile.getUserGroups().add(createVendorUserGroup(org,vendorDataDomain));\n    testProfile = userProfileService.save(testProfile);\n    \n    return testProfile;\n}\n\nfunction createVendorUserGroup(org, vendorDataDomain) {\n    var Name = createVendorEmailName(org.getCompanyName());\n    var refName = \"vendor-\" + Name + \"UserGroup\";\n\tvar displayName = \"vendor-\" + Name + \"UserGroup\";\n    var userGroup = userGroupService.getByRefName(refName);\n    if (userGroup === null) {\n        userGroup = com.eis.core.api.v1.model.UserGroup();\n        userGroup.setRefName(refName);\n        userGroup.setDisplayName(displayName);\n        userGroup.setDataDomain(dataDomain);\n    } \n    else\n    {\n        userGroup.getRoles().clear();\n    }\n    userGroup.getRoles().add(createVendorRole(org, vendorDataDomain));\n    userGroup = userGroupService.save(userGroup);\n    return userGroup;\n}\n\n\n\nfunction getDefaultAddress(fields) {\n    var address = new com.eis.core.api.v1.model.PhysicalAddress();\n    address.setAddress1(removeWhiteSpace(fields[6]));\n    address.setAddress2(removeWhiteSpace(fields[7]));\n    address.setCity(removeWhiteSpace(fields[8]));\n    address.setState(removeWhiteSpace(fields[9]));\n    address.setCountry(removeWhiteSpace(fields[10]));\n    address.setZip5(removeWhiteSpace(fields[11]));\n    address.setRefName(removeWhiteSpace(fields[6]));\n    address.setDisplayName(removeWhiteSpace(fields[6]));\n    return address;\n}\n\nfunction createTradeAgreement(vendor, merchant, pricebook, termDiscount, damageAllowance, paymentTerms) {\n   if(log.isInfoEnabled)\n\t\t\tlog.info(\"createTradeAgreement:\" + paymentTerms);\n    var refName = vendor.getRefName()+\"-\"+merchant.getRefName()+\"-12312017-12312149\";\n    \n    var tradeAgreement = tradeAgreementService.getByRefName(refName);\n    \n    if(tradeAgreement === null) {\n        tradeAgreement = new com.eis.ssit.api.v1.model.TradeAgreement();\n        tradeAgreement.setRefName(refName);\n        tradeAgreement.setDisplayName(refName);\n    }\n    \n    tradeAgreement.setBuyer(merchant);\n    tradeAgreement.setSeller(vendor);\n    tradeAgreement.setEffectiveStartDate(sdf.parse(tradeAggreementStartDate));\n    tradeAgreement.setEffectiveEndDate(sdf.parse(tradeAggreementEndDate));\n    tradeAgreement.setDefaultBuyerCurrency(com.eis.core.api.v1.model.CurrencyCode.USD);\n    tradeAgreement.setDefaultSellerCurrency(com.eis.core.api.v1.model.CurrencyCode.USD);\n    tradeAgreement.setPriceBook(pricebook);\n    tradeAgreement.setDefaultPaymentTerms(\"NET30\");\n    if(!isBlank(paymentTerms)) {\n        tradeAgreement.setDefaultPaymentTerms(paymentTerms);\n    }\n    if(!isBlank(termDiscount)) {\n        tradeAgreement.setTermDiscountPercentage(new java.math.BigDecimal(termDiscount));\n    }\n    \n    if(!isBlank(damageAllowance)) {\n        tradeAgreement.setDamageAllowancePercentage(new java.math.BigDecimal(damageAllowance));\n    }\n    tradeAgreement = tradeAgreementService.save(tradeAgreement);\n    return tradeAgreement;\n}\n\nfunction createPriceBook(vendor, merchant, channelName) {\n    \n    var refName = vendor.getRefName()+\"-\"+merchant.getRefName()+\"-12312017-12312149\";\n    var pb = priceBookService.getByRefName(refName);\n    \n    if(pb === null) {\n        pb = new com.eis.ssit.api.v1.model.PriceBook();\n        pb.setRefName(refName);\n        pb.setDisplayName(refName);\n    }\n    \n    pb.setMaster(true);\n    //pb.setOrgOwnerRefName(vendor.getRefName());\n    //pb.setCurrency(com.eis.ssit.api.v1.model.CurrencyCode.USD);\n    pb.setEntryPolicy(com.eis.ssit.api.v1.model.PriceBookEntryPolicy.EXCLUSIVE);\n    pb.setChannelRefName(channelName);\n    pb = priceBookService.save(pb);\n    return pb;\n}\n\nfunction getVendor(fields) {\n\tif(log.isInfoEnabled)\n\t\tlog.info(\"Entered getVendor:\");\n\tvar vendorCreated = false;\t\n\t\n\ttry{\n\t\t\n    var newVendor = false;\n\n    var vendorName = removeWhiteSpace(fields[0]);\n    var vendorNumber = removeWhiteSpace(fields[1]);\n    var vendorType = removeWhiteSpace(fields[2]);\n    var contactName = removeWhiteSpace(fields[3]);\n    var phone1 = processPhoneNumber(removeWhiteSpace(fields[4]));\n    var emails = processPhoneNumber(removeWhiteSpace(fields[5]));\n    var damageAllowance = removeWhiteSpace(fields[13]);\n    var termDiscount = removeWhiteSpace(fields[14]);\n    var fedexAcctNo = removeWhiteSpace(fields[15]);\n    var uspsAccountNo = removeWhiteSpace(fields[16]);\n    var vendorNumberAX = removeWhiteSpace(fields[17]);\n    var paymentTerms = removeWhiteSpace(fields[18]);\n    \n    var vendor = vendorService.getByRefName(vendorNumber);\n\n    if (vendor === null) {\n        newVendor = true;\n    }\n    else    \n    {\n        \t /**  ALLOW UPDATE\n        \t taskHelper.notifyAndCreateTask(\n                \"Existing Vendor With Vendor Number:\" + vendorNumber + \" was found.:\" + java.lang.System.nanoTime(),\n                \"Existing Vendor With Vendor Number:\" + vendorNumber + \" was found.\",\n                \"Existing Vendor With Vendor Number:\" + vendorNumber + \" was found. Please check to see that the vendors are set up correctly with the correct vendor \t\tnumber.\",\n                \"Vendor Set Up Failure\", dataDomain,\n                \"Vendor Set Up Failure\", \"vendor-setup-failure\", \"Admin GNC\");\n            throw new com.eis.core.api.v1.exception.B2BNotFoundException( \"Existing Vendor With Vendor Number:\" + vendorNumber + \" was found.\");   \n            **/\n    }\n    \n    if (newVendor) {\n    \tif(log.isInfoEnabled)\n\t\t\tlog.info(\"newVendor is true:\");\n        var existingVendorByNumber = getVendorByVendorNumber(vendorNumber);\n        if (existingVendorByNumber !== null) {\n        \t taskHelper.notifyAndCreateTask(\n                \"Existing Vendor With Vendor Number:\" + vendorNumber + \" was found.:\" + java.lang.System.nanoTime(),\n                \"Existing Vendor With Vendor Number:\" + vendorNumber + \" was found.\",\n                \"Existing Vendor With Vendor Number:\" + vendorNumber + \" was found. Please check to see that the vendors are set up correctly with the correct vendor \t\tnumber.\",\n                \"Vendor Set Up Failure\", dataDomain,\n                \"Vendor Set Up Failure\", \"vendor-setup-failure\", \"Admin GNC\");\n            throw new com.eis.core.api.v1.exception.B2BNotFoundException( \"Existing Vendor With Vendor Number:\" + vendorNumber + \" was found.\");   \n\n        } else {\n\t\t\tif(log.isInfoEnabled)\n\t\t\t\tlog.info(\"existingVendorByNumber false\");\n            vendor = new com.eis.core.api.v1.model.Vendor();\n            vendor.setRefName(vendorNumber);\n            vendor.setDisplayName(vendorName);\n            vendor.getOrgRoles().clear();\n            vendor.getOrgRoles().add(com.eis.core.api.v1.model.OrganizationRole.Vendor);\n            vendor.getDynAttributes().put(\"vendorNumber\", vendorNumber);\n            vendor.getDynAttributes().put(\"vendorType\", vendorType);\n            vendor.setOrganizationReferenceId(vendorNumber);\n            vendor.setOrganizationAccessType(vendorType);\n            //vendor.setActive(true);\n            vendor.setCompanyName(vendorName);\n\n            var address = getDefaultAddress(fields);\n            var contact = updatePrimaryContact(vendor, contactName, phone1, emails, address);\n\n            vendor.setAddress(address);\n            //Add AX vendor number as reference\n        \t\n        \tvar vendorNumAXRef = new com.eis.core.api.v1.model.Reference();\n            vendorNumAXRef.setName(\"AXVendorNumber\");\n            vendorNumAXRef.setType(\"string\");\n            if(!isBlank(vendorNumberAX)) {\n                vendorNumAXRef.setValue(vendorNumberAX);\n            }\n            else\n            {\n                vendorNumAXRef.setValue(\"12345\");\n            }\n            vendor.getReferenceData().add(vendorNumAXRef);\n            vendor = vendorService.save(vendor);       \n \t\t\tvar vendorDataDomain = dataDomain + \".\" + vendor.getRefName();\n    \t\tvar dataDomains = new java.util.ArrayList();\n    \t\tdataDomains.add(dataDomain);\n    \t\tdataDomains.add(vendorDataDomain);\n               \n    \t\tvar vendorEmailName = createVendorEmailName(vendor.getCompanyName());\n            var fileSystemEntry = createFileSystemEntryHome(vendor, dataDomains, homeDirectory, vendorEmailName);\n            createVendorUserProfile(vendor, dataDomains, vendorEmailName, vendorDataDomain);\n            createDefaultPackageOptions(vendor,vendorDataDomain);\n            var vendorLocation = createVendorLocation(vendor, vendor.getAddress(),fedexAcctNo,uspsAccountNo);\n            createWarehouseInShipStation(vendor, vendorLocation);\n            createInventoryPool(vendor);\n            var priceBook = createPriceBook(vendor, merchant, channelName);\n            createTradeAgreement(vendor, merchant, priceBook, termDiscount, damageAllowance,paymentTerms);\n            \n        }\n    } else {\n        if(log.isInfoEnabled)\n\t\t\tlog.info(\"newVendor is false:\");\n    \tvar vendorDataDomain = dataDomain + \".\" + vendor.getRefName();\n\t\tvar dataDomains = new java.util.ArrayList();\n\t\tdataDomains.add(dataDomain);\n\t\tdataDomains.add(vendorDataDomain);\n           \n\t\tvar vendorEmailName = createVendorEmailName(vendor.getCompanyName());\n        var fileSystemEntry = createFileSystemEntryHome(vendor, dataDomains, homeDirectory, vendorEmailName);\n        createVendorUserProfile(vendor, dataDomains, vendorEmailName, vendorDataDomain);\n        createDefaultPackageOptions(vendor,vendorDataDomain);\n        var vendorLocation = createVendorLocation(vendor, vendor.getAddress(),fedexAcctNo,uspsAccountNo);\n        createWarehouseInShipStation(vendor, vendorLocation);\n        createInventoryPool(vendor);\n        var priceBook = createPriceBook(vendor, merchant, channelName);\n        createTradeAgreement(vendor, merchant, priceBook, termDiscount, damageAllowance,paymentTerms);\n        \n    }\n    syncDetailList.add(java.text.MessageFormat.format(\"Vendor: {0} created with vendornumber: {1} Successfully\", vendorName, vendorNumber));\n\n    vendorCreated = true;\n    }\n  catch (e) {\n\tvar vendorNumber = removeWhiteSpace(fields[1]);\n  \ttaskHelper.notifyAndCreateTask(\n  \t\t\t \"Vendor Creation failed for Vendor Number:\" + vendorNumber + \":\" + java.lang.System.nanoTime(),\n             \"Vendor Creation failed for Vendor Number:\" + vendorNumber,\n                e.message,\n                \"Vendor Set Up Failure\", dataDomain,\n                \"Vendor Set Up Failure\", \"vendor-setup-failure\", \"Admin GNC\");\n      errorDetailList.add(\"Vendor Creation failed for Vendor Number:\" + vendorNumber + \" with error : \" + e.message);\n  }\n  return vendorCreated;\n}\n\n\nfunction createMailboxEntry(header_CamelFileName, subject, data, contentType, mailbox) {\n    scriptUtils.createMailboxEntry(mailbox, data, header_CamelFileName, subject,  \"sample@gnc.com\", \"alerts@gnc.com\", null, null, contentType, true);\n}\n\nfunction getMerchant(refName) {\n    var merchant = organizationService.getByRefName(refName);\n    \n    if(merchant === null) {\n        \n    } else {\n        \n        return merchant;\n    }\n}\n\nvar dataDomain = com.eis.security.multitenancy.model.SecureSession.getDefaultDataDomain();\nvar br = new java.io.BufferedReader(new java.io.InputStreamReader(org.apache.commons.io.IOUtils.toInputStream(body)));\n\nvar csvReader = new com.opencsv.CSVReader(br, ',');\nvar rowFields = csvReader.readNext();\nvar homeDirectory = getVendorHomeDirectory();\n\nvar merchant = getMerchant(\"GNC-Organization-\");\nvar sdf =  new java.text.SimpleDateFormat(\"MMddyyyy\");\nvar tradeAggreementStartDate = \"12312017\";\nvar tradeAggreementEndDate = \"12312149\";\nvar channelName = \"default\";\n\n/*\nwhile (rowFields) {\n    rowFields = csvReader.readNext();\n    if (rowFields) {\n  \t    getVendor(rowFields);        \n    }\n}\n*/\n\nvar validRows = new java.util.ArrayList();\nvar invalidRows = new java.util.ArrayList();\nvar reportMap = new java.util.LinkedHashMap();\nvar errorDetailList = new java.util.ArrayList();\nvar syncDetailList = new java.util.ArrayList();\nvar lineSeparator = java.lang.System.lineSeparator();\n\n// headers\nvar headers = rowFields;\nvalidRows.add(headers);\ninvalidRows.add(headers);\n\nvar valid = false;\nwhile(rowFields) {\n  rowFields = csvReader.readNext();\n  if(rowFields) {\n    valid = getVendor(rowFields, errorDetailList, syncDetailList);\n    if(valid) {\n      validRows.add(rowFields);\n    }\n    else {\n      invalidRows.add(rowFields);\n    } \n  }\n}\n\n//Creating a mailbox for Report Generation\nvar mailbox = scriptUtils.getMailbox(\"VendorLoad-Report\");\n\n// Subtracting 1 here since one row would be headers.\nreportMap.put(\"LoadedNumberOfRows\", (validRows.size() - 1));\nreportMap.put(\"FailedNumberOfRows\", (invalidRows.size() - 1));\nreportMap.put(\"errorDetails\", errorDetailList);\nreportMap.put(\"loadDetails\", syncDetailList);\n\nvar data = jsonMapper.writeValueAsString(reportMap);\nvar filenameWithoutExt = org.apache.commons.io.FilenameUtils.removeExtension(header_CamelFileName);\ncreateMailboxEntry(filenameWithoutExt, \"Vendor Load Report\", data, \"application/json\", mailbox);\n\nif(errorDetailList.size() > 0) {\n    taskHelper.notifyAndCreateTask(\n    \"processVendorLoad:file:\"+header_CamelFileName+java.lang.System.nanoTime(),\n    \"Process of Vendor Load file failed. FileName: \"+header_CamelFileName,\n    data,\n    \"Vendor Load File Process Failure\", dataDomain,\n    \"Vendor Load File Process Failure\", \"vendor-load-process-failure\", \"Admin GNC\");\n}\n\ncsvReader.close();",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "Vendor",
    "refKey" : "51b526010ab9fd4aa02a89e693370a6b",
    "displayName" : "Vendor",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "Vendor" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1534412002669,
      "createUser" : "Lakshmi Ashok Kumar",
      "updateTs" : 1536302920674,
      "updateUser" : "Lakshmi Ashok Kumar"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "a6c09221-229c-48d9-8c7a-2d9befebfd9b",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        },
        "header_CamelFileName" : {
          "id" : null,
          "refName" : "header_CamelFileName",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_CamelFileName",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "accountService" : {
        "type" : "serviceBean",
        "name" : "accountService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "accountService",
        "parameterName" : null,
        "parameters" : { }
      },
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "capabilityService" : {
        "type" : "serviceBean",
        "name" : "capabilityService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "capabilityService",
        "parameterName" : null,
        "parameters" : { }
      },
      "catalogService" : {
        "type" : "serviceBean",
        "name" : "catalogService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "catalogService",
        "parameterName" : null,
        "parameters" : { }
      },
      "channelService" : {
        "type" : "serviceBean",
        "name" : "channelService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "channelService",
        "parameterName" : null,
        "parameters" : { }
      },
      "contactService" : {
        "type" : "serviceBean",
        "name" : "contactService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "contactService",
        "parameterName" : null,
        "parameters" : { }
      },
      "correlationDAO" : {
        "type" : "javaBean",
        "name" : "correlationDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "correlationService" : {
        "type" : "serviceBean",
        "name" : "correlationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "correlationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "dataDomainPolicyService" : {
        "type" : "serviceBean",
        "name" : "dataDomainPolicyService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "dataDomainPolicyService",
        "parameterName" : null,
        "parameters" : { }
      },
      "fileSystemEntryDAO" : {
        "type" : "javaBean",
        "name" : "fileSystemEntryDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "fileSystemEntryService" : {
        "type" : "serviceBean",
        "name" : "fileSystemEntryService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "fileSystemEntryService",
        "parameterName" : null,
        "parameters" : { }
      },
      "header_CamelFileName" : {
        "type" : "scriptInputVariable",
        "name" : "header_CamelFileName",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_CamelFileName",
        "parameters" : { }
      },
      "inventoryPoolService" : {
        "type" : "serviceBean",
        "name" : "inventoryPoolService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolService",
        "parameterName" : null,
        "parameters" : { }
      },
      "itemMasterService" : {
        "type" : "serviceBean",
        "name" : "itemMasterService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "itemMasterService",
        "parameterName" : null,
        "parameters" : { }
      },
      "objectJSONMapper" : {
        "type" : "javaBean",
        "name" : "objectJSONMapper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationService" : {
        "type" : "serviceBean",
        "name" : "organizationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "organizationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "priceBookService" : {
        "type" : "serviceBean",
        "name" : "priceBookService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "priceBookService",
        "parameterName" : null,
        "parameters" : { }
      },
      "roleService" : {
        "type" : "serviceBean",
        "name" : "roleService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "roleService",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderService" : {
        "type" : "serviceBean",
        "name" : "salesOrderService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderService",
        "parameterName" : null,
        "parameters" : { }
      },
      "scriptUtils" : {
        "type" : "javaBean",
        "name" : "scriptUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "shipStationHelper" : {
        "type" : "javaBean",
        "name" : "shipStationHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentDAO" : {
        "type" : "javaBean",
        "name" : "shipmentDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentRequestService" : {
        "type" : "serviceBean",
        "name" : "shipmentRequestService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentRequestService",
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentService" : {
        "type" : "serviceBean",
        "name" : "shipmentService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentService",
        "parameterName" : null,
        "parameters" : { }
      },
      "shippingProfileService" : {
        "type" : "serviceBean",
        "name" : "shippingProfileService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shippingProfileService",
        "parameterName" : null,
        "parameters" : { }
      },
      "taskHelper" : {
        "type" : "javaBean",
        "name" : "taskHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "tradeAgreementService" : {
        "type" : "serviceBean",
        "name" : "tradeAgreementService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "tradeAgreementService",
        "parameterName" : null,
        "parameters" : { }
      },
      "userGroupService" : {
        "type" : "serviceBean",
        "name" : "userGroupService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "userGroupService",
        "parameterName" : null,
        "parameters" : { }
      },
      "userProfileService" : {
        "type" : "serviceBean",
        "name" : "userProfileService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "userProfileService",
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorLocationService" : {
        "type" : "serviceBean",
        "name" : "vendorLocationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorLocationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorService" : {
        "type" : "serviceBean",
        "name" : "vendorService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "routing",
  "inputs" : { },
  "result" : null,
  "active" : true,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "gncPolicy",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "gncPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531337454496,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1591201352156,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1common" : "com.eis.b2bmb.api.v1.common",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbcamelcustomutil" : "com.eis.b2bmb.camel.custom.util",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscloudcanonicalmodel" : "com.eis.cloud.canonical.model",
      "comeiscloudcanonicalmodelimports" : "com.eis.cloud.canonical.model.imports",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrskwiapiv1model" : "com.eis.extsvrs.kwi.api.v1.model",
      "comeisextsvrskwiapiv1services" : "com.eis.extsvrs.kwi.api.v1.services",
      "comeisextsvrsquickbooksapiv1dao" : "com.eis.extsvrs.quickbooks.api.v1.dao",
      "comeisextsvrsshipstationapiv1exception" : "com.eis.extsvrs.shipstation.api.v1.exception",
      "comeisextsvrsshipstationapiv1model" : "com.eis.extsvrs.shipstation.api.v1.model",
      "comeisextsvrsshipstationapiv1services" : "com.eis.extsvrs.shipstation.api.v1.services",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisextsvrssnapfulfilapiv1dao" : "com.eis.extsvrs.snapfulfil.api.v1.dao",
      "comeisextsvrssnapfulfilapiv1model" : "com.eis.extsvrs.snapfulfil.api.v1.model",
      "comeisextsvrssnapfulfilapiv1services" : "com.eis.extsvrs.snapfulfil.api.v1.services",
      "comeisextsvrssnapfulfilapiv1util" : "com.eis.extsvrs.snapfulfil.api.v1.util",
      "comeisgitimpl" : "com.eis.git.impl",
      "comeisgitmodel" : "com.eis.git.model",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngine" : "com.eis.oms.inventory.allocationEngine",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysync" : "com.eis.oms.inventory.sync",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparserscustomer" : "com.eis.ssit.parsers.customer",
      "comeisssitparserspricing" : "com.eis.ssit.parsers.pricing",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersvendor" : "com.eis.ssit.parsers.vendor",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comfasterxmljacksondataformatxml" : "com.fasterxml.jackson.dataformat.xml",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunorgapachexmlinternalserialize" : "com.sun.org.apache.xml.internal.serialize",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilregex" : "java.util.regex",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscodecbinary" : "org.apache.commons.codec.binary",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecommonslangtime" : "org.apache.commons.lang.time",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "Vendor",
    "refId" : "a6c09221-229c-48d9-8c7a-2d9befebfd9b",
    "refKey" : "51b526010ab9fd4aa02a89e693370a6b",
    "displayName" : "Vendor",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "gncPolicy",
    "refId" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "scriptrunner@gnc.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}