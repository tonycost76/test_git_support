{
  "refName" : "test",
  "refKey" : "3f195ad9a78243fb0fa1da0778b6b209",
  "displayName" : "test",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1535746135598,
    "createUser" : "Saket Satyarthi",
    "updateTs" : 1536946359594,
    "updateUser" : "Saket Satyarthi"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "9f268c86-81cf-4220-91e8-0298fc7ad92b",
  "script" : "var csvPackage = Packages.com.opencsv;\r\nvar stringUtilsPackage = Packages.org.apache.commons.lang;\r\nvar eisExceptionsPackage = Packages.com.eis.core.api.v1.exception;\r\nvar jsonMapper = new com.eis.json.EnvisionJacksonJaxbJSONMapper();\r\n\r\n\r\nvar LOG = org.slf4j.LoggerFactory.getLogger(\"processInventorySync:\");\r\n\r\nfunction removeWhiteSpace(value) {\r\n\r\n    if (value !== null && value !== undefined) {\r\n        return new java.lang.String(value).trim();\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\n\r\nfunction isBlank(value) {\r\n    if (value === null || value === undefined || value === '') {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nfunction isLengthSKU(value) {\r\n    if (value.length === 6) {\r\n\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nfunction isNumeric(value) {\r\n    if (value.match(/^[0-9]+$/)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nvar today = new java.util.Date();\r\nvar dateFormatter = new java.text.SimpleDateFormat(\"yyyyMMddhhmmssSS\");\r\n\r\nvar name = \"InventoryUpdate_\"+dateFormatter.format(today)+\".html\";\r\n\r\nfunction handleError(errorList) {\r\n\r\n    var description = \"InventoryUpdate_\"+dateFormatter.format(today)+\".csv\";\r\n\r\n\r\n    LOG.info(\"errormailenter\")\r\n    var velocityContext = new org.apache.velocity.VelocityContext();\r\n    velocityContext.put(\"description\", description);\r\n    //velocityContext.put(\"filename\", file);\r\n    velocityContext.put(\"errorList\", errorList);\r\n    var body = scriptUtils.buildMessageFromVelocityTemplate(\"inbound/templates/inventoryUpdateErrors.vm\", velocityContext);\r\n\r\n    var mailbox = scriptUtils.getMailbox(\"InventoryValidationErrors\");\r\n    scriptUtils.createMailboxEntry(mailbox, body, name, \"InventoryUpdate_\"+dateFormatter.format(today)+\".csv\", \"ssatyarthi@envistacorp.com,gisley@envistacorp.com\", \"alerts@enspirecommerce.com\", null, null, true);\r\n}\r\n\r\n\r\nvar SKU6digit = false;\r\n\r\n\r\nfunction getInventory(rowFields, i) {\r\n    var dataDomainList = java.util.Arrays.asList(rowFields[1]);\r\n\r\n    SKU6digit = isBlank(rowFields[4]);\r\n\r\n    if (!SKU6digit) {\r\n        if (!(isLengthSKU(rowFields[4]))) {\r\n            LOG.info(\"skunot\")\r\n            message = \"PART-ID must be of 6 digits: \" + \" \" + \"for CSV Row Number \" + \" \" + i;\r\n            errorList.add(message);\r\n\r\n        } else {\r\n            if (!(isNumeric(rowFields[4]))) {\r\n                message = \"PART-ID must be a Numeric Value ONLY: \" + \" \" + \"for CSV Row Number \" + \" \" + i;\r\n                errorList.add(message);\r\n            } else {\r\n                var skuInput = rowFields[4];\r\n                var skuObj = skuDAO.findSkuBySkuId(skuInput, dataDomainList);\r\n\r\n                if (!skuObj) {\r\n                    message = \"Unable to find SKU for PART-ID: \" + skuInput;\r\n                    errorList.add(message);\r\n                } else if (skuObj.getProductRefKey() === undefined || skuObj.getProductRefKey() === null || skuObj.getProductRefKey() === '') {\r\n                    message = \"Unable to find Product for PART-ID: \" + skuInput;\r\n                    errorList.add(message);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!(isBlank(rowFields[5]))) {\r\n            if (!(isNumeric(rowFields[5]))) {\r\n                message = \"Inventory Quantity must be a Numeric Value ONLY: \" + \" \" + \"for CSV Row Number \" + \" \" + i;\r\n                errorList.add(message);\r\n\r\n            }\r\n\r\n        } else {\r\n            message = \"Inventory Quantity value is missing: \" + \" \" + \"for CSV Row Number \" + \" \" + i;\r\n            errorList.add(message);\r\n        }\r\n\r\n\r\n\r\n\r\n        if ((isBlank(rowFields[3]))) {\r\n            message = \"No Site-Id was found in the inventory sync file: \" + \" \" + \"for CSV Row Number \" + \" \" + i;\r\n            errorList.add(message);\r\n\r\n        } else {\r\n\r\n            var siteRefname = rowFields[3];\r\n            var dataDomainIn = \"com.gnc\";\r\n            var siteInput = siteDAO.getByRefName(siteRefname, dataDomainIn);\r\n            if (!siteInput) {\r\n                message = \"Site NOT found for Site-ID: \" + siteRefname;\r\n                errorList.add(message);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction upsertLot(rowFieldsMap, errorDetailList, syncDetailList) {\r\n    var upserted = false;\r\n\r\n    try {\r\n        var dataDomain = rowFieldsMap.get(\"inventory.datadomain\");\r\n        var dataDomains = java.util.Arrays.asList(dataDomain);\r\n        var siteRefName = rowFieldsMap.get(\"Site-ID\");\r\n        var site = siteService.getByRefName(siteRefName, dataDomain);\r\n        if (!site) {\r\n            throw new com.eis.core.api.v1.exception.B2BNotFoundException(java.text.MessageFormat.format(\"Site not found for refName: {0} and dataDomain: {1}\", siteRefName, dataDomain));\r\n        }\r\n\r\n        var inventoryPools = inventoryPoolService.findBySiteId(site.getId(), dataDomains);\r\n\r\n        //var inventoryPools = inventoryPoolService.findBySiteId(site.getId(), dataDomains);\r\n\r\n        if (inventoryPools && !inventoryPools.isEmpty()) {\r\n\r\n            var inventoryPool = inventoryPools.get(0);\r\n\r\n            // product sku\r\n            var sku = rowFieldsMap.get(\"PART-ID\");\r\n\r\n            if (!(isLengthSKU(sku))) {\r\n\r\n                throw new com.eis.core.api.v1.exception.B2BNotFoundException(java.text.MessageFormat.format(\"PART-ID must be of 6 digit for sku: {0}\", sku));\r\n            } else {\r\n                if (!(isNumeric(sku))) {\r\n                    throw new com.eis.core.api.v1.exception.B2BNotFoundException(java.text.MessageFormat.format(\"PART-ID must be a Numeric value for sku: {0}\", sku));\r\n                }\r\n\r\n            }\r\n\r\n            var availQty = rowFieldsMap.get(\"Qty\");\r\n            if (!(isNumeric(availQty))) {\r\n                throw new com.eis.core.api.v1.exception.B2BNotFoundException(java.text.MessageFormat.format(\"Quantity Value must be a numeric value for availQty: {0}\", availQty));\r\n            }\r\n            var qtyAvail = java.lang.Long.valueOf(availQty);\r\n            var actionType = com.eis.ssit.api.v1.model.ActionType.Adjustment;\r\n\r\n            var inventoryPoolEntries = inventoryPoolEntryDAO.findByInventoryPoolIdAndProductIdentifier(inventoryPool.getId(), sku, 0, -1, null, dataDomains);\r\n\r\n            var skuObj = skuDAO.findSkuBySkuId(sku, dataDomains);\r\n\r\n            if (!skuObj) {\r\n                throw new java.lang.IllegalStateException(java.text.MessageFormat.format(\"Unable to find sku for sku: {0}\", sku));\r\n            }\r\n\r\n            if (skuObj.getProductRefKey() === undefined || skuObj.getProductRefKey() === null || skuObj.getProductRefKey() === '') {\r\n                throw new java.lang.IllegalStateException(java.text.MessageFormat.format(\"Unable to find product for sku: {0}\", sku));\r\n            }\r\n\r\n            var productObj = productService.getByRefKey(skuObj.getProductRefKey());\r\n            if (!productObj) {\r\n                throw new java.lang.IllegalStateException(java.text.MessageFormat.format(\"Unable to find product for sku: {0}\", sku));\r\n            }\r\n\r\n            var inventoryPoolEntry = null;\r\n\r\n            if (!inventoryPoolEntries || inventoryPoolEntries.isEmpty() || !inventoryPoolEntries.get(0)) {\r\n                if (LOG.isInfoEnabled()) {\r\n                    LOG.info(\"laks inventoryPoolEntries is null:\");\r\n                }\r\n                inventoryPoolEntry = new com.eis.ssit.api.v1.model.InventoryPoolEntry();\r\n                inventoryPoolEntry.setRefName(sku + \" - \" + siteRefName);\r\n                inventoryPoolEntry.setDisplayName(skuObj.getDisplayName());\r\n                inventoryPoolEntry.setDataDomain(dataDomain);\r\n                inventoryPoolEntry.setSkuId(sku);\r\n                inventoryPoolEntry.setUpc(productObj.getUpc());\r\n                inventoryPoolEntry.setThresholdQty(0);\r\n                inventoryPoolEntry.setProductIdentifier(productObj.getProductIdentifier());\r\n                inventoryPoolEntry.setProductId(productObj.getId());\r\n                inventoryPoolEntry.setParentInventoryPoolId(inventoryPool.getId());\r\n                inventoryPoolEntry.setOrganizationReference(productObj.getOrganizationReference());\r\n            } else {\r\n                inventoryPoolEntry = inventoryPoolEntries.get(0);\r\n            }\r\n            inventoryPoolEntry.setAvailableQty(qtyAvail);\r\n            LOG.info(\"laks inventoryPoolEntry2 :\", inventoryPoolEntry.toString());\r\n            inventoryPoolEntryDAO.save(inventoryPoolEntry, com.eis.ssit.api.v1.model.ActionType.Sync, \"Inventory Sync\");\r\n\r\n            syncDetailList.add(java.text.MessageFormat.format(\"Sku: {0} synced with AvailQty: {1} for Site: {2} and Vendor: {3}\", sku, qtyAvail, siteRefName, rowFieldsMap.get(\"Vend-ID\")));\r\n\r\n            upserted = true;\r\n        } else {\r\n            throw new com.eis.core.api.v1.exception.B2BNotFoundException(java.text.MessageFormat.format(\"No inventory pool exists for site refName: {0} and dataDomain: {1}\", siteRefName, dataDomain));\r\n        }\r\n    } catch (e) {\r\n        errorDetailList.add(e.message);\r\n    }\r\n\r\n    return upserted;\r\n}\r\n\r\nfunction serializeCSV(rows) {\r\n    var sw = new java.io.StringWriter();\r\n    var csvWriter = new csvPackage.CSVWriter(sw);\r\n    for (var x = 0; x < rows.size(); x++) {\r\n        var record = rows.get(x);\r\n        csvWriter.writeNext(record);\r\n    }\r\n\r\n    csvWriter.close();\r\n\r\n    var body = sw.toString();\r\n\r\n    return body;\r\n}\r\n\r\nfunction createMailboxEntry(header_CamelFileName, subject, data, contentType, mailbox) {\r\n    scriptUtils.createMailboxEntry(mailbox, data, header_CamelFileName, subject, \"sample@gnc.com\", \"alerts@gnc.com\", null, null, contentType, true);\r\n}\r\n\r\n\r\n\r\n\r\nvar br = new java.io.BufferedReader(new java.io.InputStreamReader(org.apache.commons.io.IOUtils.toInputStream(body)));\r\n\r\n\r\nvar csvReader = new csvPackage.CSVReader(br);\r\nvar rowFields = csvReader.readNext();\r\n\r\n\r\nvar validRows = new java.util.ArrayList();\r\nvar invalidRows = new java.util.ArrayList();\r\nvar reportMap = new java.util.LinkedHashMap();\r\nvar errorDetailList = new java.util.ArrayList();\r\nvar syncDetailList = new java.util.ArrayList();\r\nvar lineSeparator = java.lang.System.lineSeparator();\r\nvar errorList = new java.util.ArrayList();\r\n\r\nvar headers = rowFields;\r\nvalidRows.add(headers);\r\ninvalidRows.add(headers);\r\n\r\nvar valid = false;\r\n\r\nvar i = 1;\r\nwhile (rowFields) {\r\n    rowFields = csvReader.readNext();\r\n    if (rowFields) {\r\n        var rowFieldsMap = new java.util.HashMap();\r\n\r\n        for (var t = 0; t < rowFields.length; t++) {\r\n            rowFieldsMap.put(headers[t], rowFields[t]);\r\n        }\r\n        getInventory(rowFields, i++);\r\n        valid = upsertLot(rowFieldsMap, errorDetailList, syncDetailList);\r\n        if (valid) {\r\n            validRows.add(rowFields);\r\n        } else {\r\n            invalidRows.add(rowFields);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nif (errorList.size() > 0) {\r\n\r\n    handleError(errorList);\r\n\r\n}\r\n\r\n\r\n\r\n//Creating a mailbox for Report Generation\r\nvar mailbox = scriptUtils.getMailbox(\"InventorySync-Report\");\r\nvar mailbox1 = scriptUtils.getMailbox(\"OnlyFailedInventorySync-Reports\");\r\n// Subtracting 1 here since one row would be headers.\r\nreportMap.put(\"UpsertedNumberOfRows\", (validRows.size() - 1));\r\nreportMap.put(\"NotUpsertedNumberOfRows\", (invalidRows.size() - 1));\r\nreportMap.put(\"errorDetails\", errorDetailList);\r\nreportMap.put(\"syncDetails\", syncDetailList);\r\n\r\nvar nups = (invalidRows.size() - 1);\r\n\r\nvar data = jsonMapper.writeValueAsString(reportMap);\r\nvar filenameWithoutExt = org.apache.commons.io.FilenameUtils.removeExtension(header_CamelFileName);\r\nif (nups > 0) {\r\n    createMailboxEntry(filenameWithoutExt, \"Inventory Sync Report\", data, \"application/json\", mailbox1);\r\n    createMailboxEntry(filenameWithoutExt, \"Inventory Sync Report\", data, \"application/json\", mailbox);\r\n} else {\r\n    createMailboxEntry(filenameWithoutExt, \"Inventory Sync Report\", data, \"application/json\", mailbox);\r\n}\r\nif (errorDetailList.size() > 0) {\r\n    taskHelper.notifyAndCreateTask(\r\n        \"processInventorySync:file:\" + header_CamelFileName + java.lang.System.nanoTime(),\r\n        \"Process of Inventory Sync file failed. FileName: \" + header_CamelFileName,\r\n        data,\r\n        \"Inventory Sync File Process Failure\", \"com.gnc\",\r\n        \"Inventory Sync File Process Failure\", \"inventory-sync-process-failure\", \"Admin GNC\");\r\n}\r\n\r\nvar header_syncDetails;\r\nif (syncDetailList.isEmpty()) {\r\n    header_syncDetails = \"No sync differences\";\r\n} else {\r\n    header_syncDetails = stringUtilsPackage.StringUtils.join(syncDetailList, lineSeparator);\r\n}\r\n\r\nLOG.info(\"errorlist\" + errorList)\r\n\r\nvar vendorId = rowFieldsMap.get(\"Vend-ID\");\r\nif (vendorId.indexOf(\"-\") !== -1) {\r\n            vendorId = vendorId.substring(0, vendorId.indexOf(\"-\"));\r\n}\r\nvar vendor = vendorService.getByRefName(vendorId);\r\nif(vendor)\r\n{\t\r\n\tvar sdfdatetime = new java.text.SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\");\r\n    var today = java.util.Calendar.getInstance();\r\n    var now = sdfdatetime.format(today.getTime());\r\n\tvendor.getDynAttributes().put(\"lastInvSyncDateTime\", now);\r\n\tvendorService.save(vendor);  \r\n}",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "inventorySync",
    "refKey" : "7892949dba97a8e8ab54db78e1a7f694",
    "displayName" : "inventorySync",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "inventorySync" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531383956414,
      "createUser" : "Saket Satyarthi",
      "updateTs" : 1538714254617,
      "updateUser" : "Saket Satyarthi"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "984ac88d-3f72-4f11-8a7c-2b26dec77783",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        },
        "header_CamelFileName" : {
          "id" : null,
          "refName" : "header_CamelFileName",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_CamelFileName",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "businessNumberGeneratorDAO" : {
        "type" : "javaBean",
        "name" : "businessNumberGeneratorDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "emailNotifier" : {
        "type" : "javaBean",
        "name" : "emailNotifier",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "header_CamelFileName" : {
        "type" : "scriptInputVariable",
        "name" : "header_CamelFileName",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_CamelFileName",
        "parameters" : { }
      },
      "inventoryPoolEntryAuditLogEntryDAO" : {
        "type" : "javaBean",
        "name" : "inventoryPoolEntryAuditLogEntryDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryPoolEntryDAO" : {
        "type" : "javaBean",
        "name" : "inventoryPoolEntryDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryPoolEntryService" : {
        "type" : "serviceBean",
        "name" : "inventoryPoolEntryService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolEntryService",
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryPoolService" : {
        "type" : "serviceBean",
        "name" : "inventoryPoolService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolService",
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationService" : {
        "type" : "serviceBean",
        "name" : "organizationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "organizationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "productService" : {
        "type" : "serviceBean",
        "name" : "productService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "productService",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderService" : {
        "type" : "serviceBean",
        "name" : "salesOrderService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderService",
        "parameterName" : null,
        "parameters" : { }
      },
      "scriptUtils" : {
        "type" : "javaBean",
        "name" : "scriptUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "siteDAO" : {
        "type" : "javaBean",
        "name" : "siteDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "siteService" : {
        "type" : "serviceBean",
        "name" : "siteService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "siteService",
        "parameterName" : null,
        "parameters" : { }
      },
      "skuDAO" : {
        "type" : "javaBean",
        "name" : "skuDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "skuService" : {
        "type" : "serviceBean",
        "name" : "skuService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "skuService",
        "parameterName" : null,
        "parameters" : { }
      },
      "taskHelper" : {
        "type" : "javaBean",
        "name" : "taskHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorService" : {
        "type" : "serviceBean",
        "name" : "vendorService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "utility",
  "inputs" : { },
  "result" : null,
  "active" : true,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "gncPolicy",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "gncPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531337454496,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1591201352156,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1common" : "com.eis.b2bmb.api.v1.common",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbcamelcustomutil" : "com.eis.b2bmb.camel.custom.util",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscloudcanonicalmodel" : "com.eis.cloud.canonical.model",
      "comeiscloudcanonicalmodelimports" : "com.eis.cloud.canonical.model.imports",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrskwiapiv1model" : "com.eis.extsvrs.kwi.api.v1.model",
      "comeisextsvrskwiapiv1services" : "com.eis.extsvrs.kwi.api.v1.services",
      "comeisextsvrsquickbooksapiv1dao" : "com.eis.extsvrs.quickbooks.api.v1.dao",
      "comeisextsvrsshipstationapiv1exception" : "com.eis.extsvrs.shipstation.api.v1.exception",
      "comeisextsvrsshipstationapiv1model" : "com.eis.extsvrs.shipstation.api.v1.model",
      "comeisextsvrsshipstationapiv1services" : "com.eis.extsvrs.shipstation.api.v1.services",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisextsvrssnapfulfilapiv1dao" : "com.eis.extsvrs.snapfulfil.api.v1.dao",
      "comeisextsvrssnapfulfilapiv1model" : "com.eis.extsvrs.snapfulfil.api.v1.model",
      "comeisextsvrssnapfulfilapiv1services" : "com.eis.extsvrs.snapfulfil.api.v1.services",
      "comeisextsvrssnapfulfilapiv1util" : "com.eis.extsvrs.snapfulfil.api.v1.util",
      "comeisgitimpl" : "com.eis.git.impl",
      "comeisgitmodel" : "com.eis.git.model",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngine" : "com.eis.oms.inventory.allocationEngine",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysync" : "com.eis.oms.inventory.sync",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparserscustomer" : "com.eis.ssit.parsers.customer",
      "comeisssitparserspricing" : "com.eis.ssit.parsers.pricing",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersvendor" : "com.eis.ssit.parsers.vendor",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comfasterxmljacksondataformatxml" : "com.fasterxml.jackson.dataformat.xml",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunorgapachexmlinternalserialize" : "com.sun.org.apache.xml.internal.serialize",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilregex" : "java.util.regex",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscodecbinary" : "org.apache.commons.codec.binary",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecommonslangtime" : "org.apache.commons.lang.time",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "inventorySync",
    "refId" : "984ac88d-3f72-4f11-8a7c-2b26dec77783",
    "refKey" : "7892949dba97a8e8ab54db78e1a7f694",
    "displayName" : "inventorySync",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "gncPolicy",
    "refId" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "scriptrunner@gnc.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}