{
  "refName" : "syncProductSkus",
  "refKey" : "5384e1d6b27914ef48bae69f78d540bc",
  "displayName" : "syncProductSkus",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1531877918917,
    "createUser" : "Paul Ramnarain",
    "updateTs" : 1569760739315,
    "updateUser" : "GNC VDP"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "bfcdb4ae-53de-4a10-bafd-d68a87a4a02c",
  "script" : "var fileName = header_CamelFileName;\nvar productCollectionOverride = \"gncproductProposed\";\nvar skuCollectionOverride = \"gncskuProposed\";\nvar itemCollectionOverride = \"gncitemProposed\";\n\n\nvar dataDomain = \"com.gnc\";\nvar accountRefName = \"GNC-Account\";\n\nvar catalogRefName = \"gnccatalog\";\nvar defaulCatRef = \"General\";\n\nvar account = accountService.getByRefName(accountRefName, dataDomain);\nvar catalog = catalogService.getByRefName(catalogRefName, dataDomain);\n\n\nvar productSkuArgs = new com.eis.ssit.parsers.productsku.ProductSkuArgs();\nproductSkuArgs.setParserName(\"canonicalXMLSkuVariantParser\");\nproductSkuArgs.setDeactivateSkusMissing(false);\nproductSkuArgs.setVendorItemCollectionNameOverride(itemCollectionOverride);\nproductSkuArgs.setSkuCollectionNameOverride(skuCollectionOverride);\nproductSkuArgs.setProductCollectionNameOverride(productCollectionOverride);\n//productSkuArgs.setProductSkuOneToOne(true);\n//var skuFieldsToExcludeFromUpdate = [\"dynAttributes\",\"kitComponents\"];\n//productSkuArgs.setSkuFieldsToExcludeFromUpdate(skuFieldsToExcludeFromUpdate);\nvar categories = new java.util.ArrayList();\ncategories.add(\"General\");\nproductSkuArgs.getCatalogCategoriesMap().put(catalog,  categories);\nproductSkuArgs.setBatchSize(1000);\nproductSkuArgs.setRecordCompareSize(1000);\nproductSkuArgs.setConsumerThreads(1);\n\nvar account = accountService.getByRefName(accountRefName, dataDomain);\n\nbulkProductSkuHelper.doProductBulkImport(body.getInputStream(), header_CamelFileName,productSkuArgs,dataDomain,account, null);\n\n\n/**\nvar LOG = org.slf4j.LoggerFactory.getLogger(\"syncProductSkus script:\");\n\nLOG.info(\">>>>>>> syncProductSkus Script STARTING -> received file name: \" + header_CamelFileName);\n\n//LOG.info(\">>>>>>> syncProductSkus received LoadType: \" + header_LoadType);\n\nvar manualResync = false; //Used when cleaning up the existing collections and freshly loading a full sync. In this case we want to avoid doing the comparison since nothing will exist in the proposed collections.\n\n//DevNote: Remove this Logger\nLOG.info(\">>>>>>> syncProductSkus\"+body);\n\nvar itemInputStream = body.getInputStream();\n\n//NOTE - Cleanup must happen first else Mongo will not bulk insert records!\n// Caution, this WILL remove existing collections by the names specified in xCollectionOverride below\nvar cleanUpBeforeRun = java.lang.Boolean.TRUE;\nvar byPassZip = java.lang.Boolean.TRUE; //Defaults to TRUE for Deltas which are sent as XML -\n// needs to be updated to FALSE for full feeds\n\nvar fastForward = java.lang.Boolean.FALSE; //For skipping ahead 'startFrom' number of lines in the input file\nvar startFrom = 0;\n\nvar isFullSync = java.lang.Boolean.FALSE; //Allows us to deactivate Products/SKUs that are missing TRUE = deactivate, FALSE = leave alone\nvar isDryRun = java.lang.Boolean.FALSE; //TRUE - Don't insert/update during comparison, only report what would happpen\n\nvar fileName = header_CamelFileName;\n\nvar productCollectionOverride = \"productProposed\";\nvar skuCollectionOverride = \"skuProposed\";\n// var itemCollectionOverride = \"itemProposed\";\n\nvar dataDomain = \"com.gnc\";\nvar accountRefName = \"GNC-Account\";\n\nvar catalogRefName = \"gnccatalog\";\nvar defaulCatRef = \"General\";\n\nvar account = accountService.getByRefName(accountRefName, dataDomain);\nvar catalog = catalogService.getByRefName(catalogRefName, dataDomain);\n\nLOG.info(\">>>>>>> Loaded Account with ID: \" + account.getId() + \" for: \" + accountRefName + \" in dataDomain: \" + dataDomain);\n\n//var FullLoad = (new RegExp('SearsSTIBOFullItemDownload')).test(fileName);\n//var DeltaLoad = (new RegExp('^(DELTA|delta|Delta).*\\.xml')).test(fileName);\nvar FullLoad = true;\nvar DeltaLoad = false;\nvar parseThenCompare = true;\nvar mode;\n\nif(FullLoad && !DeltaLoad) {\n\n    LOG.info(\">>>>>>> masterItemDownloadCombined is a FULL SYNC LOAD\");\n\n    byPassZip = java.lang.Boolean.TRUE; //Full feeds come zipped\n    mode = \"FULL SYNC\";\n\n} else if(!FullLoad && DeltaLoad) {\n\n    LOG.info(\">>>>>>> masterItemDownloadCombined is a DELTA LOAD\");\n    mode = \"DELTA SYNC\";\n    byPassZip = java.lang.Boolean.TRUE;\n\n} else {\n\n    LOG.error(\">>>>>>> masterItemDownloadCombined file name does not match excepted pattern for full or delta load! ABORTING!\");\n    parseThenCompare = false;\n\n}\n\nif(parseThenCompare) {\n\n    LOG.info(\">>>>>>> Starting syncProductSkus...MODE: \" + mode);\n    \n    var productSkuArgs = new com.eis.ssit.parsers.productsku.ProductSkuArgs();\n    // productSkuArgs.setCreateVendorItem(true);\n    // productSkuArgs.setUseSkuIdAsVendorItemId(true);\n    // productSkuArgs.setVendorIdReferenceFieldName(\"PrimaryVendorId\");\n//    productSkuArgs.setVendorItemIdReferenceFieldName(\"VendorItemNumber\");\n    // productSkuArgs.setVendorItemCollectionNameOverride(\"itemProposed\");\n    productSkuArgs.setSkuCollectionNameOverride(\"skuProposed\");\n    productSkuArgs.setProductCollectionNameOverride(\"productProposed\");\n    productSkuArgs.setParserName(\"canonicalXMLSkuVariantParser\");\n    \n    \n    \n    var categories = new java.util.ArrayList();\n    categories.add(\"General\");\n    productSkuArgs.getCatalogCategoriesMap().put(catalog,  categories);\n    \n    \n    var producerFuture = bulkProductSkuHelper.createBulkInsertParserProducerThread(cleanUpBeforeRun, fileName, itemInputStream, byPassZip, fastForward, startFrom,\n        dataDomain, account, productSkuArgs, header_FileSystemEntryId);\n\n    LOG.info(\">>>>>>> Checking Producer Future Status -> isDone? \" + producerFuture.isDone());\n\n    var skuConsumerFuture = bulkProductSkuHelper.createBulkInsertSkuConsumerThread(skuCollectionOverride);\n\n    var productConsumerFuture = bulkProductSkuHelper.createBulkInsertProductConsumerThread(productCollectionOverride);\n    \n    // var itemConsumerFuture = bulkProductSkuHelper.createBulkInsertItemConsumerThread(itemCollectionOverride);\n       \n    if (skuConsumerFuture !== null) {\n\n        LOG.info(\">>>>>>> Created SKU Consumer with isDone status: \" + skuConsumerFuture.isDone());\n    }\n    if (productConsumerFuture !== null) {\n\n        LOG.info(\">>>>>>> Created PRODUCT Consumer with isDone status: \" + productConsumerFuture.isDone());\n    }\n    \n    \n    // if (itemConsumerFuture !== null) {\n    //     LOG.info(\">>>>>>> Created ITEM Consumer with isDone status: \" + itemConsumerFuture.isDone());\n    // }\n    \n\n    //Tell the ThreadPoolTaskExecutor to wait until the producer finishes its workload\n    var producerRes = producerFuture.get();\n\n    var skuRes = skuConsumerFuture.get();\n\n    var prodRes = productConsumerFuture.get();\n    \n    // var itemRes = itemConsumerFuture.get();\n\n    LOG.info(\">>>>>>> syncProductSkus AFTER Future.get() -> Attempting to create report! \");\n\n    if (producerRes !== null && skuRes !== null && prodRes !== null) {\n\n        LOG.info(\"Combining reports...\");\n\n        var productResTotalQueueRead = java.lang.Float.valueOf(prodRes.getTotalQueueReadTime());\n        var skuResTotalQueueRead = java.lang.Float.valueOf(skuRes.getTotalQueueReadTime());\n\n        prodRes.setTotalQueueReadTimeAgg(java.lang.Float.valueOf(productResTotalQueueRead + skuResTotalQueueRead));\n\n        producerRes.setSkuConsumerResults(skuRes);\n        producerRes.setProductConsumerResults(prodRes);\n        // producerRes.setItemConsumerResults(itemRes);\n\n        LOG.info(\"Printing report...\");\n        producerRes.printReport();\n        \n        var reviewProductsTask =  producerRes.generateTaskForManualReviewProduct();\n        if(reviewProductsTask !== null) {\n            taskService.save(reviewProductsTask);\n        }\n        \n        var reportNotification = producerRes.generateNotificationFromReport();\n        if(reportNotification !== null) {\n            notificationService.save(reportNotification);\n        }\n\n        LOG.warn(\">>>>>>> syncProductSkus END OF PARSING\");\n\n        var totalProductsInserted = prodRes.getTotalInserted();\n        var totalSKUsInserted = skuRes.getTotalInserted();\n\n        LOG.warn(\">>>>>>> syncProductSkus Comparing counts of load result to database...\");\n\n        var existingSkuCount = bulkProductSkuHelper.getCollectionDocCount(\"sku\");\n        var existingProductCount = bulkProductSkuHelper.getCollectionDocCount(\"product\");\n\n        var proposedSkuCount = bulkProductSkuHelper.getCollectionDocCount(\"skuProposed\");\n        var proposedProductCount = bulkProductSkuHelper.getCollectionDocCount(\"productProposed\");\n\n        LOG.info(\">>>>>>> syncProductSkus Database Counts: PROPOSED COUNTS\\nSKU Proposed: \" + proposedSkuCount + \"\\tProduct Proposed: \"\n            + proposedProductCount + \"\\nEXISTING COUNTS\\nSKU Existing: \"\n            + existingSkuCount + \"\\tProduct Existing: \" + existingProductCount);\n\n        if(!manualResync) {\n\n            if ((totalProductsInserted !== proposedProductCount) || (totalSKUsInserted !== proposedSkuCount)) {\n                //We shouldn't proceed with the comparison here, something went wrong\n\n                LOG.error(\">>>>>>> syncProductSkus Parsing counts do not match database counts on proposed tables: \" +\n                    \"\\nSKUs Parsed: \" + totalSKUsInserted + \" | DB Count SKUs: \" + proposedSkuCount\n                    + \"\\nProducts Parsed: \" + totalProductsInserted + \" | DB Count Products: \" + proposedProductCount);\n\n                //TODO - some exception handling here\n                //Check if the difference is within some margin of error that is deemed acceptable then continue with compare?\n            }\n            else {\n                //Counts in DB match parsing counts, continue with comparison\n                LOG.warn(\">>>>>>> syncProductSkus Count verification passed, Beginning DIFF ALGORITHM to compare proposed with existing\");\n\n                LOG.info(\">>>>>>> itemCompareAndUpdate START OF SCRIPT -> Will compare contents of productProposed and \" +\n                    \"skuProposed MongoDB collections and either insert, update, or deactivate the existing \" +\n                    \"products and skus in the live tables\");\n\n\n                // in the delta but there in the DB\n                var batchSize = 10000; //How many records to compare per batch\n                var dataDomain = \"com.gnc\";\n\n                var comparisonResults = bulkProductSkuHelper.readProposedAndExisting(dataDomain, isFullSync, isDryRun, batchSize, productSkuArgs);\n                \n                var productSyncTask = comparisonResults.generateTaskProductSyncErrors();\n                if(productSyncTask !== null) {\n                   taskService.save(productSyncTask); \n                \n                }\n\n                //Print out results of comparison\n                //LOG.info(comparisonResults.toString());\n\n                LOG.warn(\">>>>>>> itemCompareAndUpdate END OF SCRIPT\");\n            }\n        } else {\n            LOG.warn(\">>>>>>> itemCompareAndUpdate Manual Re-sync, Skipping comparison! - END OF SCRIPT\");\n        }\n    }\n} else {\n    throw new java.lang.Exception(\"Invalid file name format: \" + header_CamelFileName);\n}\n**/",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "syncProductSkus",
    "refKey" : "5384e1d6b27914ef48bae69f78d540bc",
    "displayName" : "syncProductSkus",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "syncProductSkus" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531877736494,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1569764339159,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "a965f056-ac2f-4f0f-97fb-139b71c38fde",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "FileSystemEntryId" : {
          "id" : null,
          "refName" : "FileSystemEntryId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "FileSystemEntryId",
          "description" : null
        },
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "Object",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : true,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        },
        "header_CamelFileName" : {
          "id" : null,
          "refName" : "header_CamelFileName",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : true,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_CamelFileName",
          "description" : null
        },
        "header_FileSystemEntryId" : {
          "id" : null,
          "refName" : "header_FileSystemEntryId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_FileSystemEntryId",
          "description" : null
        },
        "header_LoadType" : {
          "id" : null,
          "refName" : "header_LoadType",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : true,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_LoadType",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "FileSystemEntryId" : {
        "type" : "scriptInputVariable",
        "name" : "FileSystemEntryId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "FileSystemEntryId",
        "parameters" : { }
      },
      "accountService" : {
        "type" : "serviceBean",
        "name" : "accountService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "accountService",
        "parameterName" : null,
        "parameters" : { }
      },
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "bulkInventoryPoolEntryHelperV2" : {
        "type" : "javaBean",
        "name" : "bulkInventoryPoolEntryHelperV2",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "bulkProductSkuHelper" : {
        "type" : "javaBean",
        "name" : "bulkProductSkuHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "catalogService" : {
        "type" : "serviceBean",
        "name" : "catalogService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "catalogService",
        "parameterName" : null,
        "parameters" : { }
      },
      "consumerResults" : {
        "type" : "javaBean",
        "name" : "consumerResults",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "header_CamelFileName" : {
        "type" : "scriptInputVariable",
        "name" : "header_CamelFileName",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_CamelFileName",
        "parameters" : { }
      },
      "header_FileSystemEntryId" : {
        "type" : "scriptInputVariable",
        "name" : "header_FileSystemEntryId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_FileSystemEntryId",
        "parameters" : { }
      },
      "header_LoadType" : {
        "type" : "scriptInputVariable",
        "name" : "header_LoadType",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_LoadType",
        "parameters" : { }
      },
      "notificationService" : {
        "type" : "serviceBean",
        "name" : "notificationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "notificationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationDAO" : {
        "type" : "javaBean",
        "name" : "organizationDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "productSkuBulkLoadResults" : {
        "type" : "javaBean",
        "name" : "productSkuBulkLoadResults",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "psvDeltaSyncResults" : {
        "type" : "javaBean",
        "name" : "psvDeltaSyncResults",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "taskService" : {
        "type" : "serviceBean",
        "name" : "taskService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "taskService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "routing",
  "inputs" : { },
  "result" : null,
  "active" : true,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "gncPolicy",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "gncPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531337454496,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1591201352156,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1common" : "com.eis.b2bmb.api.v1.common",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbcamelcustomutil" : "com.eis.b2bmb.camel.custom.util",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscloudcanonicalmodel" : "com.eis.cloud.canonical.model",
      "comeiscloudcanonicalmodelimports" : "com.eis.cloud.canonical.model.imports",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrskwiapiv1model" : "com.eis.extsvrs.kwi.api.v1.model",
      "comeisextsvrskwiapiv1services" : "com.eis.extsvrs.kwi.api.v1.services",
      "comeisextsvrsquickbooksapiv1dao" : "com.eis.extsvrs.quickbooks.api.v1.dao",
      "comeisextsvrsshipstationapiv1exception" : "com.eis.extsvrs.shipstation.api.v1.exception",
      "comeisextsvrsshipstationapiv1model" : "com.eis.extsvrs.shipstation.api.v1.model",
      "comeisextsvrsshipstationapiv1services" : "com.eis.extsvrs.shipstation.api.v1.services",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisextsvrssnapfulfilapiv1dao" : "com.eis.extsvrs.snapfulfil.api.v1.dao",
      "comeisextsvrssnapfulfilapiv1model" : "com.eis.extsvrs.snapfulfil.api.v1.model",
      "comeisextsvrssnapfulfilapiv1services" : "com.eis.extsvrs.snapfulfil.api.v1.services",
      "comeisextsvrssnapfulfilapiv1util" : "com.eis.extsvrs.snapfulfil.api.v1.util",
      "comeisgitimpl" : "com.eis.git.impl",
      "comeisgitmodel" : "com.eis.git.model",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngine" : "com.eis.oms.inventory.allocationEngine",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysync" : "com.eis.oms.inventory.sync",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparserscustomer" : "com.eis.ssit.parsers.customer",
      "comeisssitparserspricing" : "com.eis.ssit.parsers.pricing",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersvendor" : "com.eis.ssit.parsers.vendor",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comfasterxmljacksondataformatxml" : "com.fasterxml.jackson.dataformat.xml",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunorgapachexmlinternalserialize" : "com.sun.org.apache.xml.internal.serialize",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilregex" : "java.util.regex",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscodecbinary" : "org.apache.commons.codec.binary",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecommonslangtime" : "org.apache.commons.lang.time",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "syncProductSkus",
    "refId" : "a965f056-ac2f-4f0f-97fb-139b71c38fde",
    "refKey" : "5384e1d6b27914ef48bae69f78d540bc",
    "displayName" : "syncProductSkus",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "gncPolicy",
    "refId" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "scriptrunner@gnc.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}