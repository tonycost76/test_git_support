{
  "refName" : "processSalesOrders",
  "refKey" : "36c6225fb7c35c2f16a0f6cd0f3df18b",
  "displayName" : "processSalesOrders",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1533114176028,
    "createUser" : "Saket Satyarthi",
    "updateTs" : 1560519705002,
    "updateUser" : "GNC VDP"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "60034e40-ab82-4761-81ab-ff9fd26cd3ae",
  "script" : "var mapper = new com.eis.json.EnvisionJacksonJaxbXMLMapper();\nmapper.enable(com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT);\nmapper.setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_EMPTY);\n\nvar LOG = org.slf4j.LoggerFactory.getLogger(\"processGNCOrders:\");\nvar dataDomain = com.eis.security.multitenancy.model.SecureSession.getDefaultDataDomain();\nvar dataDomains = new java.util.ArrayList();\ndataDomains.add(dataDomain);\n\nfunction getMerchant(refName) {\n    var merchant = organizationService.getByRefName(refName);\n\n    if (merchant === null) {\n\n    } else {\n        return merchant;\n    }\n}\n\nfunction buildErrorList(message) {\n    var errorList = new java.util.ArrayList();\n    errorList.add(message);\n    return errorList;\n\n}\n\nfunction createTaskAndNotification(errorName, description, taskQueue, tags) {\n\n    var task = new com.eis.core.api.v1.model.Task();\n    task.setId(java.lang.String.valueOf(java.util.UUID.randomUUID()));\n    task.setDisplayName(errorName);\n    task.setStatus(\"Assigned\");\n    task.setRefName(errorName + \"-\" + java.lang.System.nanoTime());\n    description = description + \"\\n\\n\\n\";\n    for (var x = 0; x < tags.size(); x++) {\n        description = description + tags.get(x) + \"\\n\";\n    }\n    task.setDescription(description);\n    task.getDataDomains().addAll(dataDomains);\n\n    task.setAssignmentDate(new Date());\n    var dueDate = java.util.Calendar.getInstance();\n    dueDate.add(java.util.Calendar.DATE, 3);\n    task.setDueDate(dueDate.getTime());\n    task.setDateCreated(new Date());\n    task.setLabel(errorName);\n    task.setOwnerName(\"GNC Admin\");\n    task.setTaskQueueRefName(taskQueue);\n    task.getTags().addAll(tags);\n    taskDAO.save(task);\n}\n\nfunction alertAndNotifyOfError(errorList, orderNumber, taskQueue, tags) {\n    var primaryContactEmail = null;\n\n    var vendorName = \"NA\";\n\n    var subject = 'GNC Order Error - Order Number-' + orderNumber;\n\n    var message = errorList.get(0);\n    var taskQueueAndMessage = message.split('|');\n\n    if (isBlank(taskQueue)) {\n        if (taskQueueAndMessage.length > 1) {\n            taskQueue = taskQueueAndMessage[0];\n        } else {\n            taskQueue = 'order-processing-error';\n        }\n    }\n    var errorMessage = '';\n    if (taskQueueAndMessage.length > 1) {\n        errorMessage = taskQueueAndMessage[1];\n    } else {\n        errorMessage = taskQueueAndMessage[0];\n    }\n\n    var newErrorList = new java.util.ArrayList();\n    newErrorList.add(errorMessage);\n\n    if (primaryContactEmail === null) {\n        primaryContactEmail = \"ssatyarthi@envistacorp.com\";\n    }\n\n    if (taskQueue === 'exception' || taskQueue === 'order-vendor-item-missing' || taskQueue === 'order-already-received' || taskQueue === 'order-vendor-setup' || taskQueue === 'order-invalid-data') {\n   \n        var velocityContext = new org.apache.velocity.VelocityContext();\n        //velocityContext.put(\"fileName\", fileName);\n        velocityContext.put(\"errorList\", newErrorList);\n        velocityContext.put(\"orderNumber\", orderNumber);\n        velocityContext.put(\"description\", subject);\n        var body = scriptUtils.buildMessageFromVelocityTemplate(\"inbound/templates/orderValidationErrors.vm\", velocityContext);\n\n        var mailbox = scriptUtils.getMailbox(\"Alerts-Invalid-PurchaseOrders\");\n        scriptUtils.createMailboxEntry(mailbox, body, \"InvalidSalesOrder-\" + orderNumber + \".html\", subject, primaryContactEmail, \"alerts@enspirecommerce.com\", null, null, true);\n        \n    }\n    \n    taskHelper.notifyAndCreateTask(\n\t\tsubject + \"-\" + java.lang.System.nanoTime(),\n\t\tsubject,\n\t\terrorMessage,\n\t\tsubject, dataDomain,\n\t\tsubject, taskQueue, \"GNC Admin\");\n\n //   createTaskAndNotification(subject, errorMessage, taskQueue, tags);\n\n}\n\nfunction hasSalesOrderBeenReceived(salesOrder, tags) {\n    var alreadyReceived = false;\n\n    var salesOrders = salesOrderService.getList(0, 10, \"header.orderNumber:\" + salesOrder.getHeader().getOrderNumber(), null, null);\n\n    if (salesOrders.size() > 0) {\n        alreadyReceived = true;\n        var errorList = new java.util.ArrayList();\n        errorList.add(\"An order with this number has already been received and processed.\");\n        alertAndNotifyOfError(errorList, salesOrder.getHeader().getOrderNumber(), 'order-already-received', tags);\n    }\n\n    return alreadyReceived;\n}\n\n\nfunction isBlank(value) {\n    if (value === null || value === undefined || value === '') {\n        return true;\n    }\n    return false;\n}\n\nfunction handleError(errorList, salesOrder, alertError, tags) {\n    var mailbox = scriptUtils.getMailbox(\"Order-Errors\");\n    var mailboxEntry = writeToMailbox(salesOrder, mailbox);\n    tags.add(\"reprocessMailboxEntryId-\" + mailboxEntry.getId());\n    if (alertError) {\n        alertAndNotifyOfError(errorList, salesOrder.getHeader().getOrderNumber(), 'exception', tags);\n    }\n}\n\n\n\nfunction writeToMailbox(salesOrder, mailbox) {\n\n    var salesOrderCollection = new com.eis.ssit.api.v1.model.SalesOrderCollection();\n\n    salesOrderCollection.getItems().add(salesOrder);\n    var xml = mapper.writeValueAsString(salesOrderCollection);\n    var metaData = new java.util.LinkedHashMap();\n    var references = salesOrder.getReferenceData();\n\n\n    var fromInternalAddress = scriptUtils.getReferenceValueFromReferences(references, \"internalFromAddress\");\n    if (fromInternalAddress === null) {\n        fromInternalAddress = 'order@gnc.com';\n    }\n    var toInternalAddress = scriptUtils.getReferenceValueFromReferences(references, \"internalToAddress\");\n\n    if (toInternalAddress === null) {\n        toInternalAddress = 'oms@gnc.com';\n    }\n\n    metaData.put(\"orderNumber\", salesOrder.getHeader().getOrderNumber());\n    var mailboxEntry = scriptUtils.createMailboxEntry(mailbox, xml, \"SO_\" + salesOrder.getHeader().getOrderNumber() + \".xml\", \"SO-\" + salesOrder.getHeader().getOrderNumber(), toInternalAddress, fromInternalAddress, null, metaData, true);\n    return mailboxEntry;\n}\n\n\n\n\nfunction isSalesOrderValid(salesOrder, shipToContact, tags) {\n    var validSalesOrder = true;\n    var errorList = new java.util.ArrayList();\n    var address = shipToContact.getAddress();\n    var poBoxPattern = java.util.regex.Pattern.compile(\"^/(?:P(?:ost(?:al)?)?[\\.\\-\\s]*(?:(?:O(?:ffice)?[\\.\\-\\s]*)?B(?:ox|in|\\b|\\d)|o(?:ffice|\\b)(?:[-\\s]*\\d)|code)|box[-\\s\\b]*\\d)/i$\");\n\n    if (salesOrder.getHeader().getBuyerContactInfo() !== null && salesOrder.getHeader().getBuyerContactInfo().getAddress() !== null && !isBlank(salesOrder.getHeader().getBuyerContactInfo().getAddress().getAddress1())) {\n        if (isBlank(salesOrder.getHeader().getBuyerContactInfo().getAddress().getCountry())) {\n            validSalesOrder = false;\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The buyer country was not provided.\";\n            errorList.add(message);\n        }\n        \n        if(!isBlank(salesOrder.getHeader().getBuyerContactInfo().getAddress().getAddress1())) &&\n            !(poBoxPattern.matcher(salesOrder.getHeader().getBuyerContactInfo().getAddress().getAddress1()).matches())) {\n                var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The buyer address line 1 is a PO Box.\";\n            errorList.add(message);\n        }\n        \n        if(!isBlank(salesOrder.getHeader().getBuyerContactInfo().getAddress().getAddress2())) &&\n            !(poBoxPattern.matcher(salesOrder.getHeader().getBuyerContactInfo().getAddress().getAddress2()).matches())) {\n                var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The buyer address line 2 is a PO Box.\";\n            errorList.add(message);\n        }\n\n\tif(!isBlank(salesOrder.getHeader().getBuyerContactInfo().getAddress().getAddress3())) &&\n            !(poBoxPattern.matcher(salesOrder.getHeader().getBuyerContactInfo().getAddress().getAddress3()).matches())) {\n                var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The buyer address line 3 is a PO Box.\";\n            errorList.add(message);\n        }\n\n        if (isBlank(salesOrder.getHeader().getBuyerContactInfo().getAddress().getState())) {\n            validSalesOrder = false;\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The buyer state was not provided.\";\n            errorList.add(message);\n        }\n    }\n\n    if (salesOrder.getHeader().getBillToContactInfo() !== null && salesOrder.getHeader().getBillToContactInfo().getAddress() !== null && !isBlank(salesOrder.getHeader().getBillToContactInfo().getAddress().getAddress1())) {\n        if (isBlank(salesOrder.getHeader().getBillToContactInfo().getAddress().getCountry())) {\n            validSalesOrder = false;\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The buyer country was not provided.\";\n            errorList.add(message);\n        }\n\n        if (isBlank(salesOrder.getHeader().getBillToContactInfo().getAddress().getState())) {\n            validSalesOrder = false;\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The bill to state was not provided.\";\n            errorList.add(message);\n        }\n\n\tif(!isBlank(salesOrder.getHeader().getBillToContactInfo().getAddress().getAddress1())) &&\n            !(poBoxPattern.matcher(salesOrder.getHeader().getBillToContactInfo().getAddress().getAddress1()).matches())) {\n                var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The bill to address line 1 is a PO Box.\";\n            errorList.add(message);\n        }\n\n\tif(!isBlank(salesOrder.getHeader().getBillToContactInfo().getAddress().getAddress2())) &&\n            !(poBoxPattern.matcher(salesOrder.getHeader().getBillToContactInfo().getAddress().getAddress2()).matches())) {\n                var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The  bill to address line 2 is a PO Box.\";\n            errorList.add(message);\n        }\n\n\tif(!isBlank(salesOrder.getHeader().getBillToContactInfo().getAddress().getAddress3())) &&\n            !(poBoxPattern.matcher(salesOrder.getHeader().getBillToContactInfo().getAddress().getAddress3()).matches())) {\n                var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The bill toaddress line 3 is a PO Box.\";\n            errorList.add(message);\n        }\n\n    }\n\n    if (address !== undefined && address !== null) {\n        if (isBlank(address.getCountry())) {\n            validSalesOrder = false;\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The ship to country was not provided.\";\n            errorList.add(message);\n        }\n\n        if (isBlank(address.getState())) {\n            validSalesOrder = false;\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The ship to state was not provided.\";\n            errorList.add(message);\n        }\n\n\tif(!isBlank(address.getAddress1())) &&\n            !(poBoxPattern.matcher(address.getAddress1()).matches())) {\n                var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The ship to address line 1 is a PO Box.\";\n            errorList.add(message);\n        }\n        \n        if(!isBlank(address.getAddress2())) &&\n            !(poBoxPattern.matcher(address.getAddress2()).matches())) {\n                var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The ship to address line 2 is a PO Box.\";\n            errorList.add(message);\n        }\n\n\tif(!isBlank(address.getAddress3())) &&\n            !(poBoxPattern.matcher(address.getAddress3()).matches())) {\n                var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The ship to address line 3 is a PO Box.\";\n            errorList.add(message);\n        }\n\n    } else {\n        validSalesOrder = false;\n        var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". No ship to address was provided.\";\n        errorList.add(message);\n    }\n\n    if (!validSalesOrder) {\n        handleError(errorList, salesOrder, true, tags);\n    }\n\n    return validSalesOrder;\n}\n\nfunction buildSalesOrder(salesOrder, tags) {\n    LOG.info(\"buildSalesOrder :\" + salesOrder);\n    var shipToContact = null;\n    shipToContact = salesOrder.getHeader().getShipToContacts().get(0);\n    var soValid = isSalesOrderValid(salesOrder, shipToContact, tags);\n    \n    \n    // TC - 05-09-19 - Try to populate phone number\n    if(org.apache.commons.lang.StringUtils.isEmpty(salesOrder.getHeader().getBillToContactInfo().getPrimaryPhone())) {\n        if(org.apache.commons.lang.StringUtils.isNotEmpty(shipToContact.getPrimaryPhone())) {\n            salesOrder.getHeader().getBillToContactInfo().setPrimaryPhone(shipToContact.getPrimaryPhone());\n        }\n    }\n    \n    if(org.apache.commons.lang.StringUtils.isEmpty(shipToContact.getPrimaryPhone())) {\n        if(org.apache.commons.lang.StringUtils.isNotEmpty(salesOrder.getHeader().getBillToContactInfo().getPrimaryPhone())) {\n            shipToContact.setPrimaryPhone(salesOrder.getHeader().getBillToContactInfo().getPrimaryPhone());\n        }\n    }\n    \n    if(org.apache.commons.lang.StringUtils.isEmpty(salesOrder.getHeader().getBillToContactInfo().getPrimaryPhone()) &&\n       org.apache.commons.lang.StringUtils.isEmpty(shipToContact.getPrimaryPhone())) {\n       shipToContact.setPrimaryPhone(\"00000000000\");\n       salesOrder.getHeader().getBillToContactInfo().setPrimaryPhone(\"00000000000\");\n    }\n    \n    if(org.apache.commons.lang.StringUtils.isNotEmpty(shipToContact.getPrimaryPhone())) {\n         shipToContact.setPrimaryPhone(java.lang.String(shipToContact.getPrimaryPhone()).replaceAll(\"[^0-9]+\", \"\"));\n    }\n    \n     if(org.apache.commons.lang.StringUtils.isNotEmpty(salesOrder.getHeader().getBillToContactInfo().getPrimaryPhone())) {\n         salesOrder.getHeader().getBillToContactInfo().setPrimaryPhone(java.lang.String(salesOrder.getHeader().getBillToContactInfo().getPrimaryPhone()).replaceAll(\"[^0-9]+\", \"\"));\n    }\n    \n\n\n    if (soValid) {\n        var lineItems = salesOrder.getLineItems();\n        var vendorToLinesMap = mapLinesToVendor(lineItems);\n        if(LOG.isInfoEnabled())\n        \tLOG.info(\"*** vendorToLinesMap:\" + vendorToLinesMap);\n        var vendorIds = vendorToLinesMap.keySet();\n        var itr = vendorIds.iterator();\n        if (itr) {\n            var hdrCarrierService = salesOrder.getHeader().getCarrierServiceType();\n            var hdrShippingCarrier = salesOrder.getHeader().getShippingCarrier();\n            while (itr.hasNext()) {\n                var vendorId = itr.next();\n                var refName = vendorId + \"-\" + merchant.getRefName() + \"-12312017-12312149\";\n                var tradeAgreement = tradeAgreementService.getByRefName(refName);\n\n                var lines = vendorToLinesMap.get(vendorId);\n                var carrierService = getCarrierServiceMain(hdrCarrierService, shipToContact, lines);\n                if(LOG.isInfoEnabled())\n                \tLOG.info(\"*** carrierService:\" + carrierService);\n                if (null !== carrierService) {\n                    var carrier = hdrShippingCarrier;\n\t\t\t\t\tif (carrierService.startsWith('USPS')) {\n\t\t\t\t\t\tcarrier = \"USPS\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcarrier = \"FEDEX\";\n\t\t\t\t\t}\n                    \n                    salesOrder.getHeader().setShippingCarrier(\"\");\n                    salesOrder.getHeader().setCarrierServiceType(\"\");\n                    var linesSize = lines.size();\n                    for (var linesIndx = 0; linesIndx < linesSize; linesIndx++) {\n                        var line = lines.get(linesIndx);\n                        line.setCarrierServiceType(carrierService);\n                        line.setShippingCarrier(carrier);\n                        line.setShippingCharges(salesOrder.getHeader().getShippingCharges());\n\n                        if (tradeAgreement) {\n                            var termDiscountPer = tradeAgreement.getTermDiscountPercentage();\n                            var damageAllowancePer = tradeAgreement.getDamageAllowancePercentage();\n\n                            line.getDynAttributes().put(\"TermDiscountPercent\",\n                                termDiscountPer);\n                            line.getDynAttributes().put(\"DamageAllowancePercent\",\n                                damageAllowancePer);\n\n                            var baseamount = line.getDynAttributes().get(\"BaseAmount\");\n                            if (baseamount) {\n                            \tif(LOG.isInfoEnabled())\n                            \t\tLOG.info(\"**** baseamount:\" + baseamount);\n                                var termAllow = termDiscountPer * baseamount;\n                                var termAllowBD = new java.math.BigDecimal(termAllow);\n            \t\t\t\t\ttermAllowBD = termAllowBD.setScale(2, java.math.BigDecimal.ROUND_HALF_EVEN);\n            \t\t\t\t\t\n                                var damageAllow = damageAllowancePer * baseamount;\n                                var damageAllowBD = new java.math.BigDecimal(damageAllow);\n            \t\t\t\t\tdamageAllowBD = damageAllowBD.setScale(2, java.math.BigDecimal.ROUND_HALF_EVEN);\n            \t\t\t\t\t\n            \t\t\t\t\tvar cost = baseamount - termAllow - damageAllow;\n            \t\t\t\t\tvar costBD = new java.math.BigDecimal(cost);\n            \t\t\t\t\tcostBD = costBD.setScale(2, java.math.BigDecimal.ROUND_HALF_EVEN);\n            \t\t\t\t\t\n                                var costRef = new com.eis.core.api.v1.model.Reference();\n                                costRef.setName(\"cost\");\n                                costRef.setType(\"double\");\n                                costRef.setValue(costBD);\n                                line.getReferenceData().add(costRef);\n                                \n                                var termRef = new com.eis.core.api.v1.model.Reference();\n                                termRef.setName(\"termAllowance\");\n                                termRef.setType(\"double\");\n                                termRef.setValue(termAllowBD);\n                                line.getReferenceData().add(termRef);\n                                \n                                var damageRef = new com.eis.core.api.v1.model.Reference();\n                                damageRef.setName(\"damageAllowance\");\n                                damageRef.setType(\"double\");\n                                damageRef.setValue(damageAllowBD);\n                                line.getReferenceData().add(damageRef);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        salesOrder.getTags().addAll(tags);\n        salesOrder.setRefName(salesOrder.getHeader().getOrderNumber() + \":\" + java.lang.System.nanoTime());\n        salesOrder.getHeader().setOrderLookUpKey(salesOrder.getHeader().getOrderNumber());\n        salesOrder.setDataDomain(dataDomain);\n        salesOrder = salesOrderDAO.save(salesOrder);\n    }\n}\n\nfunction getWeight(lineItems) {\n    var wt = 0.0;\n    for (var i = 0; i < lineItems.size(); i++) {\n        var lineItem = lineItems.get(i);\n        if (LOG.isInfoEnabled)\n            LOG.info(\"lineItem :\" + lineItem);\n        var itemWt = lineItem.getDynAttributes().get(\"Weight\");\n        if (itemWt)\n            wt = wt + (itemWt * lineItem.getItemQty()) ;\n    }\n    return wt;\n}\n\nfunction getCarrierServiceForWeight(wt) {\n    var carrierService = null;\n    if (wt >= 1) {\n        carrierService = \"USPSPriority\";\n    } else {\n        carrierService = \"USPSFirstClass\";\n    }\n    return carrierService;\n}\n\nfunction getCarrierServiceMain(carrier, sc, lines) {\n    var carrierService = carrier;\n    if (carrier) {\n        if ('1DAY' == carrier) {\n            carrierService = \"FedExStandardOvernight\";\n        } else if ('2DAY' == carrier || 'ANY' == carrier) {\n            carrierService = \"FedEx2Day\";\n        } else if ('GRD' == carrier || 'PRIOR' == carrier) {\n            var address = sc.getAddress();\n            var state = address.getState();\n\n            if ('AK' == state || 'HI' == state) {\n                carrierService = \"FedEx2Day\";\n            } else {\n                var wt = getWeight(lines);\n                if (wt >= 1) {\n                    var address1 = address.getAddress1().toLowerCase();\n                    var city = address.getCity();\n                    if ('APO' == city || 'FPO' == city || address1.includes('po box') || 'PR' == state || 'GU' == state || 'VI' == state) {\n                        carrierService = \"USPSPriority\";\n                    } else {\n                        if (\"US\" == address.getCountry()) {\n                            carrierService = \"FedExGroundHomeDelivery\";\n                        }\n                    }\n                } else {\n                    carrierService = \"USPSFirstClass\";\n                }\n            }\n        }\n    } else {\n        carrierService = getCarrierService(sc, lines);\n    }\n    return carrierService;\n}\n\nfunction getCarrierService(sc, lines) {\n    var carrierService = null;\n    var address = sc.getAddress();\n    var wt = getWeight(lines);\n    var city = address.getCity();\n    if ('APO' == city || 'FPO' == city) {\n        return getCarrierServiceForWeight(wt);\n    }\n\n    var address1 = address.getAddress1().toLowerCase();\n    if (address1.includes('po box')) {\n        return getCarrierServiceForWeight(wt);\n    }\n    var state = address.getState();\n    if ('PR' == state || 'GU' == state || 'VI' == state) {\n        return getCarrierServiceForWeight(wt);\n    } else if ('AK' == state || 'HI' == state) {\n        carrierService = \"FedEx2Day\";\n    } else if ('US' == address.getCountry()) {\n        carrierService = getCarrierServiceForWeight(wt);\n        if (wt >= 1) {\n            carrierService = \"FedExGroundHomeDelivery\";\n        }\n    }\n    return carrierService;\n}\n\n\nfunction mapLinesToVendor(lineItems) {\n    var vendorToLinesMap = new java.util.HashMap();\n    var size = lineItems.size();\n    for (var i = 0; i < size; i++) {\n        var orderLine = lineItems.get(i);\n        var skuRefName = orderLine.getSystemCatalogProductIdentifier();\n        var sku = skuService.getByRefName(skuRefName);\n        if (sku) {\n            orderLine.getDynAttributes().put(\"Weight\",\n                sku.getWeight());\n            // Added for GN701-122\n            orderLine.setItemTitle(sku.getTitle());\n            var referenceData = sku.getReferenceData();\n            var vendorId = null;\n            if (null != referenceData) {\n                var refSize = referenceData.size();\n                for (var j = 0; j < refSize; j++) {\n                    var ref = referenceData.get(j);\n                    if (\"PrimaryVendorId\".equals(ref.getType()) || \"PrimaryVendorId\".equals(ref.getName())) {\n                        vendorId = ref.getValue();\n                        orderLine.getDynAttributes().put(\"VendorId\",\n                            vendorId);\n\n                        break;\n                    }\n                }\n                if (null != vendorId) {\n                    var lines = vendorToLinesMap.get(vendorId);\n                    if (null == lines) {\n                        lines = new java.util.ArrayList();\n                    }\n                    lines.add(orderLine);\n                    vendorToLinesMap.put(vendorId, lines);\n                    var pbeRefName = vendorId + \"-\" + merchant.getRefName() + \"-12312017-12312149\" + \"-\" + skuRefName;\n                    var pricebookEntry = priceBookEntryService.getByRefName(pbeRefName);\n\n                    if (pricebookEntry) {\n                        orderLine.getDynAttributes().put(\"BaseAmount\",\n                            pricebookEntry.getBaseAmount());\n                    }\n                }\n            }\n        }\n    }\n    return vendorToLinesMap;\n}\n\nfunction processSalesOrders() {\n\n    var clazz = new java.lang.Class.forName(\"com.eis.ssit.api.v1.model.SalesOrderCollection\");\n    var salesOrders = mapper.readValue(body, clazz).getItems();\n\n    for (var x = 0; x < salesOrders.size(); x++) {\n        var salesOrder = salesOrders.get(x);\n        var tags = new java.util.ArrayList();\n        tags.add(\"orderNumber-\" + salesOrder.getHeader().getOrderNumber());\n        tags.add(\"orignalOrderNumber-\" + salesOrder.getHeader().getOriginalOrderNumber());\n        tags.add(\"transmissionId-\" + header_transmissionId);\n        tags.add(\"file-\" + header_CamelFileName);\n        tags.add(\"mailboxEntryId-\" + header_MailboxEntryId);\n\n        try {\n\n            if (!hasSalesOrderBeenReceived(salesOrder, tags)) {\n                java.lang.System.out.println(\"Building SalesOrder\");\n                buildSalesOrder(salesOrder, tags);\n            } else {\n                handleError(buildErrorList(\"Order Already Received.\"), salesOrder, false, tags);\n            }\n\n        } catch (e) {\n            if (LOG.isErrorEnabled()) {\n                LOG.error(\"Error - {}\", e.message);\n            }\n\n            if (e instanceof com.eis.core.api.v1.exception.AccountConfigurationException) {\n\n                handleError(buildErrorList(e.getMessage()), salesOrder, true, tags);\n                continue;\n\n            } else if (e.javaException) {\n                if (!isBlank(e.javaException.message)) {\n                    handleError(buildErrorList(e.javaException.message), salesOrder, true, tags)\n                    continue;\n                } else {\n                    throw e;\n                }\n\n            } else {\n                throw e;\n            }\n        }\n\n    } \n}\n\nvar merchant = getMerchant(\"GNC-Organization-\");\nprocessSalesOrders();",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "processSO",
    "refKey" : "c32599c660ca0b74b2cb469c9032c4c5",
    "displayName" : "processSO",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "processSO" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1533113911788,
      "createUser" : "Saket Satyarthi",
      "updateTs" : 1557294832091,
      "updateUser" : "Lakshmi Ashok Kumar"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "27970141-a827-4e03-880e-d6556318d456",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        },
        "header_CamelFileName" : {
          "id" : null,
          "refName" : "header_CamelFileName",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_CamelFileName",
          "description" : null
        },
        "header_MailboxEntryId" : {
          "id" : null,
          "refName" : "header_MailboxEntryId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_MailboxEntryId",
          "description" : null
        },
        "header_transmissionId" : {
          "id" : null,
          "refName" : "header_transmissionId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_transmissionId",
          "description" : null
        },
        "header_txId" : {
          "id" : null,
          "refName" : "header_txId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_txId",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "correlationService" : {
        "type" : "serviceBean",
        "name" : "correlationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "correlationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "header_CamelFileName" : {
        "type" : "scriptInputVariable",
        "name" : "header_CamelFileName",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_CamelFileName",
        "parameters" : { }
      },
      "header_MailboxEntryId" : {
        "type" : "scriptInputVariable",
        "name" : "header_MailboxEntryId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_MailboxEntryId",
        "parameters" : { }
      },
      "header_transmissionId" : {
        "type" : "scriptInputVariable",
        "name" : "header_transmissionId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_transmissionId",
        "parameters" : { }
      },
      "header_txId" : {
        "type" : "scriptInputVariable",
        "name" : "header_txId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_txId",
        "parameters" : { }
      },
      "itemService" : {
        "type" : "serviceBean",
        "name" : "itemService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "itemService",
        "parameterName" : null,
        "parameters" : { }
      },
      "notificationDAO" : {
        "type" : "daoBean",
        "name" : "notificationDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "notificationDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationService" : {
        "type" : "serviceBean",
        "name" : "organizationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "organizationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "priceBookEntryService" : {
        "type" : "serviceBean",
        "name" : "priceBookEntryService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "priceBookEntryService",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderDAO" : {
        "type" : "daoBean",
        "name" : "salesOrderDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderService" : {
        "type" : "serviceBean",
        "name" : "salesOrderService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderService",
        "parameterName" : null,
        "parameters" : { }
      },
      "scriptUtils" : {
        "type" : "javaBean",
        "name" : "scriptUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "shipStationHelper" : {
        "type" : "javaBean",
        "name" : "shipStationHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentRequestService" : {
        "type" : "serviceBean",
        "name" : "shipmentRequestService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentRequestService",
        "parameterName" : null,
        "parameters" : { }
      },
      "shippingProfileService" : {
        "type" : "serviceBean",
        "name" : "shippingProfileService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shippingProfileService",
        "parameterName" : null,
        "parameters" : { }
      },
      "skuService" : {
        "type" : "serviceBean",
        "name" : "skuService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "skuService",
        "parameterName" : null,
        "parameters" : { }
      },
      "taskDAO" : {
        "type" : "daoBean",
        "name" : "taskDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "taskDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "taskHelper" : {
        "type" : "javaBean",
        "name" : "taskHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "tradeAgreementService" : {
        "type" : "serviceBean",
        "name" : "tradeAgreementService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "tradeAgreementService",
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorLocationService" : {
        "type" : "serviceBean",
        "name" : "vendorLocationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorLocationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorService" : {
        "type" : "serviceBean",
        "name" : "vendorService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "utility",
  "inputs" : { },
  "result" : null,
  "active" : true,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "gncPolicy",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "gncPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531337454496,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1591201352156,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1common" : "com.eis.b2bmb.api.v1.common",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbcamelcustomutil" : "com.eis.b2bmb.camel.custom.util",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscloudcanonicalmodel" : "com.eis.cloud.canonical.model",
      "comeiscloudcanonicalmodelimports" : "com.eis.cloud.canonical.model.imports",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrskwiapiv1model" : "com.eis.extsvrs.kwi.api.v1.model",
      "comeisextsvrskwiapiv1services" : "com.eis.extsvrs.kwi.api.v1.services",
      "comeisextsvrsquickbooksapiv1dao" : "com.eis.extsvrs.quickbooks.api.v1.dao",
      "comeisextsvrsshipstationapiv1exception" : "com.eis.extsvrs.shipstation.api.v1.exception",
      "comeisextsvrsshipstationapiv1model" : "com.eis.extsvrs.shipstation.api.v1.model",
      "comeisextsvrsshipstationapiv1services" : "com.eis.extsvrs.shipstation.api.v1.services",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisextsvrssnapfulfilapiv1dao" : "com.eis.extsvrs.snapfulfil.api.v1.dao",
      "comeisextsvrssnapfulfilapiv1model" : "com.eis.extsvrs.snapfulfil.api.v1.model",
      "comeisextsvrssnapfulfilapiv1services" : "com.eis.extsvrs.snapfulfil.api.v1.services",
      "comeisextsvrssnapfulfilapiv1util" : "com.eis.extsvrs.snapfulfil.api.v1.util",
      "comeisgitimpl" : "com.eis.git.impl",
      "comeisgitmodel" : "com.eis.git.model",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngine" : "com.eis.oms.inventory.allocationEngine",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysync" : "com.eis.oms.inventory.sync",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparserscustomer" : "com.eis.ssit.parsers.customer",
      "comeisssitparserspricing" : "com.eis.ssit.parsers.pricing",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersvendor" : "com.eis.ssit.parsers.vendor",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comfasterxmljacksondataformatxml" : "com.fasterxml.jackson.dataformat.xml",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunorgapachexmlinternalserialize" : "com.sun.org.apache.xml.internal.serialize",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilregex" : "java.util.regex",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscodecbinary" : "org.apache.commons.codec.binary",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecommonslangtime" : "org.apache.commons.lang.time",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "processSO",
    "refId" : "27970141-a827-4e03-880e-d6556318d456",
    "refKey" : "c32599c660ca0b74b2cb469c9032c4c5",
    "displayName" : "processSO",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "gncPolicy",
    "refId" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "admin@gnc.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}