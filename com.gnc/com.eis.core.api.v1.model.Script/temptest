{
  "refName" : "temptest",
  "refKey" : "cb9299fcba281310fe5d6ee983bdc601",
  "displayName" : "temptest",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1539225804448,
    "createUser" : "Lakshmi Ashok Kumar",
    "updateTs" : 1556098625147,
    "updateUser" : "Lakshmi Ashok Kumar"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "35b69077-42ad-4f46-9eab-7b27aae14bac",
  "script" : "var mapper = new com.eis.json.EnvisionJacksonJaxbXMLMapper();\r\nmapper.enable(com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT);\r\nmapper.setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT);\r\n\t\r\n\tvar tradeAgreement= tradeAgreementDAO.getByRefName(\"005538-GNC-Organization--12312017-12312149\",  \"com.gnc\");\r\n\t var clazz = new java.lang.Class.forName(\"com.eis.cloud.canonical.model.imports.PricingDetail\");\r\n\tvar tempPricing = mapper.readValue(body,\r\n                                           clazz);\r\n                                           \r\n/*                                           var dataDomain = \"com.gnc\";\r\nvar accountRefName = \"GNC-Account\";\r\nvar orgRefName = \"GNC-Organization-\";\r\n\r\n\r\n//var account = accountService.getByRefName(accountRefName, dataDomain);\r\nvar org = organizationService.getByRefName(orgRefName, dataDomain);\r\nvar channel = channelService.getByRefName(\"default\", dataDomain);\r\n var pricingArgs = new com.eis.ssit.parsers.pricing.PricingArgs();\r\n    pricingArgs.setBuyer(org);\r\n    pricingArgs.setDefaultPaymentTerms(\"NET30\");\r\n    pricingArgs.setDefaultBuyerCurrency(com.eis.core.api.v1.model.CurrencyCode.USD);\r\n    pricingArgs.setDefaultSellerCurrency(com.eis.core.api.v1.model.CurrencyCode.USD);\r\n    pricingArgs.setValidateSkuExists(true);\r\n    pricingArgs.setChannel(channel);\t\r\n\t\r\nvar fieldsToRemove = new java.util.ArrayList();\r\n      org.springframework.beans.BeanUtils.copyProperties(tempPricing.getTradeAgreement(), tradeAgreement,\r\n                fieldsToRemove);\r\n    /*    \r\n       tradeAgreement.setBuyer(buyingOrganization);\r\n\r\n        Organization sellingOrg = organizationDAO.getById(sellingOrganization.getId());\r\n        tradeAgreement.setSeller(sellingOrg);\r\n*/\r\n        tradeAgreement.setEffectiveEndDate(tempPricing.getTradeAgreement().getEffectiveEndDate() == null ?\r\n                pricingArgs.getEffectiveEndDate() : tempPricing.getTradeAgreement().getEffectiveEndDate());\r\n        tradeAgreement.setEffectiveStartDate(tempPricing.getTradeAgreement().getEffectiveStartDate() == null ?\r\n                pricingArgs.getEffectiveStartDate() : tempPricing.getTradeAgreement().getEffectiveStartDate());\r\n        tradeAgreement.setActive(true);\r\n        tradeAgreement.setType(tempPricing.getTradeAgreement().getType() == null ?\r\n                pricingArgs.getType() : tempPricing.getTradeAgreement().getType());\r\n   //     tradeAgreement.setPriceBook(priceBook);\r\n        tradeAgreement.setDefaultPaymentTerms(tempPricing.getTradeAgreement().getDefaultPaymentTerms() == null ?\r\n                pricingArgs.getDefaultPaymentTerms() : tempPricing.getTradeAgreement().getDefaultPaymentTerms());\r\n\r\n        tradeAgreement.setDefaultTransportTerms(tempPricing.getTradeAgreement().getDefaultTransportTerms() == null ?\r\n                pricingArgs.getDefaultTransportTerms() :\r\n                tempPricing.getTradeAgreement().getDefaultTransportTerms());\r\n\r\n\r\n        tradeAgreement.setDamageAllowancePercentage\r\n                (tempPricing.getTradeAgreement().getDamageAllowancePercentage() == null ?\r\n                null :\r\n                tempPricing.getTradeAgreement().getDamageAllowancePercentage());\r\n\r\n        tradeAgreement.setTermDiscountPercentage\r\n                (tempPricing.getTradeAgreement().getTermDiscountPercentage() == null ?\r\n                        null :\r\n                        tempPricing.getTradeAgreement().getTermDiscountPercentage());\r\n\r\n        tradeAgreement.setMinimumOrderValue\r\n                (tempPricing.getTradeAgreement().getMinimumOrderValue() == null ?\r\n                        null :\r\n                        tempPricing.getTradeAgreement().getMinimumOrderValue());\r\n/*\r\n        ItemMaster itemMaster = getItemMaster(sellingOrganization,itemMasterMap, dataDomain);\r\n        tradeAgreement.setItemMaster(itemMaster);\r\n*/\r\n        tradeAgreement.setDefaultCarrier(tempPricing.getTradeAgreement().getDefaultCarrier() == null ?\r\n                pricingArgs.getDefaultCarrier() : tempPricing.getTradeAgreement().getDefaultCarrier());\r\n        tradeAgreement.setDefaultCarrierLevelOfService(\r\n                tempPricing.getTradeAgreement().getDefaultCarrierLevelOfService() == null ?\r\n                pricingArgs.getDefaultCarrierLevelOfService() :\r\n                        tempPricing.getTradeAgreement().getDefaultCarrierLevelOfService());\r\n        tradeAgreement.setDefaultBuyerCurrency(tempPricing.getTradeAgreement().getDefaultBuyerCurrency() == null ?\r\n                pricingArgs.getDefaultBuyerCurrency() : CurrencyCode.valueOf(\r\n                        tempPricing.getTradeAgreement().getDefaultBuyerCurrency().toString()));\r\n\r\n        tradeAgreement.setDefaultSellerCurrency(tempPricing.getTradeAgreement().getDefaultSellerCurrency() == null ?\r\n                pricingArgs.getDefaultSellerCurrency() : CurrencyCode.valueOf(\r\n                        tempPricing.getTradeAgreement().getDefaultSellerCurrency().toString()));\r\n        if(tempPricing.getTradeAgreement().getMinimumOrderValue() != null) {\r\n            tradeAgreement.setMinimumOrderValue(tempPricing.getTradeAgreement().getMinimumOrderValue());\r\n        }\r\n\r\n*/\r\n        tradeAgreement = tradeAgreementDAO.save(tradeAgreement);",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "TEMP-test",
    "refKey" : "88f3d6d00d52abc550c16fcb7bf7b2d6",
    "displayName" : "TEMP-test",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "TEMP-test" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1556097172029,
      "createUser" : "Lakshmi Ashok Kumar",
      "updateTs" : 1556098506272,
      "updateUser" : "Lakshmi Ashok Kumar"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "d955af23-dbee-4d95-b676-ee6a77b87088",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : true,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "channelService" : {
        "type" : "serviceBean",
        "name" : "channelService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "channelService",
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationService" : {
        "type" : "serviceBean",
        "name" : "organizationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "organizationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "tradeAgreementDAO" : {
        "type" : "javaBean",
        "name" : "tradeAgreementDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "utility",
  "inputs" : { },
  "result" : null,
  "active" : true,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "gncPolicy",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "gncPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531337454496,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1591201352156,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1common" : "com.eis.b2bmb.api.v1.common",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbcamelcustomutil" : "com.eis.b2bmb.camel.custom.util",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscloudcanonicalmodel" : "com.eis.cloud.canonical.model",
      "comeiscloudcanonicalmodelimports" : "com.eis.cloud.canonical.model.imports",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrskwiapiv1model" : "com.eis.extsvrs.kwi.api.v1.model",
      "comeisextsvrskwiapiv1services" : "com.eis.extsvrs.kwi.api.v1.services",
      "comeisextsvrsquickbooksapiv1dao" : "com.eis.extsvrs.quickbooks.api.v1.dao",
      "comeisextsvrsshipstationapiv1exception" : "com.eis.extsvrs.shipstation.api.v1.exception",
      "comeisextsvrsshipstationapiv1model" : "com.eis.extsvrs.shipstation.api.v1.model",
      "comeisextsvrsshipstationapiv1services" : "com.eis.extsvrs.shipstation.api.v1.services",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisextsvrssnapfulfilapiv1dao" : "com.eis.extsvrs.snapfulfil.api.v1.dao",
      "comeisextsvrssnapfulfilapiv1model" : "com.eis.extsvrs.snapfulfil.api.v1.model",
      "comeisextsvrssnapfulfilapiv1services" : "com.eis.extsvrs.snapfulfil.api.v1.services",
      "comeisextsvrssnapfulfilapiv1util" : "com.eis.extsvrs.snapfulfil.api.v1.util",
      "comeisgitimpl" : "com.eis.git.impl",
      "comeisgitmodel" : "com.eis.git.model",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngine" : "com.eis.oms.inventory.allocationEngine",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysync" : "com.eis.oms.inventory.sync",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparserscustomer" : "com.eis.ssit.parsers.customer",
      "comeisssitparserspricing" : "com.eis.ssit.parsers.pricing",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersvendor" : "com.eis.ssit.parsers.vendor",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comfasterxmljacksondataformatxml" : "com.fasterxml.jackson.dataformat.xml",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunorgapachexmlinternalserialize" : "com.sun.org.apache.xml.internal.serialize",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilregex" : "java.util.regex",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscodecbinary" : "org.apache.commons.codec.binary",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecommonslangtime" : "org.apache.commons.lang.time",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "TEMP-test",
    "refId" : "d955af23-dbee-4d95-b676-ee6a77b87088",
    "refKey" : "88f3d6d00d52abc550c16fcb7bf7b2d6",
    "displayName" : "TEMP-test",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "gncPolicy",
    "refId" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "admin@gnc.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}