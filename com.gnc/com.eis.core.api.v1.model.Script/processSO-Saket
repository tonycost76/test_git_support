{
  "refName" : "processSO-Saket",
  "refKey" : "0c15da0b12802ec9d6e9636ac91cc0e5",
  "displayName" : "processSO-Saket",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1536240599969,
    "createUser" : "Saket Satyarthi",
    "updateTs" : 1536693873056,
    "updateUser" : "Saket Satyarthi"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "7375009f-e765-4bd4-bbf3-0997ba2889fd",
  "script" : "var mapper = new com.eis.json.EnvisionJacksonJaxbXMLMapper();\r\nmapper.enable(com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT);\r\nmapper.setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_EMPTY);\r\n\r\nvar LOG = org.slf4j.LoggerFactory.getLogger(\"processGNCOrders:\");\r\nvar dataDomain = com.eis.security.multitenancy.model.SecureSession.getDefaultDataDomain();\r\nvar dataDomains = new java.util.ArrayList();\r\ndataDomains.add(dataDomain);\r\n\r\n\r\nfunction buildErrorList(message) {\r\n    var errorList = new java.util.ArrayList();\r\n    errorList.add(message);\r\n    return errorList;\r\n\r\n}\r\n\r\nfunction createTaskAndNotification(errorName, description, taskQueue,tags) {\r\n\r\n    var task = new com.eis.core.api.v1.model.Task();\r\n    task.setId(java.lang.String.valueOf(java.util.UUID.randomUUID()));\r\n    task.setDisplayName(errorName);\r\n    task.setStatus(\"Assigned\");\r\n    task.setRefName(errorName + \"-\" + java.lang.System.nanoTime());\r\n    description = description + \"\\n\\n\\n\";\r\n    for (var x = 0; x < tags.size(); x++) {\r\n        description = description + tags.get(x) + \"\\n\";\r\n    }\r\n    task.setDescription(description);\r\n    task.getDataDomains().addAll(dataDomains);\r\n\r\n    task.setAssignmentDate(new Date());\r\n    var dueDate = java.util.Calendar.getInstance();\r\n    dueDate.add(java.util.Calendar.DATE, 3);\r\n    task.setDueDate(dueDate.getTime());\r\n    task.setDateCreated(new Date());\r\n    task.setLabel(errorName);\r\n    task.setOwnerName(\"GNC Admin\");\r\n    task.setTaskQueueRefName(taskQueue);\r\n    task.getTags().addAll(tags);\r\n    taskDAO.save(task);\r\n}\r\n\r\nfunction alertAndNotifyOfError(errorList, orderNumber, taskQueue, tags) {\r\n    var primaryContactEmail = null;\r\n\r\n    var vendorName = \"NA\";\r\n\r\n    var subject = 'gnc Order Error - Order Number-' + orderNumber;\r\n\r\n    var message = errorList.get(0);\r\n    var taskQueueAndMessage = message.split('|');\r\n\r\n    if (isBlank(taskQueue)) {\r\n        if (taskQueueAndMessage.length > 1) {\r\n            taskQueue = taskQueueAndMessage[0];\r\n        } else {\r\n            taskQueue = 'order-processing-error';\r\n        }\r\n    }\r\n    var errorMessage = '';\r\n    if (taskQueueAndMessage.length > 1) {\r\n        errorMessage = taskQueueAndMessage[1];\r\n    } else {\r\n        errorMessage = taskQueueAndMessage[0];\r\n    }\r\n\r\n    var newErrorList = new java.util.ArrayList();\r\n    newErrorList.add(errorMessage);\r\n\r\n    if (primaryContactEmail === null) {\r\n        primaryContactEmail = \"gisley@enspirecommerce.com\";\r\n    }\r\n\r\n    if (taskQueue === 'exception' || taskQueue === 'order-vendor-item-missing' || taskQueue === 'order-already-received' || taskQueue === 'order-vendor-setup' || taskQueue === 'order-invalid-data') {\r\n        /**\r\n        var velocityContext = new org.apache.velocity.VelocityContext();\r\n        //velocityContext.put(\"fileName\", fileName);\r\n        velocityContext.put(\"errorList\", newErrorList);\r\n        velocityContext.put(\"orderNumber\", orderNumber);\r\n        velocityContext.put(\"description\", subject);\r\n        var body = scriptUtils.buildMessageFromVelocityTemplate(\"integration/emailTemplates/orderValidationErrors.vm\", velocityContext);\r\n\r\n        var mailbox = scriptUtils.getMailbox(\"PurchaseOrder-Invalid-Email\");\r\n        scriptUtils.createMailboxEntry(mailbox, body, \"InvalidSalesOrder-\" + orderNumber + \".html\", subject, primaryContactEmail, \"alerts@enspirecommerce.com\", null, null, true);\r\n        **/\r\n    }\r\n\r\n    createTaskAndNotification(subject, errorMessage, taskQueue,tags);\r\n\r\n}\r\n\r\nfunction hasSalesOrderBeenReceived(salesOrder,tags) {\r\n    var alreadyReceived = false;\r\n\r\n    var salesOrders = salesOrderService.getList(0, 10, \"header.orderNumber:\" + salesOrder.getHeader().getOrderNumber(), null, null);\r\n\r\n    if (salesOrders.size() > 0) {\r\n        alreadyReceived = true;\r\n        var errorList = new java.util.ArrayList();\r\n        errorList.add(\"Enspire Commerce could not process Order From the CEP,\" +\r\n            salesOrder.getHeader().getOrderNumber() + \". An order with this number has already been received and processed.\");\r\n        alertAndNotifyOfError(errorList, salesOrder.getHeader().getOrderNumber(), 'order-already-received',tags);\r\n    }\r\n\r\n    return alreadyReceived;\r\n}\r\n\r\n\r\nfunction isBlank(value) {\r\n    if (value === null || value === undefined || value === '') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction handleError(errorList, salesOrder, alertError,tags) {\r\n    var mailbox = scriptUtils.getMailbox(\"Order-Errors\");\r\n    var mailboxEntry = writeToMailbox(salesOrder, mailbox);\r\n    tags.add(\"reprocessMailboxEntryId-\" + mailboxEntry.getId());\r\n    if (alertError) {\r\n        alertAndNotifyOfError(errorList, salesOrder.getHeader().getOrderNumber(),'exception',tags);\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction writeToMailbox(salesOrder, mailbox) {\r\n\r\n    var salesOrderCollection = new com.eis.ssit.api.v1.model.SalesOrderCollection();\r\n\r\n    salesOrderCollection.getItems().add(salesOrder);\r\n    var xml = mapper.writeValueAsString(salesOrderCollection);\r\n    var metaData = new java.util.LinkedHashMap();\r\n    var references = salesOrder.getReferenceData();\r\n   \r\n   \r\n    var fromInternalAddress = scriptUtils.getReferenceValueFromReferences(references, \"internalFromAddress\");\r\n    if (fromInternalAddress === null) {\r\n        fromInternalAddress = 'order@gnc.com';\r\n    }\r\n    var toInternalAddress = scriptUtils.getReferenceValueFromReferences(references, \"internalToAddress\");\r\n\r\n    if (toInternalAddress === null) {\r\n        toInternalAddress = 'oms@gnc.com';\r\n    }\r\n\r\n    metaData.put(\"orderNumber\", salesOrder.getHeader().getOrderNumber());\r\n    var mailboxEntry = scriptUtils.createMailboxEntry(mailbox, xml, \"SO_\" + salesOrder.getHeader().getOrderNumber() + \".xml\", \"SO-\" + salesOrder.getHeader().getOrderNumber(), toInternalAddress, fromInternalAddress, null, metaData, true);\r\n    return mailboxEntry;\r\n}\r\n\r\n\r\n\r\n\r\nfunction isSalesOrderValid(salesOrder, shipToContact,tags) {\r\n    var validSalesOrder = true;\r\n    var errorList = new java.util.ArrayList();\r\n    var address = shipToContact.getAddress();\r\n\r\n    if (salesOrder.getHeader().getBuyerContactInfo() !== null && salesOrder.getHeader().getBuyerContactInfo().getAddress() !== null && !isBlank(salesOrder.getHeader().getBuyerContactInfo().getAddress().getAddress1())) {\r\n        if (isBlank(salesOrder.getHeader().getBuyerContactInfo().getAddress().getCountry())) {\r\n            validSalesOrder = false;\r\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The buyer country was not provided.\";\r\n            errorList.add(message);\r\n        }\r\n\r\n        if (isBlank(salesOrder.getHeader().getBuyerContactInfo().getAddress().getState())) {\r\n            validSalesOrder = false;\r\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The buyer state was not provided.\";\r\n            errorList.add(message);\r\n        }\r\n    }\r\n\r\n    if (salesOrder.getHeader().getBillToContactInfo() !== null && salesOrder.getHeader().getBillToContactInfo().getAddress() !== null && !isBlank(salesOrder.getHeader().getBillToContactInfo().getAddress().getAddress1())) {\r\n        if (isBlank(salesOrder.getHeader().getBillToContactInfo().getAddress().getCountry())) {\r\n            validSalesOrder = false;\r\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() +\". The buyer country was not provided.\";\r\n            errorList.add(message);\r\n        }\r\n\r\n        if (isBlank(salesOrder.getHeader().getBillToContactInfo().getAddress().getState())) {\r\n            validSalesOrder = false;\r\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The buyer state was not provided.\";\r\n            errorList.add(message);\r\n        }\r\n    }\r\n\r\n    if (address !== undefined && address !== null) {\r\n        if (isBlank(address.getCountry())) {\r\n            validSalesOrder = false;\r\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The ship to country was not provided.\";\r\n            errorList.add(message);\r\n        }\r\n\r\n        if (isBlank(address.getState())) {\r\n            validSalesOrder = false;\r\n            var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". The ship to state was not provided.\";\r\n            errorList.add(message);\r\n        }\r\n\r\n    } else {\r\n        validSalesOrder = false;\r\n        var message = \"order-invalid-data|Enspire Commerce could not process Sales Order, \" + salesOrder.getHeader().getOrderNumber() + \". No ship to address was provided.\";\r\n        errorList.add(message);\r\n    }\r\n\r\n    if (!validSalesOrder) {\r\n        handleError(errorList, salesOrder, true, tags);\r\n    }\r\n\r\n    return validSalesOrder;\r\n}\r\n\r\nfunction buildSalesOrder(salesOrder,tags) {\r\n    LOG.info(\"buildSalesOrder :\" + salesOrder);\r\n    var shipToContact = null;\r\n    shipToContact = salesOrder.getHeader().getShipToContacts().get(0);\r\n    var soValid = isSalesOrderValid(salesOrder, shipToContact,tags);\r\n\r\n    if (soValid) {\r\n    \tvar lineItems = salesOrder.getLineItems();\r\n    \tvar vendorToLinesMap = mapLinesToVendor(lineItems);\r\n        LOG.info(\"laks vendorToLinesMap:\" + vendorToLinesMap);\r\n        var vendorIds = vendorToLinesMap.keySet();\r\n        var itr =  vendorIds.iterator();\r\n        if(itr){\r\n           while(itr.hasNext())\r\n           {\r\n           \t   var vendorId = itr.next();\r\n               var lines = vendorToLinesMap.get(vendorId);\r\n    \t\t   var carrierService = getCarrierService(shipToContact,lines);\r\n    \t\t   \r\n    \t\t   if(null !== carrierService)\r\n    \t\t\t{  \r\n    \t\t\t\tvar carrier = null;\r\n    \t\t\t\tif(carrierService.startsWith('USPS'))\r\n    \t\t\t\t{\r\n           \t\t\t\tcarrier=\"USPS\";\r\n           \t\t\t}\r\n           \t\t\telse\r\n           \t\t\t{\r\n           \t\t\t\tcarrier=\"FEDEX\";\r\n           \t\t\t}\r\n    \t\t\t\tvar linesSize = lines.size();\r\n    \t\t\t\tfor(var linesIndx = 0; linesIndx < linesSize; linesIndx++)\r\n    \t\t\t\t{\r\n    \t\t\t\t\tvar line = lines.get(linesIndx);\r\n    \t\t\t\t\tline.setCarrierServiceType(carrierService);\r\n            \t\t\tline.setShippingCarrier(carrier);\r\n                \t\tline.setShippingCharges(salesOrder.getHeader().getShippingCharges());\r\n    \t\t\t\t}\r\n        \t\t}\r\n    \t\t}\r\n    \t}\r\n        salesOrder.getTags().addAll(tags);\r\n        salesOrder.setRefName(salesOrder.getHeader().getOrderNumber() + \":\" + java.lang.System.nanoTime());\r\n        salesOrder.getHeader().setOrderLookUpKey(salesOrder.getHeader().getOrderNumber());\r\n        salesOrder.setDataDomain(dataDomain);\r\n\t\tsalesOrder = salesOrderDAO.save(salesOrder);\r\n    }\r\n}\r\n\r\nfunction getWeight(lineItems) {\r\n\tvar wt = 0.0;\r\n\tfor (var i = 0; i < lineItems.size(); i++) {\r\n        var lineItem = lineItems.get(i);\r\n        if(LOG.isInfoEnabled)\r\n            LOG.info(\"lineItem :\" + lineItem);\r\n        var itemWt = lineItem.getDynAttributes().get(\"Weight\");\r\n        if(itemWt)\r\n            wt = wt + itemWt;        \r\n    }    \r\n\treturn wt;\r\n}\r\n\r\nfunction getCarrierServiceForWeight(wt)\r\n{\r\n\tvar carrierService = null;\r\n\tif(wt >= 1)\r\n\t{\r\n\t\tcarrierService = \"USPSPriority\";\t\t\t\t\t\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcarrierService = \"USPSFirstClass\";\r\n\t}\r\n\treturn carrierService;\r\n}\r\n\r\nfunction getCarrierService(sc, lines)\r\n{\t\t\r\n\t\tvar carrierService = null;\r\n\t\tvar address = sc.getAddress();\r\n\t\tvar wt = getWeight(lines);\r\n\t\tvar city = address.getCity();\r\n\t\tif('APO' == city || 'FPO' == city)\r\n\t\t{\r\n\t\t\treturn getCarrierServiceForWeight(wt);\r\n\t\t}\r\n\t\t\t\t\r\n\t\tvar address1 = address.getAddress1().toLowerCase();\r\n\t\tif(address1.includes('po box'))\r\n\t\t{\r\n\t\t\treturn getCarrierServiceForWeight(wt);\r\n\t\t}\r\n\t\tvar state = address.getState();\t\t\t\t\r\n\t\tif('PR' == state || 'GU' == state || 'VI' == state )\r\n\t\t{\r\n\t\t\treturn getCarrierServiceForWeight(wt);\r\n\t\t}\r\n\t\telse if('AK' == state || 'HI' == state )\r\n\t\t{\r\n\t\t\tcarrierService = \"FedEx2Day\";\t\t\t\t\t\r\n\t\t}\t\r\n\t\telse if('US' == address.getCountry() )\r\n\t\t{\t\r\n\t\t\tcarrierService =  getCarrierServiceForWeight(wt);\r\n\t\t\tif(wt >= 1)\r\n\t\t\t{\r\n\t\t\t\tcarrierService = \"FedExGroundHomeDelivery\";\t\r\n\t\t\t}\r\n\t\t}\t\t\t\t\t\t\t\t\r\n\t\treturn carrierService;\r\n}\r\n\r\n\r\nfunction mapLinesToVendor(lineItems)\r\n{\r\n       var vendorToLinesMap = new java.util.HashMap();\r\n       var size = lineItems.size();\r\n       for(var i=0; i < size ; i++)\r\n       {\r\n            var orderLine = lineItems.get(i);\r\n            var skuRefName = orderLine.getSystemCatalogProductIdentifier();\r\n            var sku = skuService.getByRefName(skuRefName);\r\n            LOG.info(\"laks orderLine sku:\" + sku);\r\n            if(sku)\r\n            {\r\n            \torderLine.getDynAttributes().put(\"Weight\",\r\n\t\t\t\t\tsku.getWeight());\r\n\t\t\t\tvar referenceData = sku.getReferenceData();\r\n\t\t\t\tLOG.info(\"laks orderLine referenceData:\" + referenceData);\r\n\t\t\t\tvar vendorId = null;\r\n\t\t\t\tif(null != referenceData) {\r\n\t\t\t\t\tvar refSize = referenceData.size();\r\n\t\t\t\t\tfor (var j=0; j < refSize; j++) {\r\n\t\t\t\t\t\tvar ref = referenceData.get(j);\r\n\t\t\t\t\t\tif (\"PrimaryVendorId\".equals(ref.getType()) || \"PrimaryVendorId\".equals(ref.getName())) {\r\n\t\t\t\t\t\t\tvendorId = ref.getValue();\r\n\t\t\t\t\t\t\tLOG.info(\"laks PrimaryVendorId:\" + vendorId);\r\n\t\t\t\t\t\t\torderLine.getDynAttributes().put(\"VendorId\",\r\n\t\t\t\t\tvendorId);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(null != vendorId)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar lines = vendorToLinesMap.get(vendorId);\r\n\t\t\t\t\t\tif(null == lines)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlines = new java.util.ArrayList();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlines.add(orderLine);\r\n\t\t\t\t\t\tvendorToLinesMap.put(vendorId,lines);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            }\r\n       }\r\n       return vendorToLinesMap;\r\n}\r\n\r\nfunction processSalesOrders() {\r\n\r\n    var clazz = new java.lang.Class.forName(\"com.eis.ssit.api.v1.model.SalesOrderCollection\");\r\n    var salesOrders = mapper.readValue(body, clazz).getItems();\r\n    \r\n    for (var x = 0; x < salesOrders.size(); x++) {\r\n        var salesOrder = salesOrders.get(x);\r\n        var tags = new java.util.ArrayList();\r\n        tags.add(\"orderNumber-\" + salesOrder.getHeader().getOrderNumber());\r\n        tags.add(\"orignalOrderNumber-\" + salesOrder.getHeader().getOriginalOrderNumber());\r\n        tags.add(\"transmissionId-\" + header_transmissionId);\r\n        tags.add(\"file-\" + header_CamelFileName);\r\n        tags.add(\"mailboxEntryId-\" + header_MailboxEntryId);\r\n    \r\n       try {\r\n\r\n            if (!hasSalesOrderBeenReceived(salesOrder,tags)) {\r\n                java.lang.System.out.println(\"Building SalesOrder\");\r\n                buildSalesOrder(salesOrder, tags);\r\n            } else {\r\n                handleError(buildErrorList(\"Order Already Received.\"), salesOrder, false, tags);\r\n            }\r\n\r\n        } catch (e) {\r\n\t\t\t if (LOG.isErrorEnabled()) {\r\n                LOG.error(\"Error - {}\", e.message);\r\n            }\r\n\r\n            if (e instanceof com.eis.core.api.v1.exception.AccountConfigurationException) {\r\n\r\n                handleError(buildErrorList(e.getMessage()), salesOrder, true,tags);\r\n                continue;\r\n\r\n            } else if (e.javaException) {\r\n        \t\tif(!isBlank(e.javaException.message)) {                 \r\n        \t\t\thandleError(buildErrorList(e.javaException.message), salesOrder, true,tags)\r\n                        \tcontinue;\r\n        \t\t} else {\r\n        \t\t\tthrow e; \r\n        \t\t} \r\n\r\n            } else {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nprocessSalesOrders();",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "processSO",
    "refKey" : "c32599c660ca0b74b2cb469c9032c4c5",
    "displayName" : "processSO",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "processSO" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1533113911788,
      "createUser" : "Saket Satyarthi",
      "updateTs" : 1557294832091,
      "updateUser" : "Lakshmi Ashok Kumar"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "27970141-a827-4e03-880e-d6556318d456",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        },
        "header_CamelFileName" : {
          "id" : null,
          "refName" : "header_CamelFileName",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_CamelFileName",
          "description" : null
        },
        "header_MailboxEntryId" : {
          "id" : null,
          "refName" : "header_MailboxEntryId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_MailboxEntryId",
          "description" : null
        },
        "header_transmissionId" : {
          "id" : null,
          "refName" : "header_transmissionId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_transmissionId",
          "description" : null
        },
        "header_txId" : {
          "id" : null,
          "refName" : "header_txId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_txId",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "correlationService" : {
        "type" : "serviceBean",
        "name" : "correlationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "correlationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "header_CamelFileName" : {
        "type" : "scriptInputVariable",
        "name" : "header_CamelFileName",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_CamelFileName",
        "parameters" : { }
      },
      "header_MailboxEntryId" : {
        "type" : "scriptInputVariable",
        "name" : "header_MailboxEntryId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_MailboxEntryId",
        "parameters" : { }
      },
      "header_transmissionId" : {
        "type" : "scriptInputVariable",
        "name" : "header_transmissionId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_transmissionId",
        "parameters" : { }
      },
      "header_txId" : {
        "type" : "scriptInputVariable",
        "name" : "header_txId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_txId",
        "parameters" : { }
      },
      "itemService" : {
        "type" : "serviceBean",
        "name" : "itemService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "itemService",
        "parameterName" : null,
        "parameters" : { }
      },
      "notificationDAO" : {
        "type" : "daoBean",
        "name" : "notificationDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "notificationDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationService" : {
        "type" : "serviceBean",
        "name" : "organizationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "organizationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "priceBookEntryService" : {
        "type" : "serviceBean",
        "name" : "priceBookEntryService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "priceBookEntryService",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderDAO" : {
        "type" : "daoBean",
        "name" : "salesOrderDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderService" : {
        "type" : "serviceBean",
        "name" : "salesOrderService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderService",
        "parameterName" : null,
        "parameters" : { }
      },
      "scriptUtils" : {
        "type" : "javaBean",
        "name" : "scriptUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "shipStationHelper" : {
        "type" : "javaBean",
        "name" : "shipStationHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentRequestService" : {
        "type" : "serviceBean",
        "name" : "shipmentRequestService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentRequestService",
        "parameterName" : null,
        "parameters" : { }
      },
      "shippingProfileService" : {
        "type" : "serviceBean",
        "name" : "shippingProfileService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shippingProfileService",
        "parameterName" : null,
        "parameters" : { }
      },
      "skuService" : {
        "type" : "serviceBean",
        "name" : "skuService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "skuService",
        "parameterName" : null,
        "parameters" : { }
      },
      "taskDAO" : {
        "type" : "daoBean",
        "name" : "taskDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "taskDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "taskHelper" : {
        "type" : "javaBean",
        "name" : "taskHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "tradeAgreementService" : {
        "type" : "serviceBean",
        "name" : "tradeAgreementService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "tradeAgreementService",
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorLocationService" : {
        "type" : "serviceBean",
        "name" : "vendorLocationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorLocationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorService" : {
        "type" : "serviceBean",
        "name" : "vendorService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "utility",
  "inputs" : { },
  "result" : null,
  "active" : false,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "gncPolicy",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "gncPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531337454496,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1591201352156,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1common" : "com.eis.b2bmb.api.v1.common",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbcamelcustomutil" : "com.eis.b2bmb.camel.custom.util",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscloudcanonicalmodel" : "com.eis.cloud.canonical.model",
      "comeiscloudcanonicalmodelimports" : "com.eis.cloud.canonical.model.imports",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrskwiapiv1model" : "com.eis.extsvrs.kwi.api.v1.model",
      "comeisextsvrskwiapiv1services" : "com.eis.extsvrs.kwi.api.v1.services",
      "comeisextsvrsquickbooksapiv1dao" : "com.eis.extsvrs.quickbooks.api.v1.dao",
      "comeisextsvrsshipstationapiv1exception" : "com.eis.extsvrs.shipstation.api.v1.exception",
      "comeisextsvrsshipstationapiv1model" : "com.eis.extsvrs.shipstation.api.v1.model",
      "comeisextsvrsshipstationapiv1services" : "com.eis.extsvrs.shipstation.api.v1.services",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisextsvrssnapfulfilapiv1dao" : "com.eis.extsvrs.snapfulfil.api.v1.dao",
      "comeisextsvrssnapfulfilapiv1model" : "com.eis.extsvrs.snapfulfil.api.v1.model",
      "comeisextsvrssnapfulfilapiv1services" : "com.eis.extsvrs.snapfulfil.api.v1.services",
      "comeisextsvrssnapfulfilapiv1util" : "com.eis.extsvrs.snapfulfil.api.v1.util",
      "comeisgitimpl" : "com.eis.git.impl",
      "comeisgitmodel" : "com.eis.git.model",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngine" : "com.eis.oms.inventory.allocationEngine",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysync" : "com.eis.oms.inventory.sync",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparserscustomer" : "com.eis.ssit.parsers.customer",
      "comeisssitparserspricing" : "com.eis.ssit.parsers.pricing",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersvendor" : "com.eis.ssit.parsers.vendor",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comfasterxmljacksondataformatxml" : "com.fasterxml.jackson.dataformat.xml",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunorgapachexmlinternalserialize" : "com.sun.org.apache.xml.internal.serialize",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilregex" : "java.util.regex",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscodecbinary" : "org.apache.commons.codec.binary",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecommonslangtime" : "org.apache.commons.lang.time",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "processSO",
    "refId" : "27970141-a827-4e03-880e-d6556318d456",
    "refKey" : "c32599c660ca0b74b2cb469c9032c4c5",
    "displayName" : "processSO",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "gncPolicy",
    "refId" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "admin@gnc.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}