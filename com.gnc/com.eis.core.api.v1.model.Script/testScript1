{
  "refName" : "testScript1",
  "refKey" : "55874ac4d15942200afbaa725a2fd7f3",
  "displayName" : "testScript1",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1535959404130,
    "createUser" : "Saket Satyarthi",
    "updateTs" : 1547647092605,
    "updateUser" : "GNC VDP"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "226266a9-5387-4cbf-a818-cae602ed0537",
  "script" : "var mapper = new com.eis.json.EnvisionJacksonJaxbXMLMapper();\r\nmapper.enable(com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT);\r\nmapper.setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT);\r\n\r\nvar log = org.slf4j.LoggerFactory.getLogger(\"releaseSalesOrder:\");\r\n\r\n// gets a Sales Order, right now by id - but should come from the camel header\r\nfunction getSalesOrder(orderId) {\r\n    var order = salesOrderService.getById(orderId);  \r\n    return order;\r\n}\r\n\r\nfunction getVendorLocation(vendor) {\r\n    var vendorLocation = vendorLocationService.getByRefName(vendor.getRefName() + \"-location\");\r\n    if(vendorLocation === null) {\r\n        throw new com.eis.core.api.v1.exception.AccountConfigurationException(\"No Vendor Location has been created for vendor:\"+vendor.getDisplayName() + \", a vendor location must be created for all vendors.\"); \r\n    }\r\n    return vendorLocation;\r\n}\r\n\r\n\r\nfunction addShipmentRequestLine(line, order, shipmentRequest) {\r\n    // no need to iterate through Order lines as line is passed directly\r\n        var srline = new com.eis.ssit.api.v1.model.ShipmentRequestLine();\r\n\r\n        if (line.getReferenceData() !== null) {\r\n            for (var x = 0; x < line.getReferenceData().size(); x++) {\r\n                var reference = line.getReferenceData().get(x);\r\n                \r\n                if (!srline.getReferenceData().contains(reference)) {\r\n                    srline.getReferenceData().add(reference);\r\n                }\r\n\r\n                if (!shipmentRequest.getReferenceData().contains(reference)) {\r\n                    shipmentRequest.getReferenceData().add(reference);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (line.getFulfillmentServices() !== null) {\r\n            for (var x = 0; x < line.getFulfillmentServices().size(); x++) {\r\n                var fulfillmentService = line.getFulfillmentServices().get(x);\r\n                if (!srline.getFulfillmentServices().contains(fulfillmentService)) {\r\n                    srline.getFulfillmentServices().add(fulfillmentService);\r\n                }\r\n            }\r\n        }\r\n\r\n        srline.setRetailerItemSKU(line.getRetailerReferenceItemSKU());\r\n        srline.setItemDescription(line.getItemTitle());\r\n        srline.setItemQty(line.getItemQty());\r\n        srline.setUpc(line.getUpc());\r\n        \r\n        srline.setAllocatedLineHandlingCharges(line.getHandlingCharges());\r\n        srline.setAllocatedLineShippingCharges(line.getShippingCharges());\r\n\r\n        srline.setItemUnitPrice(line.getItemUnitPrice());\r\n        srline.setItemUnitDiscount(line.getItemUnitDiscount());\r\n        srline.setItemWeight(line.getItemWeight());\r\n        srline.setItemWeightType(line.getItemWeightType());\r\n        srline.setSupplierItemSKU(line.getSupplierItemReferenceNumber());\r\n        srline.setSystemCatalogRefId(line.getSystemCatalogId());\r\n        srline.setSystemItemId(line.getSystemCatalogProductIdentifier());\r\n        srline.setLineUID(line.getUid());\r\n        srline.setOmsLineNumber(line.getOmsLineNumber());\r\n        srline.setUpc(line.getUpc());\r\n        srline.setPoItemId(line.getLineItemNumber());\r\n        srline.setPickFromStoreSiteId(line.getPickFromStoreSiteId());\r\n    \r\n        shipmentRequest.getLineItems().add(srline);   \r\n}\r\n\r\n\r\nfunction createShipmentRequest(order, vendorNumber, lines , vendor, shipStationAccountInfo) {\r\n        var vendorContactInfo = getVendorContactInfo(vendor);\r\n        var now = new java.util.Date();\r\n        var shipmentRequest = new com.eis.ssit.api.v1.model.ShipmentRequest();\r\n        if (order.getHeader().getFulfillmentServices() !== null) {            \r\n            for(var x = 0; x < order.getHeader().getFulfillmentServices().size(); x++) {           \r\n                var fulfillmentService = order.getHeader().getFulfillmentServices().get(x);\r\n                if (!shipmentRequest.getHeader().getFulfillmentServices().contains(fulfillmentService)) {\r\n                    shipmentRequest.getHeader().getFulfillmentServices().add(fulfillmentService);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (order.getNotes() !== null) {\r\n            for(var x = 0; x < order.getNotes().size(); x++) {\r\n                var note = order.getNotes().get(x);\r\n                if (!shipmentRequest.getNotes()\r\n                        .contains(note)) {\r\n                    shipmentRequest.getNotes()\r\n                            .add(note);\r\n                }\r\n            }\r\n        }\r\n\r\n        shipmentRequest.getHeader().setSalesChannel(\r\n                order.getHeader().getSalesChannel());\r\n\r\n        shipmentRequest.getHeader().setOriginalOrderNumber(\r\n                order.getHeader().getOriginalOrderNumber());\r\n        if (order.getDynAttributes() !== null) {\r\n            shipmentRequest.getDynAttributes().putAll(order.getDynAttributes());\r\n        }\r\n\r\n        if (order.getReferenceData() !== null) {\r\n            for(var x = 0; x < order.getReferenceData().size(); x++) {\r\n            var reference = order.getReferenceData().get(x);\r\n                if (!shipmentRequest.getReferenceData().contains(reference)) {\r\n                    shipmentRequest.getReferenceData().add(reference);\r\n                }\r\n            }\r\n        }\r\n        \r\n        \r\n        if (order.getHeader().getTimeDateReferences() !== null) {\r\n            shipmentRequest.getHeader().getTimeDateReferences().addAll(order.getHeader().getTimeDateReferences());\r\n        }\r\n        \r\n        var shipToContactInfo =  order.getHeader().getShipToContacts().get(0);\r\n        // Ship To\r\n        shipmentRequest.getHeader().setShipToContactInfo(shipToContactInfo);\r\n        // Bill To\r\n        shipmentRequest.getHeader().setBillToContactInfo(\r\n                order.getHeader().getBillToContactInfo());    \r\n\r\n        shipmentRequest.getHeader().setFromContactInfo(vendorContactInfo);\r\n\r\n        var salesOrderHeader = order.getHeader();\r\n        shipmentRequest.getHeader().setSalesOrderDate(salesOrderHeader.getPurchaseDate());\r\n        \r\n        shipmentRequest.getHeader().setSalesOrderId(order.getId());\r\n        shipmentRequest.getHeader().setSalesOrderNumber(\r\n                order.getHeader().getOrderNumber());\r\n        //shipmentRequest.getHeader().setPackingSlipInfo(\r\n                //channel.getPackingSlipInfo());\r\n        shipmentRequest.getHeader().setChargeActualShippingCost(\r\n                order.getHeader().isChargeActualShippingCost());\r\n        shipmentRequest.getHeader().setStatus(com.eis.ssit.api.v1.model.ShipmentRequestStatus.PENDING);\r\n        shipmentRequest.getHeader().setPurchaseOrderNumber(\r\n                order.getHeader().getPurchaseOrderNumber());\r\n\r\n        // added for signatureRequired\r\n        shipmentRequest.getHeader().setSignatureRequired(\r\n                order.getHeader().isSignatureRequired());\r\n\r\n        var calendar = java.util.GregorianCalendar.getInstance();\r\n\r\n        if (order.getHeader().getPromiseDate() !== null) {\r\n            shipmentRequest.getHeader().setPromisedDeliveryDate(\r\n                    order.getHeader().getPromiseDate());\r\n        }\r\n        else {\r\n            calendar.setTime(now);\r\n            calendar.add(java.util.Calendar.DATE, 7);\r\n            shipmentRequest.getHeader().setPromisedDeliveryDate(\r\n                    calendar.getTime());\r\n        }\r\n        calendar.setTime(now);\r\n        calendar.add(java.util.Calendar.HOUR, 5);\r\n\r\n        // TODO: shouldn't this come from sales order?\r\n        shipmentRequest.getHeader().setDueDate(calendar.getTime());\r\n\r\n        shipmentRequest.getHeader().setCreateDate(now);\r\n\r\n        // TODO : add attempt no. to the refName\r\n        shipmentRequest.setRefName(order.getRefName() + \"/\"\r\n                + vendorContactInfo.getCompanyName()\r\n                + java.util.UUID.randomUUID());\r\n\r\n\t\tvar dataDomains = new java.util.ArrayList();\r\n        dataDomains.add(dataDomain);\r\n        var vendorDataDomain = dataDomain + \".\" + vendorNumber;\r\n        dataDomains.add(vendorDataDomain);\r\n        shipmentRequest.getDataDomains().addAll(dataDomains); \r\n        \r\n        var size = lines.size();\r\n        for(var x = 0; x < size; x++) {\r\n        \tvar line = lines.get(x);\r\n            addShipmentRequestLine( line, order, shipmentRequest);\r\n        }\r\n        \r\n        \r\n        var vendorLocation = getVendorLocation(vendor);\r\n        /** TC ADDING THIS AS THE SITE SHOULD BE SET ON THE SHIPMENT REQUEST **/\r\n    \tshipmentRequest.getHeader().setSiteRefName(vendorLocation.getRefName());\r\n        \r\n        \r\n        shipmentRequest.getHeader().setCarrier(\r\n                    order.getHeader().getShippingCarrier());\r\n        shipmentRequest.getHeader().setCarrierServiceType(\r\n                    order.getHeader().getCarrierServiceType());    \r\n    /*    var currentCarrier = null;\r\n        var currentService = null;\r\n        var firstLine =  order.getLineItems().get(0);\r\n        if (firstLine.getShippingCarrier() === null || \"\".equals(firstLine.getShippingCarrier())) {\r\n            // use header\r\n            currentCarrier = order.getHeader().getShippingCarrier();\r\n            currentService = order.getHeader().getCarrierServiceType();\r\n        }\r\n        else {\r\n            // use line\r\n            currentCarrier = firstLine.getShippingCarrier();\r\n            currentService = firstLine.getCarrierServiceType();\r\n        }\r\n        // use header\r\n        shipmentRequest.getHeader().setCarrier(\r\n                currentCarrier);\r\n        shipmentRequest.getHeader().setCarrierServiceType(\r\n                currentService);\r\n      */\r\n        shipmentRequest.setCustomer(order.getCustomer());\r\n        inventoryAllocationUtils.calculate(shipmentRequest, order);\r\n        \r\n        calendar.setTime(now);\r\n        /*\r\n        var defaultTimeToSet = 60 * 24; // 1 day / 24 Hrs\r\n        var timeToSetAsPerPolicy = fromSite.getTimeToAcknowledgeInMin();\r\n\r\n        if (timeToSetAsPerPolicy === 0) {\r\n            calendar.add(java.util.Calendar.MINUTE, defaultTimeToSet);\r\n        }\r\n        else if (timeToSetAsPerPolicy === -1) {\r\n            // means we do not want the shipmentRequest to be\r\n            // rejected automatically\r\n            // Soln : Set a ridiculously high time\r\n\r\n            calendar.add(java.util.Calendar.YEAR, 100);\r\n\r\n        }\r\n        else {\r\n            calendar.add(java.util.Calendar.MINUTE, timeToSetAsPerPolicy);\r\n        }\r\n\r\n        shipmentRequest.getHeader().setAcknowledgeShipmentByTime(calendar.getTime());\r\n        */\r\n        \r\n        shipmentRequest.getHeader().setFromOrganization(vendor.constructObjectReference());\r\n       /* shipmentRequest.getHeader().setToOrganization(organizationService.getByRefName(\"GNC-Organization-\").constructObjectReference());\r\n        */\r\n        shipmentRequest.getHeader().setToOrganization(order.getHeader().getFromOrganization());\r\n        \r\n        if(shipStationAccountInfo.isUseEnhancedLabel()) {    \r\n                var warehouseId = createWarehouseInShipStation(vendor);\r\n                shipmentRequest.getDynAttributes().put(\"warehouseId\", new java.lang.Integer(warehouseId));\r\n                shipmentRequest.getDynAttributes().put(\"shipFromShipStationOrder\",\"Y\");\r\n                var orderId = createOrderInShipStation(order, warehouseId);  \r\n                shipmentRequest.getDynAttributes().put(\"shipStationOrderId\", new java.lang.Integer(orderId));               \r\n       \t}\r\n        return shipmentRequest;\r\n    \r\n}\r\n\r\n\r\nfunction getVendorContactInfo(vendor) {\r\n    return com.eis.core.api.v1.model.Organization.getOrganizationContactInfo(vendor);\r\n}\r\n\r\nfunction getVendorForShipment(vendorNumber) {\r\n    var vendor = organizationService.getList(0, 1, \"dynAttributes.vendorNumber:\"+vendorNumber, null, null).get(0);\r\n    return vendor;\r\n}\r\n\r\nfunction mapLinesToVendor(order)\r\n{\r\n       var vendorToLinesMap = new java.util.HashMap();\r\n       var lineItems =  order.getLineItems();\r\n       var size = lineItems.size();\r\n       for(var i=0; i < size ; i++)\r\n       {\r\n            var orderLine = lineItems.get(i);\r\n            var skuRefName = orderLine.getSku().getSkuId();\r\n            var sku = skuService.getByRefName(skuRefName);\r\n            log.info(\"laks orderLine sku:\" + sku);\r\n            var referenceData = sku.getReferenceData();\r\n            log.info(\"laks orderLine referenceData:\" + referenceData);\r\n            var vendorId = null;\r\n            if(null != referenceData) {\r\n                var refSize = referenceData.size();\r\n                for (var j=0; j < refSize; j++) {\r\n                    var ref = referenceData.get(j);\r\n                    if (\"PrimaryVendorId\".equals(ref.getType()) || \"PrimaryVendorId\".equals(ref.getName())) {\r\n                        vendorId = ref.getValue();\r\n                        log.info(\"laks PrimaryVendorId:\" + vendorId);\r\n                        break;\r\n                    }\r\n                }\r\n                if(null != vendorId)\r\n                {\r\n                    var lines = vendorToLinesMap.get(vendorId);\r\n                    if(null == lines)\r\n                    {\r\n                        lines = new java.util.ArrayList();\r\n                    }\r\n                    lines.add(orderLine);\r\n                    vendorToLinesMap.put(vendorId,lines);\r\n                }\r\n            }\r\n       }\r\n       return vendorToLinesMap;\r\n}\r\n\r\nfunction createWarehouseInShipStation(vendor) {\r\n    \r\n    var vendorLocation = vendorLocationService.getByRefName(vendor.getRefName()+\"-location\");\r\n    \r\n    var warehouseId = null;\r\n    \r\n    if(vendorLocation !== null) {\r\n        warehouseId = vendorLocation.getDynAttributes().get(\"shipStationWarehouseId\");\r\n        if(warehouseId === null) {\r\n            warehouseId = shipStationHelper.createWarehouse(vendorLocation);\r\n            vendorLocation.getDynAttributes().put(\"shipStationWarehouseId\",\r\n                warehouseId);\r\n            vendorLocation.setVendorRef(vendor.constructObjectReference());\r\n            vendorLocationService.save(vendorLocation);    \r\n        } else {\r\n            vendorLocation.getDynAttributes().put(\"shipStationWarehouseId\",\r\n                new java.lang.Integer(warehouseId));\r\n            vendorLocation.setVendorRef(vendor.constructObjectReference());   \r\n            vendorLocationService.save(vendorLocation);\r\n            //warehouseId = shipStationHelper.updateWarehouse(vendorLocation);\r\n        }\r\n        \r\n    }\r\n    return warehouseId;\r\n}\r\n\r\n\r\nfunction createOrderInShipStation(order, warehouseId) {\r\n    var shipStationOrderId = shipStationHelper.createOrder(order, warehouseId);    \r\n    return shipStationOrderId;\r\n}\r\n    \r\nfunction isFormVendor(vendor) {\r\n    var formVendor = false; \r\n     if( 'Form Portal' === vendor.getOrganizationAccessType())\r\n     {\r\n         formVendor = true;\r\n     }\r\n    return formVendor;\r\n}\r\n\r\nfunction getVendorPrimaryContactEmail(vendor) {\r\n\r\n    if(vendor.getPrimaryContact() === null || isBlank(vendor.getPrimaryContact().getPrimaryEmail())) {\r\n\r\n        taskHelper.notifyAndCreateTask(\r\n\r\n                \"Vendor:\"+vendor.getCompanyName()+\" Primary Contact Not Found:\"+java.lang.System.nanoTime(),\r\n\r\n                \"No primary contact or primary contact email was found for vendor:\"+vendor.getCompanyName(),\r\n\r\n                \"No primary contact or primary contact email was found for vendor:\"+vendor.getCompanyName()+\".  Intial set up of this vendor could have failed. Please set up the vendor correctly with a primary contact.\",\r\n\r\n                \"Vendor Failure\", \"com.gnc\",\r\n\r\n                \"Vendor Failure\", \"vendor-alert-failure\", \"GNC Admin\");\r\n\r\n       \r\n\r\n        //throw new com.eis.core.api.v1.exception.AccountConfigurationException(\"Account Setup Invalid\");\r\n\r\n        return null;\r\n\r\n    } else {\r\n\r\n        return vendor.getPrimaryContact().getPrimaryEmail();\r\n\r\n    }\r\n\r\n   \r\n\r\n}\r\n\r\n \r\n\r\n\r\nfunction alertAndNotify(DoNumber,Orderno,shipmentRequestNumber,vendor)\r\n{\r\n\r\n   log.info(\"alert Notification\");\r\n\t var primaryContactEmail = null;\r\n\r\n    var vendorName = \"NA\";\r\n\r\n    if (vendor !== null) {\r\n\r\n        primaryContactEmail = getVendorPrimaryContactEmail(vendor);\r\n\r\n        vendorName = vendor.getDisplayName();\r\n\r\n    }\r\n    if (primaryContactEmail === null) {\r\n\r\n        primaryContactEmail = \"ssatyarthi@envistacorp.com\";\r\n\r\n    }\r\n    else{\r\n\r\n        primaryContactEmail = \"ssatyarthi@envistacorp.com\";\r\n\r\n    }\r\n\r\nif(dataDomain === 'com.gnc')\r\n{\r\n   var subject = \"GNC Vendor Portal – New orders for your review\";\r\n}\r\n\r\n   \r\n   \r\n     var velocityContext = new org.apache.velocity.VelocityContext();\r\n\r\n    velocityContext.put(\"DoNumber\", DoNumber);\r\n\tvelocityContext.put(\"Orderno\", Orderno);\r\n\r\n    velocityContext.put(\"vendorName\", vendorName);\r\n\r\n    velocityContext.put(\"description\", subject);\r\n\r\n\r\n    var body = scriptUtils.buildMessageFromVelocityTemplate(\"inbound/templates/newOrdersNeedingAttentionAlert.vm\", velocityContext);\r\n\r\n log.info(\"body is\"+body);\r\n\r\n    var mailbox = scriptUtils.getMailbox(\"VendorAlerts-NewOrdersNeedingAttention\");\r\n\r\n    scriptUtils.createMailboxEntry(mailbox, body,  \"Vendor-\" + vendorName + \"-OrdersNeedingAttention.html\", subject, primaryContactEmail,\"alerts@envistacorp.com\",null, null, true);\r\n\r\n}\r\n\r\n\r\nfunction isBlank(value) {\r\n    if (value === null || value === undefined || value === '') {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\n//var ordershipmentreqmap;\r\n\r\n\r\n\r\nvar dataDomain = com.eis.security.multitenancy.model.SecureSession.getDefaultDataDomain();\r\nvar allOrders= new java.util.LinkedHashMap();    \r\nfor(var x = 0; x < salesOrderIds.size(); x++) {\r\n    var orderId = salesOrderIds.get(x);\r\n    try {\r\n        var order = getSalesOrder(orderId);\r\n\r\n        var packingSlipGenerationMethod = com.eis.core.api.v1.model.Reference();\r\n        packingSlipGenerationMethod.setType(\"packingSlipGenerationMethod\");\r\n        packingSlipGenerationMethod.setName(\"packingSlipGenerationMethod\");\r\n        packingSlipGenerationMethod.setValue(\"omsReports\");\r\n        packingSlipGenerationMethod.setSystemInd(\"Y\");\r\n        order.getReferenceData().add(packingSlipGenerationMethod); \r\n        \r\n        var shippingProfileRefName = \"defaultshippingprofile\";\r\n        var defaultShippingProfile = shippingProfileService.getByRefName(shippingProfileRefName);\r\n        var shipStationAccountInfo = defaultShippingProfile.getShipStationAccountInfo();\r\n        log.info(\"laks shipStationAccountInfo:\" + shipStationAccountInfo);\r\n        \r\n        var vendorToLinesMap = mapLinesToVendor(order);\r\n        log.info(\"laks vendorToLinesMap:\" + vendorToLinesMap);\r\n        var vendorIds = vendorToLinesMap.keySet();\r\n        var itr =  vendorIds.iterator();\r\n        if(itr){\r\n   \r\n           while(itr.hasNext())\r\n           {\r\n               var mailbox = scriptUtils.getMailbox(\"ShipmentRequestsToVendor-To-Map\");\r\n               var vendorId = itr.next();\r\n               var lines = vendorToLinesMap.get(vendorId);\r\n               var vendor = getVendorForShipment(vendorId);\r\n               var shipmentRequest = createShipmentRequest(order,vendorId,lines,vendor,shipStationAccountInfo);\r\n               shipmentRequest.getReferenceData().add(packingSlipGenerationMethod); \r\n               shipmentRequest = shipmentRequestDAO.save(shipmentRequest);\r\n\t\t\t   \r\n\t\t\t  \r\n               \r\n               if(isFormVendor(vendor))\r\n  \t\t\t   {\r\n  \t\t\t   \t\tmailbox = scriptUtils.getMailbox(\"PurchaseOrder-Email\");\r\n\t\t\t\t\t alertAndNotify(shipmentRequest.getHeader().getSalesOrderNumber() ,\r\n         shipmentRequest.getHeader().getOriginalOrderNumber(),shipmentRequest.getHeader().getShipmentRequestNumber(), vendor);\r\n  \t\t\t   }\r\n               scriptUtils.createObjectXMLMailboxEntry(mailbox,shipmentRequest, \"ShipmentRequest-\"+shipmentRequest.getHeader().getShipmentRequestNumber()+\"_Order-\"+order.getHeader().getOrderNumber(), vendorId+\"@gnc.com\", \"orders@gnc.com\");\r\n            \r\n               order.getShipmentRequests().add(shipmentRequest);\r\n/*\r\n       \t\t   if(shipStationAccountInfo.isUseEnhancedLabel()) {    \r\n       \t\t    log.info(\"laks shipStationAccountInfo.isUseEnhancedLabel() true\");\r\n                var warehouseId = createWarehouseInShipStation(vendor);\r\n                order.getDynAttributes().put(\"warehouseId\", new java.lang.Integer(warehouseId));\r\n                order.getDynAttributes().put(\"shipFromShipStationOrder\",\"Y\");\r\n                var orderId = createOrderInShipStation(order, warehouseId);  \r\n                order.getDynAttributes().put(\"shipStationOrderId\", new java.lang.Integer(orderId));                \r\n       \t\t }*/\r\n           }\r\n       \t}\r\n       order.getHeader().setStatus(com.eis.ssit.api.v1.model.OrderStatus.RELEASED);\r\n       order = salesOrderService.save(order);\r\n    } catch(e) {\r\n            java.lang.System.out.println(\"Caught Exception:\"+e+\"Line Number:\"+e.lineNumber);\r\n            if (e instanceof com.eis.core.api.v1.exception.AccountConfigurationException) {\r\n                continue;\r\n                \r\n            } else if(e.javaException) {\r\n               taskHelper.notifyAndCreateTask(\r\n                    \"Sale Order Processing Error:\"+order.getHeader().getOrderNumber()+java.lang.System.nanoTime(),\r\n                    \"Error processing sales order:\"+order.getHeader().getOrderNumber(),\r\n                    \"Error processing sales order:\"+order.getHeader().getOrderNumber+\"Error:\"+e.javaException+\"Line Number:\"+e.lineNumber,\r\n                    \"Sales Order Processing Error\", \"com.gnc\",\r\n                    \"Sales Order Processing Error\", \"sales-order-processing-error\", \"Tony Costanzo\"); \r\n                continue;    \r\n             \r\n            } else {\r\n                java.lang.System.out.println(e);\r\n            }\r\n    }\r\n}\r\nallOrders;\r\n",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "releaseSalesOrderNew",
    "refKey" : "084c648fb7f0c89b77703391891043f7",
    "displayName" : "releaseSalesOrderNew",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "releaseSalesOrderNew" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1533675153372,
      "createUser" : "GNC VDP",
      "updateTs" : 1538509474466,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "e769e7aa-f33d-47d5-99c3-3b7d8f765737",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "salesOrderIds" : {
          "id" : null,
          "refName" : "salesOrderIds",
          "type" : "Object",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "salesOrderIds",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "channelDAO" : {
        "type" : "daoBean",
        "name" : "channelDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "channelDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryAllocationEngine" : {
        "type" : "javaBean",
        "name" : "inventoryAllocationEngine",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryAllocationHelper" : {
        "type" : "javaBean",
        "name" : "inventoryAllocationHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryAllocationLoggerDAO" : {
        "type" : "javaBean",
        "name" : "inventoryAllocationLoggerDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryAllocationLoggerDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryAllocationUtils" : {
        "type" : "javaBean",
        "name" : "inventoryAllocationUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryPoolEntryDAO" : {
        "type" : "daoBean",
        "name" : "inventoryPoolEntryDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolEntryDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationService" : {
        "type" : "serviceBean",
        "name" : "organizationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "organizationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "postalCodeProximityConfigDAO" : {
        "type" : "javaBean",
        "name" : "postalCodeProximityConfigDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "postalCodeProximityConfigDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "productDAO" : {
        "type" : "daoBean",
        "name" : "productDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "productDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "reservationDAO" : {
        "type" : "daoBean",
        "name" : "reservationDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "reservationDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "reservationEngine" : {
        "type" : "javaBean",
        "name" : "reservationEngine",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "reservationEntryDAO" : {
        "type" : "daoBean",
        "name" : "reservationEntryDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "reservationEntryDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderDAO" : {
        "type" : "daoBean",
        "name" : "salesOrderDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderIds" : {
        "type" : "scriptInputVariable",
        "name" : "salesOrderIds",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "salesOrderIds",
        "parameters" : { }
      },
      "salesOrderReleaseLogDAO" : {
        "type" : "javaBean",
        "name" : "salesOrderReleaseLogDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderReleaseLogDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderService" : {
        "type" : "serviceBean",
        "name" : "salesOrderService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderService",
        "parameterName" : null,
        "parameters" : { }
      },
      "scriptUtils" : {
        "type" : "javaBean",
        "name" : "scriptUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "shipStationHelper" : {
        "type" : "javaBean",
        "name" : "shipStationHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentRequestDAO" : {
        "type" : "daoBean",
        "name" : "shipmentRequestDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentRequestDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentRequestService" : {
        "type" : "serviceBean",
        "name" : "shipmentRequestService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentRequestService",
        "parameterName" : null,
        "parameters" : { }
      },
      "shippingProfileService" : {
        "type" : "serviceBean",
        "name" : "shippingProfileService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shippingProfileService",
        "parameterName" : null,
        "parameters" : { }
      },
      "siteClusterDAO" : {
        "type" : "daoBean",
        "name" : "siteClusterDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "siteClusterDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "siteClusterService" : {
        "type" : "serviceBean",
        "name" : "siteClusterService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "siteClusterService",
        "parameterName" : null,
        "parameters" : { }
      },
      "siteDAO" : {
        "type" : "daoBean",
        "name" : "siteDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "siteDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "siteGroupDAO" : {
        "type" : "daoBean",
        "name" : "siteGroupDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "siteGroupDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "siteGroupService" : {
        "type" : "serviceBean",
        "name" : "siteGroupService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "siteGroupService",
        "parameterName" : null,
        "parameters" : { }
      },
      "siteService" : {
        "type" : "serviceBean",
        "name" : "siteService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "siteService",
        "parameterName" : null,
        "parameters" : { }
      },
      "skuDAO" : {
        "type" : "daoBean",
        "name" : "skuDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "skuDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "skuService" : {
        "type" : "serviceBean",
        "name" : "skuService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "skuService",
        "parameterName" : null,
        "parameters" : { }
      },
      "taskHelper" : {
        "type" : "javaBean",
        "name" : "taskHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorLocationService" : {
        "type" : "serviceBean",
        "name" : "vendorLocationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorLocationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorService" : {
        "type" : "serviceBean",
        "name" : "vendorService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "releaseSalesOrder",
  "inputs" : { },
  "result" : null,
  "active" : false,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "gncPolicy",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "gncPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531337454496,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1591201352156,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1common" : "com.eis.b2bmb.api.v1.common",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbcamelcustomutil" : "com.eis.b2bmb.camel.custom.util",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscloudcanonicalmodel" : "com.eis.cloud.canonical.model",
      "comeiscloudcanonicalmodelimports" : "com.eis.cloud.canonical.model.imports",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrskwiapiv1model" : "com.eis.extsvrs.kwi.api.v1.model",
      "comeisextsvrskwiapiv1services" : "com.eis.extsvrs.kwi.api.v1.services",
      "comeisextsvrsquickbooksapiv1dao" : "com.eis.extsvrs.quickbooks.api.v1.dao",
      "comeisextsvrsshipstationapiv1exception" : "com.eis.extsvrs.shipstation.api.v1.exception",
      "comeisextsvrsshipstationapiv1model" : "com.eis.extsvrs.shipstation.api.v1.model",
      "comeisextsvrsshipstationapiv1services" : "com.eis.extsvrs.shipstation.api.v1.services",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisextsvrssnapfulfilapiv1dao" : "com.eis.extsvrs.snapfulfil.api.v1.dao",
      "comeisextsvrssnapfulfilapiv1model" : "com.eis.extsvrs.snapfulfil.api.v1.model",
      "comeisextsvrssnapfulfilapiv1services" : "com.eis.extsvrs.snapfulfil.api.v1.services",
      "comeisextsvrssnapfulfilapiv1util" : "com.eis.extsvrs.snapfulfil.api.v1.util",
      "comeisgitimpl" : "com.eis.git.impl",
      "comeisgitmodel" : "com.eis.git.model",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngine" : "com.eis.oms.inventory.allocationEngine",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysync" : "com.eis.oms.inventory.sync",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparserscustomer" : "com.eis.ssit.parsers.customer",
      "comeisssitparserspricing" : "com.eis.ssit.parsers.pricing",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersvendor" : "com.eis.ssit.parsers.vendor",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comfasterxmljacksondataformatxml" : "com.fasterxml.jackson.dataformat.xml",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunorgapachexmlinternalserialize" : "com.sun.org.apache.xml.internal.serialize",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilregex" : "java.util.regex",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscodecbinary" : "org.apache.commons.codec.binary",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecommonslangtime" : "org.apache.commons.lang.time",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "releaseSalesOrderNew",
    "refId" : "e769e7aa-f33d-47d5-99c3-3b7d8f765737",
    "refKey" : "084c648fb7f0c89b77703391891043f7",
    "displayName" : "releaseSalesOrderNew",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "gncPolicy",
    "refId" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "admin@gnc.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}