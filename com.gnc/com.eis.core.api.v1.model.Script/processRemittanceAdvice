{
  "refName" : "processRemittanceAdvice",
  "refKey" : "893a2b7ede76aec7c5edfeb7f7dc8e4e",
  "displayName" : "processRemittanceAdvice",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1536266443850,
    "createUser" : "GNC VDP",
    "updateTs" : 1554472598987,
    "updateUser" : "Automatic"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "0dbce497-89bc-457c-8413-6ceb06647263",
  "script" : "var log = org.slf4j.LoggerFactory.getLogger(\"processRemittanceAdvice:\");\r\n\r\nfunction getMerchant(refName) {\r\n    var merchant = organizationService.getByRefName(refName);\r\n    if(merchant === null) {                        \r\n        throw new com.eis.core.api.v1.exception.AccountConfigurationException(\"GNC Account Setup Invalid\");                    \r\n    } else {        \r\n        return merchant;\r\n    }\r\n}\r\n\r\nfunction getVendor(vendorNumber) {\r\n    var vendors = vendorService.getList(0, 1, \"referenceData.name:AXVendorNumber&&referenceData.value:\" +vendorNumber, null, null);\r\n    if(vendors === null || vendors.size() === 0) {\r\n        throw new com.eis.core.api.v1.exception.AccountConfigurationException(\"No vendor for vendorNumber:\"+vendorNumber+\" was found.\");                    \r\n    } else {\r\n        vendor = vendors.get(0);\r\n    }    \r\n    return vendor;\r\n}\r\n\r\nfunction updateInvoiceData(invoice, remittanceAdvice) {\r\n    invoice.getHeader().setStatus(com.eis.ssit.api.v1.model.InvoiceStatus.PAID);\r\n    invoice.getHeader().setSubtotalBeforeTax(remittanceAdvice.getAmount());\r\n    invoice.getHeader().setTotalAmountBeforeDiscount(remittanceAdvice.getAmount());\r\n    invoice.getHeader().setTotalAmountAfterDiscount(remittanceAdvice.getAmount());\r\n    invoice.getHeader().setSubtotalTaxable(remittanceAdvice.getAmount());\r\n    invoice.getHeader().setReceivedDate(remittanceAdvice.getPaymentDate());\r\n    if(remittanceAdvice.getPayments() === null || remittanceAdvice.getPayments().size() === 0) {\r\n        var payment = new com.eis.core.api.v1.model.Payment();\r\n        payment.setDataDomain(invoice.getDataDomain());\r\n        payment.setPaymentMode(com.eis.core.api.v1.model.PaymentMode.ACH);\r\n        payment.setId(java.util.UUID.randomUUID().toString());\r\n        payment.setTransactionDate(remittanceAdvice.getPaymentDate());\r\n        payment.setRefName(\"Payment For Invoice:\"+invoice.getHeader().getInvoiceNumber()+ \" from RemitAdvice:\"+remittanceAdvice.getRemittanceNumber());\r\n        payment.setAuthCode(payment.getId());\r\n        payment.setPnRef(remittanceAdvice.getRemittanceNumber());\r\n        payment.setTxnReferenceNumber(remittanceAdvice.getRemittanceNumber());\r\n        payment.setAmount(remittanceAdvice.getAmount());\r\n        invoice.getPayments().clear();\r\n        invoice.getPayments().add(payment);    \r\n        remittanceAdvice.getPayments().add(payment);\r\n    } else {\r\n        var payment = remittanceAdvice.getPayments().get(0);\r\n        payment.setId(java.util.UUID.randomUUID().toString());\r\n        payment.setDataDomain(invoice.getDataDomain());\r\n        payment.setTransactionDate(remittanceAdvice.getPaymentDate());\r\n        payment.setRefName(\"Payment For Invoice:\"+invoice.getHeader().getInvoiceNumber()+ \" from RemitAdvice:\"+remittanceAdvice.getRemittanceNumber());\r\n        payment.setAuthCode(payment.getId());\r\n        payment.setPnRef(remittanceAdvice.getRemittanceNumber());\r\n        payment.setAmount(remittanceAdvice.getAmount());\r\n        var checkRef = new com.eis.core.api.v1.model.Reference();\r\n        checkRef.setType(\"Check Number\");\r\n        checkRef.setValue(payment.getId());\r\n        checkRef.setSystemInd(\"N\");\r\n        remittanceAdvice.getReferenceData().add(checkRef);\r\n        invoice.getPayments().clear();\r\n        invoice.getPayments().add(payment);\r\n    }\r\n   //invoice.getHeader().setTotalAmountDue(amountDue - remittanceAdvice.getAmount());\r\n    invoice.getHeader().setTotalAmountDue(0);\r\n    invoice = invoiceService.save(invoice);\r\n}\r\n\r\n\r\nfunction updateInvoice(invoiceNumber, remittanceAdvice, vendor) {\r\n    var invoices = invoiceService.getList(0, 1, \"(header.invoiceNumber:\"+invoiceNumber+\"||header.invoiceNumber:0\"+invoiceNumber+\")&&header.fromOrganization.refName:\"+vendor.getRefName(), null, null);\r\n    \r\n    if(invoices === null || invoices.size() === 0) { \r\n        throw new com.eis.core.api.v1.exception.AccountConfigurationException(\"No invoice for invoiceNumber:\"+invoiceNumber+\" was found. Remittance Advice could not be processed between:\"+remittanceAdvice.getPayor()+ \" and \"+remittanceAdvice.getPayee());                    \r\n    } else {\r\n        var invoice = invoices.get(0);\r\n        if(invoice.getHeader().getStatus() !== com.eis.ssit.api.v1.model.InvoiceStatus.PAID) {\r\n            var amountDue = invoice.getHeader().getTotalAmountBeforeDiscount();\r\n            var remittanceAmount = remittanceAdvice.getAmount();\r\n            if(amountDue !== null) {\r\n                amountDue = new java.math.BigDecimal(amountDue);\r\n                amountDue = amountDue.setScale(2,java.math.BigDecimal.ROUND_HALF_EVEN)\r\n            }\r\n            \r\n            if(remittanceAmount !== null) {\r\n                remittanceAmount = new java.math.BigDecimal(remittanceAmount);\r\n                remittanceAmount = remittanceAmount.setScale(2,java.math.BigDecimal.ROUND_HALF_EVEN);\r\n            }\r\n            \r\n           var difference = Math.abs(amountDue - remittanceAmount);\r\n           if(Math.round(difference) > .01) {               \r\n               var err = \"Total amount due: \"+amountDue + \" is not equal to remittanceAdvice amount:  \"+remittanceAmount+ \" .Remittance Advice could not be processed between:\"+remittanceAdvice.getPayor()+ \" and \"+remittanceAdvice.getPayee();\r\n               throw new com.eis.core.api.v1.exception.ValidationException(err);\r\n            }else{\r\n                updateInvoiceData(invoice, remittanceAdvice);\r\n            }\r\n        } else {\r\n            updateInvoiceData(invoice, remittanceAdvice);\r\n        }\r\n    }    \r\n    return invoice;       \r\n}\r\n\r\nfunction getVendorDataDomains(vendor) {\r\n\tvar dataDomains = new java.util.ArrayList();\r\n\tdataDomains.add(dataDomain);\r\n\tif (vendor !== null) {\r\n\t\tvar vendorNumber = vendor.getRefName();\r\n\t\tvar vendorDataDomain = dataDomain + \".\" + vendorNumber;\r\n\t\tdataDomains.add(vendorDataDomain);\r\n\t}\r\n\treturn dataDomains;\r\n}\r\n\r\nfunction processRemittanceAdvice() {\r\n    var mapper = new com.eis.json.EnvisionJacksonJaxbXMLMapper();\r\n    var clazz = new java.lang.Class.forName(\"com.eis.core.api.v1.model.RemittanceAdviceCollection\");\r\n    var remittanceAdviceCollection = mapper.readValue(body, clazz);\r\n    var remittances = remittanceAdviceCollection.getItems();    \r\n    var updatedRemittances = new com.eis.core.api.v1.model.RemittanceAdviceCollection();\r\n    var merchant = getMerchant(\"GNC-Organization-\");\r\n    var vendorNumber = 'NA';\r\n    var remittanceNumber = 'NA';\r\n    for(var x = 0; x < remittances.size(); x++) {        \r\n        var remittanceAdvice = remittances.get(x);\r\n        if(log.isInfoEnabled())\r\n        \tlog.info(\"remittanceAdvice in processRemittanceAdvice : \" + remittanceAdvice);\r\n        var invoiceNumber = scriptUtils.getReferenceValueFromReferences(remittanceAdvice.getReferenceData(), \"Invoice\");       \r\n        try {\r\n            var vendor = getVendor(remittanceAdvice.getPayee());\r\n            if(log.isInfoEnabled())\r\n            \tlog.info(\"processRemittanceAdvice vendor: \" + vendor);\r\n            vendorNumber = remittanceAdvice.getPayee();\r\n            remittanceNumber = remittanceAdvice.getRemittanceNumber();\r\n            var refName = remittanceAdvice.getRemittanceNumber()+\"-\"+remittanceAdvice.getPayor()+\"to\"+remittanceAdvice.getPayee()+\"-\"+invoiceNumber;\r\n            var dbRemit = remittanceAdviceDAO.getByRefName(refName, \"com.gnc\");\r\n            if(dbRemit) {\r\n                remittanceAdvice.setId(dbRemit.getId());\r\n            }\r\n            \r\n            remittanceAdvice.setPayee(vendor.getCompanyName());\r\n            remittanceAdvice.setPayor(merchant.getCompanyName());\r\n            remittanceAdvice.setRefName(refName);\r\n            remittanceAdvice.setToOrganization(vendor.constructObjectReference());\r\n            remittanceAdvice.setFromOrganization(merchant.constructObjectReference());\r\n            \r\n            if(invoiceNumber !== null) {\r\n                updateInvoice(invoiceNumber, remittanceAdvice, vendor);\r\n            }\r\n            remittanceAdvice.getDataDomains().addAll(getVendorDataDomains(vendor));\r\n            \r\n            remittanceAdvice = remittanceAdviceDAO.save(remittanceAdvice);\r\n            \r\n            var vendorType = vendor.getDynAttributes().get(\"vendorType\");\r\n            remittanceAdvice.setPayee(vendorNumber);\r\n            if(vendorType === 'EDI' || vendorType === 'File Portal') {\r\n                updatedRemittances.getItems().add(remittanceAdvice);\r\n            }   \r\n            \r\n            \r\n        } catch (e) {\r\n        \tif (e.javaException) {\r\n           \t message = e.javaException.message;\r\n       \t\t }\r\n        \telse \r\n       \t\t{\r\n        \tmessage = e.message;\r\n        \t}             \r\n        \tvar subject = \"GNC Remittance Failure - Remittance: \" + remittanceAdvice.getRemittanceNumber() + \" - Invoice: \" + invoiceNumber + \" - Vendor: \" +  vendor.getDisplayName();        \r\n            taskHelper.notifyAndCreateTask(\r\n            \t\tsubject+\"-\"+java.lang.System.nanoTime(),\r\n                    subject, message ,\r\n                    \"Remittance Failure\", \"com.gnc\",\r\n                    \"Remittance Failure\", \"remittance-failure\", \"Admin GNC\");   \r\n            throw new java.lang.Exception(e);\r\n        }\r\n    }\r\n    \r\n    if(vendorType === 'EDI') {\r\n        var mailbox = scriptUtils.getMailbox(\"Remit-Internal-updated\");\r\n        mapper.getFactory().getXMLOutputFactory().setProperty(\"javax.xml.stream.isRepairingNamespaces\", true);\r\n        var xml = mapper.writeValueAsString(updatedRemittances);\r\n        var metaData = new java.util.LinkedHashMap();\r\n        metaData.put(\"remittanceNumber\",remittanceNumber);\r\n        metaData.put(\"vendorNumber\",vendorNumber);\r\n        var mailboxEntry = scriptUtils.createMailboxEntry(mailbox, xml, \"Remittance-\" + remittanceNumber + \"_Vendor-\"+vendorNumber+\".xml\", \"Remittance-\" + remittanceNumber + \"_Vendor-\"+vendorNumber, \"edi@gnc.com\", \"edi@gnc.com\", metaData, metaData, true); \r\n   }\r\n   \r\n      if(vendorType === 'File Portal') {\r\n        var mailbox = scriptUtils.getMailbox(\"Remit-Internal-updated-FileVendor\");\r\n        mapper.getFactory().getXMLOutputFactory().setProperty(\"javax.xml.stream.isRepairingNamespaces\", true);\r\n        var xml = mapper.writeValueAsString(updatedRemittances);\r\n        var metaData = new java.util.LinkedHashMap();\r\n        metaData.put(\"remittanceNumber\",remittanceNumber);\r\n        metaData.put(\"vendorNumber\",vendorNumber);\r\n        var mailboxEntry = scriptUtils.createMailboxEntry(mailbox, xml, \"Remittance-\" + remittanceNumber + \"_Vendor-\"+vendorNumber+\".xml\", \"Remittance-\" + remittanceNumber + \"_Vendor-\"+vendorNumber, \"fileportalvendor@gnc.com\", \"edi@gnc.com\", metaData, metaData, true); \r\n   }\r\n}\r\nvar dataDomain = com.eis.security.multitenancy.model.SecureSession.getDefaultDataDomain();\r\nprocessRemittanceAdvice();",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "processRemittanceAdvice",
    "refKey" : "893a2b7ede76aec7c5edfeb7f7dc8e4e",
    "displayName" : "processRemittanceAdvice",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "processRemittanceAdvice" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1536266372621,
      "createUser" : "GNC VDP",
      "updateTs" : null,
      "updateUser" : null
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "3cb6888b-f7c8-4240-bb7c-76f350ebc867",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        },
        "header_CamelFileName" : {
          "id" : null,
          "refName" : "header_CamelFileName",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_CamelFileName",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "correlationService" : {
        "type" : "serviceBean",
        "name" : "correlationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "correlationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "header_CamelFileName" : {
        "type" : "scriptInputVariable",
        "name" : "header_CamelFileName",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_CamelFileName",
        "parameters" : { }
      },
      "invoiceService" : {
        "type" : "serviceBean",
        "name" : "invoiceService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "invoiceService",
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationService" : {
        "type" : "serviceBean",
        "name" : "organizationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "organizationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "remittanceAdviceDAO" : {
        "type" : "daoBean",
        "name" : "remittanceAdviceDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "remittanceAdviceDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "remittanceAdviceService" : {
        "type" : "serviceBean",
        "name" : "remittanceAdviceService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "remittanceAdviceService",
        "parameterName" : null,
        "parameters" : { }
      },
      "scriptUtils" : {
        "type" : "javaBean",
        "name" : "scriptUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "taskHelper" : {
        "type" : "javaBean",
        "name" : "taskHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorService" : {
        "type" : "serviceBean",
        "name" : "vendorService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.gnc" ]
  },
  "functionType" : "routing",
  "inputs" : { },
  "result" : null,
  "active" : true,
  "blacklisted" : true,
  "blacklistReason" : "### >>>> !!!! There was a problem executing script:processRemittanceAdvice from route:com.gnc.Remit-processRemittanceAdvice problem was:Caught Emca Error in script:processRemittanceAdvice in data domain:com.gnc.  Typically this points to a problem in the script. Message:TypeError: Cannot call method \"getDisplayName\" of undefined (script{processRemittanceAdvice:com.gnc}#165), Details:TypeError: Cannot call method \"getDisplayName\" of undefined",
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "gncPolicy",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "gncPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1531337454496,
      "createUser" : "Paul Ramnarain",
      "updateTs" : 1591201352156,
      "updateUser" : "GNC VDP"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "allowedPackages" : {
      "adapter1" : "adapter1",
      "adapter2" : "adapter2",
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1common" : "com.eis.b2bmb.api.v1.common",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbcamelcustomutil" : "com.eis.b2bmb.camel.custom.util",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscloudcanonicalmodel" : "com.eis.cloud.canonical.model",
      "comeiscloudcanonicalmodelimports" : "com.eis.cloud.canonical.model.imports",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscorecommonJSRunner" : "com.eis.core.common.JSRunner",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrskwiapiv1model" : "com.eis.extsvrs.kwi.api.v1.model",
      "comeisextsvrskwiapiv1services" : "com.eis.extsvrs.kwi.api.v1.services",
      "comeisextsvrsquickbooksapiv1dao" : "com.eis.extsvrs.quickbooks.api.v1.dao",
      "comeisextsvrsshipstationapiv1exception" : "com.eis.extsvrs.shipstation.api.v1.exception",
      "comeisextsvrsshipstationapiv1model" : "com.eis.extsvrs.shipstation.api.v1.model",
      "comeisextsvrsshipstationapiv1services" : "com.eis.extsvrs.shipstation.api.v1.services",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisextsvrssnapfulfilapiv1dao" : "com.eis.extsvrs.snapfulfil.api.v1.dao",
      "comeisextsvrssnapfulfilapiv1model" : "com.eis.extsvrs.snapfulfil.api.v1.model",
      "comeisextsvrssnapfulfilapiv1services" : "com.eis.extsvrs.snapfulfil.api.v1.services",
      "comeisextsvrssnapfulfilapiv1util" : "com.eis.extsvrs.snapfulfil.api.v1.util",
      "comeisgitimpl" : "com.eis.git.impl",
      "comeisgitmodel" : "com.eis.git.model",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngine" : "com.eis.oms.inventory.allocationEngine",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysync" : "com.eis.oms.inventory.sync",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparserscustomer" : "com.eis.ssit.parsers.customer",
      "comeisssitparserspricing" : "com.eis.ssit.parsers.pricing",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersvendor" : "com.eis.ssit.parsers.vendor",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comfasterxmljacksondataformatxml" : "com.fasterxml.jackson.dataformat.xml",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaldom" : "com.sun.org.apache.xerces.internal.dom",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunorgapachexmlinternalserialize" : "com.sun.org.apache.xml.internal.serialize",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilregex" : "java.util.regex",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlnamespace" : "javax.xml.namespace",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransform" : "javax.xml.transform",
      "javaxxmltransformdom" : "javax.xml.transform.dom",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "javaxxmlws" : "javax.xml.ws",
      "javaxxmlwsBindingProvider" : "javax.xml.ws.BindingProvider",
      "javaxxmlwshandlerMessageContext" : "javax.xml.ws.handler.MessageContext",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecatalinaloader" : "org.apache.catalina.loader",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscodecbinary" : "org.apache.commons.codec.binary",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecommonslangtime" : "org.apache.commons.lang.time",
      "orgapachecxfhelpers" : "org.apache.cxf.helpers",
      "orgapachecxfhelpersDOMUtils" : "org.apache.cxf.helpers.DOMUtils",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfjaxws" : "org.apache.cxf.jaxws",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgapachexalanprocessor" : "org.apache.xalan.processor",
      "orgapachexalantransformer" : "org.apache.xalan.transformer",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "orgw3cdom" : "org.w3c.dom",
      "orgxmlsax" : "org.xml.sax",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.gnc" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "processRemittanceAdvice",
    "refId" : "3cb6888b-f7c8-4240-bb7c-76f350ebc867",
    "refKey" : "893a2b7ede76aec7c5edfeb7f7dc8e4e",
    "displayName" : "processRemittanceAdvice",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "gncPolicy",
    "refId" : "13cf9dc2-9904-495a-9e81-c7ea8394743c",
    "refKey" : "fb3e43ceeb8ac38e1dcf56f0747b1e55",
    "displayName" : "gncPolicy",
    "dataDomain" : "com.gnc",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "admin@gnc.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.gnc" ]
}