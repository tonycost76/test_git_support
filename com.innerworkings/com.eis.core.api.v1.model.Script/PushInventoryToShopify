{
  "refName" : "PushInventoryToShopify",
  "refKey" : "f22c43d8b12591bd758c586c14a44398",
  "displayName" : "PushInventoryToShopify",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1520027392111,
    "createUser" : "Shopify Pabst",
    "updateTs" : 1521891698623,
    "updateUser" : "Admin Innerworkings"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "db4869a3-3a1e-44c7-9f9f-f0fe9234fc19",
  "script" : "\r\n\r\nfunction buildRestClient(url, shopfiy_API_BasicAuthHeader)\r\n{\r\n    var webClient = null;\r\n    var contentTypes = java.lang.reflect.Array.newInstance(java.lang.String, 1);\r\n    contentTypes[0]=\"application/json\".toString();\r\n\r\n    webClient = javax.ws.rs.client.ClientBuilder.newClient();\r\n    //webClient.accept(contentTypes);\r\n    //webClient.type(\"application/json\");\r\n    var target = webClient.target(url);\r\n    var invocation = target.request().header(\"Authorization\", shopfiy_API_BasicAuthHeader);\r\n    return invocation;\r\n}\r\n\r\nfunction invokeShopifyInventorySetCall(webClient, json)\r\n{\r\n    var objClient = webClient.buildPost(javax.ws.rs.client.Entity.json(json));\r\n    var response = objClient.invoke();\r\n    return response;\r\n}\r\n\r\n\r\nfunction createNotification(name, description,header, source) {\r\n\r\n    var notification = new com.eis.core.api.v1.model.Notification();\r\n\r\n    notification.setId(java.lang.String.valueOf(java.util.UUID.randomUUID()));\r\n    notification.setRefName(name + \"-\" + java.lang.System.nanoTime());\r\n    notification.setDisplayName(name);\r\n    notification.setNotificationType(com.eis.core.api.v1.model.NotificationType.Information);\r\n    notification.setBody(description);\r\n    notification.setHeader(header);\r\n    notification.setNotificationDate(new java.util.Date());\r\n    notification.setSource(source);\r\n    notificationService.save(notification);\r\n}\r\n\r\nfunction getLastAPITimeCorrelation() {\r\n   \r\n   var correlation = correlationService.getByRefName(\"LastInventoryAPICallTime\"); \r\n  \r\n   java.lang.System.out.println(\"Correlation Id:\"+correlation.getId());\r\n   if(isBlank(correlation.getId())) {\r\n       log.info(\"LastOrderAPICallTime for with time:\"+apiCallTime);\r\n       correlation.setId(java.util.UUID.randomUUID().toString());\r\n       correlation.setDataDomain(\"com.innerworkings\");\r\n       correlation.setType(com.eis.core.api.v1.model.CorrelationType.OneToOne);\r\n       correlation.setRefName(\"LastInventoryAPICallTime\");\r\n       correlation.setKey(\"APICallTime\");\r\n       correlation.setValue(\"NA\");\r\n       correlation = correlationService.save(correlation);\r\n       return correlation;\r\n   } else {\r\n       return correlation;\r\n   }\r\n}\r\n\r\nfunction isBlank(value) {\r\n    if (value === null || value === undefined || value === '') {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nvar cal1 = java.util.Calendar.getInstance();\r\n//cal1.add(java.util.Calendar.HOUR, -900);\r\nvar sdfdatetime = new java.text.SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm'Z'\");\r\nsdfdatetime.setTimeZone(java.util.TimeZone.getTimeZone(\"GMT\"));\r\nvar nowFromMDYhms = sdfdatetime.format(cal1.getTime());\r\n\r\nvar correlation = getLastAPITimeCorrelation();\r\nvar apiCallTime = correlation.getValue();\r\nvar currentTimeStamp = java.util.Calendar.getInstance();\r\ncal1.add(java.util.Calendar.SECOND, 1);\r\nvar nextApiCallTime = sdfdatetime.format(cal1.getTime());\r\n\r\n\r\nfunction setInventoryLevel(inventory_item_id, inventory_item_location_id, newInventoryLevel,shopifySite) {\r\n    var url = 'https://'+ shopifySite.get(\"shopifyUrl\") + '/admin/inventory_levels/set.json';\r\n    \r\n    var webClient = buildRestClient(url, shopifySite.get(\"shopfiyBasicAuthHeader\"));\r\n    var jsonData = '{\"location_id\": #location_id#,\"inventory_item_id\": #inventory_item_id#,\"available\": #available#}';\r\n    var json =jsonData.replace('#location_id#', inventory_item_location_id).replace('#inventory_item_id#', inventory_item_id).replace('#available#', newInventoryLevel);\r\n    \r\n    \r\n    var notificationHeader = \"Attempt to Update Pabst Shopify Inventory\";\r\n    var notificationMessage = \"Attempting Update Pabst Shopify Inventory with url:\"+ url+\" and data:\"+json;\r\n    createNotification(notificationHeader, notificationMessage, notificationHeader, \"getPabstShopfiyOrders\");\r\n    \r\n    var response = invokeShopifyInventorySetCall(webClient, json);\r\n   \r\n    if (response.getStatus() === 201 || response.getStatus() === 202 || response.getStatus() === 200) {\t\r\n        var clazz = new java.lang.Class.forName(\"java.lang.String\");\r\n        var entity = response.readEntity(clazz);\r\n        notificationMessage = \"Attempt to Get Pabst Shopify Inventory was successsful. Response code was:\"+response.getStatus() +\" response data was:\"+entity;\r\n        createNotification(notificationHeader + \" was successful.\", notificationMessage, notificationHeader + \" was successful.\", \"PushInventoryToShopify\");\r\n      \r\n    } else {\r\n        \r\n        var clazz = new java.lang.Class.forName(\"java.lang.String\");\r\n        var entity = response.readEntity(clazz);\r\n        taskHelper.notifyAndCreateTask(\r\n            \"Attempt to Update Pabst Shopify Inventory Failed-\"+java.lang.System.nanoTime(),\r\n            \"Attempt to Update Pabst Shopify Inventory Failed\",\r\n            \"Attempt to Update Pabst Shopify Inventory Failed. Url:\"+url+\" data:\"+json+\" response status:\"+response.getStatus()+ \" and respone data:\"+entity,\r\n            \"Attempt to Update Pabst Shopify Inventory Failed\", \"com.innerworkings\",\r\n            \"Attempt to Update Pabst Shopify Inventory Failed\", \"shopfify-inventory-update-failure\", \"Admin Innerworkings\"); \r\n        \r\n    }\r\n    \r\n    return entity;\r\n}\r\n\r\n\r\n\r\nfunction getInventoryForSite(shopifySite) {\r\n    var inventoryPoolEntries = inventoryPoolEntryService.getList(0,5000, \"parentInventoryPoolId:\"+inventoryPoolId+\"&&referenceData.value:\"+shopifySite.get(\"shopifySiteId\"),null,null,dataDomains);\r\n    java.lang.System.out.println(\"InventoryPoolId:\"+inventoryPoolId+\", num:\"+inventoryPoolEntries.size());\r\n    var iterator = inventoryPoolEntries.iterator();\r\n    while(iterator.hasNext()) {\r\n        var inventoryPoolEntry = iterator.next();\r\n        var availableQty = inventoryPoolEntry.getAvailableQty();\r\n        java.lang.System.out.println(\"SkuId:\"+inventoryPoolEntry.getSkuId()+\", availableQty:\"+availableQty);\r\n        var inventoryItemId =  scriptUtils.getReferenceValueFromReferences(inventoryPoolEntry.getReferenceData(),\"shopifyInventoryItemId\");\r\n        if(!isBlank(inventoryItemId)) {\r\n            setInventoryLevel(inventoryItemId, locationId, availableQty,shopifySite);\r\n        }\r\n        \r\n    }\r\n    \r\n    correlation.setValue(nextApiCallTime);\r\n    correlation = correlationService.save(correlation);\r\n    locationId;\r\n}\r\n\r\nvar locationId = \"30923407\";\r\nvar dataDomains = new java.util.ArrayList();\r\nvar inventoryPoolId = inventoryPoolService.getByRefName(\"iwpabst\").getId();\r\ndataDomains.add(\"com.innerworkings\");\r\nvar shopifySitesCorrelation = correlationService.getByRefName(\"ShopifyIntegrationSites\"); \r\n\r\nif(!isBlank(shopifySitesCorrelation.getId())) {\r\n    var shopifySites = shopifySitesCorrelation.getValuesForKey(\"Pabst-ShopifyIntegrationSites\");\r\n    for(var x = 0; x < shopifySites.size(); x++) {\r\n        var shopifySite = shopifySites.get(x);\r\n        getInventoryForSite(shopifySite);\r\n    \r\n    }\r\n\r\n} else {\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/***\r\n\r\n// KL: Let do the work.\r\nvar inventory_item_id = null;\r\nvar inventory_item_location_id = null;\r\nvar returnObject = null;\r\n\r\nreturnObject = getInventoryIDBySKU(shopifyproductid);\r\nif (returnObject.product != null) {\r\n    // We have inventory item id.\r\n    inventory_item_id = returnObject.product.variants[0].inventory_item_id;\r\n}\r\n\r\nif (inventory_item_id != null) {\r\n    // Update inventory\r\n    returnObject = null;\r\n    returnObject = getInventoryLocationByID(inventory_item_id);\r\n\r\n    if (returnObject != null) {\r\n        inventory_item_location_id = returnObject.inventory_levels[0].location_id;\r\n    }\r\n}\r\n\r\n\r\nif (inventory_item_location_id != null) {\r\n    // Start the update\r\n    returnObject = null;\r\n    returnObject = setInventoryLevel(inventory_item_id, inventory_item_location_id, qty);\r\n}\r\n\r\nfunction getInventoryIDBySKU(productsku)\r\n{\r\n    webClient = buildRestClient(url_endpoint + 'admin/products/' + productsku  + '.json');\r\n    var objClient = webClient.get();\r\n    java.lang.System.out.println(\"Status:\" + objClient.getStatus());\r\n    var clazz = new java.lang.Class.forName(\"java.lang.String\");\r\n    var entity = objClient.readEntity(clazz);\r\n    java.lang.System.out.println(\"Entity:\"+entity);\r\n    return eval('(' + entity + ')');\r\n}\r\n\r\nfunction getInventoryLocationByID(inventoryitemid)\r\n{\r\n    webClient = buildRestClient(url_endpoint + 'admin/inventory_levels.json?inventory_item_ids=' + inventoryitemid);\r\n    var objClient = webClient.get();\r\n    java.lang.System.out.println(\"Status:\" + objClient.getStatus());\r\n    var clazz = new java.lang.Class.forName(\"java.lang.String\");\r\n    var entity = objClient.readEntity(clazz);\r\n    java.lang.System.out.println(\"Entity:\"+entity);\r\n    return eval('(' + entity + ')');\r\n}\r\n\r\n\r\n\r\n**/",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "shopifyInventoryRESTCall",
    "refKey" : "ceee4d2780221607ee5251e2d13b43a2",
    "displayName" : "shopifyInventoryRESTCall",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "shopifyInventoryRESTCall" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1520027247957,
      "createUser" : "Shopify Pabst",
      "updateTs" : 1521202237804,
      "updateUser" : "Admin Innerworkings"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "0c51a951-e1a8-4427-956e-57d7da412d85",
    "inputs" : {
      "name" : null,
      "attributes" : { }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "correlationService" : {
        "type" : "serviceBean",
        "name" : "correlationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "correlationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryPoolEntryService" : {
        "type" : "serviceBean",
        "name" : "inventoryPoolEntryService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolEntryService",
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryPoolService" : {
        "type" : "serviceBean",
        "name" : "inventoryPoolService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolService",
        "parameterName" : null,
        "parameters" : { }
      },
      "notificationService" : {
        "type" : "serviceBean",
        "name" : "notificationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "notificationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "scriptUtils" : {
        "type" : "javaBean",
        "name" : "scriptUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "taskHelper" : {
        "type" : "javaBean",
        "name" : "taskHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.innerworkings" ]
  },
  "functionType" : "routing",
  "inputs" : { },
  "result" : null,
  "active" : true,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "innerworkingsPolicy",
    "refKey" : "6eca2f751c7092f4f789863252fbd7e1",
    "displayName" : "innerworkingsPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "innerworkingsPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1507818693457,
      "createUser" : "Admin Innerworkings",
      "updateTs" : 1559935221167,
      "updateUser" : "Tony Costanzo"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "3ca01532-b431-4906-a351-25394a7b5546",
    "allowedPackages" : {
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysyncfleetpride" : "com.eis.oms.inventory.sync.fleetpride",
      "comeisomsinventorysyncv2" : "com.eis.oms.inventory.sync.v2",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1integrationmarketplace" : "com.eis.ssit.api.v1.integration.marketplace",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparsers" : "com.eis.ssit.parsers",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersproductskufleetpride" : "com.eis.ssit.parsers.productsku.fleetpride",
      "comeisssitparserssite" : "com.eis.ssit.parsers.site",
      "comeisssitparsersskucrossreference" : "com.eis.ssit.parsers.skucrossreference",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.innerworkings" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "shopifyInventoryRESTCall",
    "refId" : "0c51a951-e1a8-4427-956e-57d7da412d85",
    "refKey" : "ceee4d2780221607ee5251e2d13b43a2",
    "displayName" : "shopifyInventoryRESTCall",
    "dataDomain" : "com.innerworkings",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "innerworkingsPolicy",
    "refId" : "3ca01532-b431-4906-a351-25394a7b5546",
    "refKey" : "6eca2f751c7092f4f789863252fbd7e1",
    "displayName" : "innerworkingsPolicy",
    "dataDomain" : "com.innerworkings",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "shopify-pabst@innerworkings.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.innerworkings" ]
}