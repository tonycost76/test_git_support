{
  "refName" : "INWK-ShipmentConfirm-Import",
  "refKey" : "271555ac80086a1952e961ceda520ff8",
  "displayName" : "INWK-ShipmentConfirm-Import",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1510346489636,
    "createUser" : "Admin Innerworkings",
    "updateTs" : 1521320147376,
    "updateUser" : "Admin Innerworkings"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "06e2d4e6-3ade-4d68-b5b5-2d186defba6c",
  "script" : "var mapper = new com.eis.json.EnvisionJacksonJaxbXMLMapper();\r\nmapper.enable(com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT);\r\nmapper.setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL);\r\n\r\n\r\n\r\nfunction generateShipConfirmEmail(order, shipment, email, client) {\r\n\r\n    var velocityContext = new org.apache.velocity.VelocityContext();\r\n    //velocityContext.put(\"fileName\", fileName);\r\n    velocityContext.put(\"shipment\", shipment);\r\n    velocityContext.put(\"order\", order);\r\n    var body = scriptUtils.buildMessageFromVelocityTemplate(\"integration/emailTemplates/\" + client + \"/shipment_confirmation.vm\", velocityContext);\r\n    var subject = \"Order Shipment Notification & Tracking Link - \" + order.getHeader().getOrderNumber();\r\n    var mailbox = scriptUtils.getMailbox(\"ShipConfirm-Emails-\" + client);\r\n    scriptUtils.createMailboxEntry(mailbox, body, \"ShipmentConfirm-\" + shipment.getShipmentNumber() + \".html\", subject, email, \"alerts@saddlecreek.com\", null, null, true);\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction isBlank(value) {\r\n    if (value === null || value === undefined || value === '') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nfunction buildErrorList(message) {\r\n    var errorList = new java.util.ArrayList();\r\n    errorList.add(message);\r\n    return errorList;\r\n\r\n}\r\n\r\nfunction getCatalog() {\r\n    return catalogService.getByRefName('innerworkingscatalog');\r\n}\r\n\r\nfunction createTaskAndNotification(errorName, description, taskQueue, vendor) {\r\n\r\n    var dataDomains = new java.util.ArrayList();\r\n    dataDomains.add(\"com.innerworkings\");\r\n    dataDomains.add(\"com.saddlecreek\");\r\n\r\n    var task = new com.eis.core.api.v1.model.Task();\r\n    task.setId(java.lang.String.valueOf(java.util.UUID.randomUUID()));\r\n    task.setDisplayName(errorName);\r\n    task.setStatus(\"Assigned\");\r\n    task.setRefName(errorName + \"-\" + java.lang.System.nanoTime());\r\n    description = description + \"\\n\\n\\n\";\r\n    for (var x = 0; x < tags.size(); x++) {\r\n        description = description + tags.get(x) + \"\\n\";\r\n    }\r\n    task.setDescription(description);\r\n    task.getDataDomains().addAll(dataDomains);\r\n\r\n    task.setAssignmentDate(new Date());\r\n    var dueDate = java.util.Calendar.getInstance();\r\n    dueDate.add(java.util.Calendar.DATE, 3);\r\n    task.setDueDate(dueDate.getTime());\r\n    task.setDateCreated(new Date());\r\n    task.setLabel(errorName);\r\n    task.setOwnerName(\"INNERWORKINGS CSR\");\r\n    task.setTaskQueueRefName(taskQueue);\r\n    task.getTags().addAll(tags);\r\n    taskDAO.save(task);\r\n}\r\n\r\n\r\nfunction findShipmentRequestForShipment(shipment) {\r\n    var shipmentRequest = null;\r\n    var listQuery = \"shipmentRequestHeader.shipmentRequestNumber:\" + shipment.getShipmentNumber() + \"&&shipmentRequestHeader.status:!CANCELLED&&shipmentRequestHeader.status:!REJECTED\";\r\n    var shipmentRequests = shipmentRequestService.getList(0, 1, listQuery, null, null);\r\n\r\n    if (shipmentRequests === null || shipmentRequests.size() === 0) {\r\n\r\n        java.lang.System.out.println(\"No shipmentRequests in the right state found for criteria:shipmentRequestHeader.shipmentRequestNumber:\" + shipment.getShipmentNumber());\r\n\r\n        var message = \"shipment-request-not-found|Saddle Creek could not process Shipment, \" + shipment.getShipmentNumber() + \". A Shipment Request in the right state was not found for Shipment Request Number:\" + shipment.getShipmentNumber() + \".\";\r\n        handleError(buildErrorList(message), shipment, true);\r\n\r\n    } else {\r\n        shipmentRequest = shipmentRequests.get(0);\r\n        tags.add(\"shipmentRequestNumber-\" + shipmentRequest.getHeader().getShipmentRequestNumber());\r\n    }\r\n    return shipmentRequest;\r\n}\r\n\r\nfunction hasShipmentBeenReceived(shipment) {\r\n\r\n    var alreadyReceived = false;\r\n    var shipments = shipmentService.getList(0, 1, \"shipmentNumber:\" + shipment.getShipmentNumber(), null, null);\r\n\r\n    if (shipments.size() > 0) {\r\n        alreadyReceived = true;\r\n        var message = \"shipment-already-received|Saddle Creek could not process Shipment, \" + shipment.getShipmentNumber() + \". A Shipment with Id : \" + shipment.getShipmentNumber() + \" this has already been received.\";\r\n        handleError(buildErrorList(message), shipment, true);\r\n    }\r\n\r\n    return alreadyReceived;\r\n}\r\n\r\nfunction alertAndNotifyOfError(errorList, shipmentNumber, orderNumber, taskQueue) {\r\n    var primaryContactEmail = null;\r\n\r\n    if (primaryContactEmail === null) {\r\n        primaryContactEmail = \"gisley@enspirecommerce.com\";\r\n    }\r\n\r\n    var message = errorList.get(0);\r\n    var taskQueueAndMessage = message.split('|');\r\n\r\n    if (isBlank(taskQueue)) {\r\n        if (taskQueueAndMessage.length > 1) {\r\n            taskQueue = taskQueueAndMessage[0];\r\n        } else {\r\n            taskQueue = 'shipment-confirmation-processing-error';\r\n        }\r\n    }\r\n    var errorMessage = '';\r\n    if (taskQueueAndMessage.length > 1) {\r\n        errorMessage = taskQueueAndMessage[1];\r\n    } else {\r\n        errorMessage = taskQueueAndMessage[0];\r\n    }\r\n\r\n    var newErrorList = new java.util.ArrayList();\r\n    newErrorList.add(errorMessage);\r\n\r\n    var subject = \"Innerworkings Dropship - Shipment Error - Shipment Id: \" + shipmentNumber + \" - Order: \" + orderNumber;\r\n    createTaskAndNotification(subject, errorMessage, taskQueue);\r\n    if (taskQueue === 'shipment-lineitem-mismatch' || taskQueue === 'shipment-order-already-shipped' || taskQueue === 'shipment-missing-data' || taskQueue === 'shipment-missing-data' || taskQueue === 'shipment-already-received' || taskQueue === 'shipment-vendor-not-found' || taskQueue === 'shipment-quantity-mismatch' || taskQueue === 'exceptions') {\r\n\r\n\r\n        var velocityContext = new org.apache.velocity.VelocityContext();\r\n        //velocityContext.put(\"fileName\", fileName);\r\n        velocityContext.put(\"errorList\", newErrorList);\r\n        velocityContext.put(\"shipmentNumber\", shipmentNumber);\r\n        velocityContext.put(\"description\", subject);\r\n        var body = scriptUtils.buildMessageFromVelocityTemplate(\"integration/emailTemplates/shipmentConfirmationValidationErrors.vm\", velocityContext);\r\n\r\n        var mailbox = scriptUtils.getMailbox(\"ShipConfirm-Invalid-Email\");\r\n        scriptUtils.createMailboxEntry(mailbox, body, \"InvalidShipment-\" + shipmentNumber + \".html\", subject, primaryContactEmail, \"alerts@saddlecreek.com\", null, null, true);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nfunction correlatePackageLinesToShipmentRequestLines(shipment, shipmentRequest, omsLineToLineItemMap, lineUidLotInfos,lineUidToShipmentLineMap) {\r\n    var catalog = getCatalog();\r\n    var shipmentNumber = shipment.getShipmentNumber();\r\n    var validPackage = true;\r\n    for (var x = 0; x < shipmentRequest.getLineItems().size(); x++) {\r\n        var lineItem = shipmentRequest.getLineItems().get(x);\r\n        var omsLineNumber = lineItem.getOmsLineNumber();\r\n\r\n        if (lineItem.getStatus() !== com.eis.ssit.api.v1.model.ShipmentRequestLineStatus.REJECTED) {\r\n            omsLineToLineItemMap.put(omsLineNumber, lineItem);\r\n        }\r\n    }\r\n\r\n    var packageIterator = shipment.getPackages().iterator();\r\n    while (packageIterator.hasNext()) {\r\n        var p = packageIterator.next();\r\n        var lineIterator = p.getLineItems().iterator();\r\n        while (lineIterator.hasNext()) {\r\n            var line = lineIterator.next();\r\n            var srLine = omsLineToLineItemMap.get(line.getOmsLineNumber());\r\n            java.lang.System.out.println(\"OmsLineNumber:\" + line.getOmsLineNumber());\r\n            java.lang.System.out.println(\"Retailer SKU From Shipment:\" + line.getRetailerItemSKU());\r\n            java.lang.System.out.println(\"SrLine:\" + srLine);\r\n\r\n            if (srLine !== null) {\r\n                //line.setLineUID(srLine.getLineUID());\r\n                if ((srLine.getRetailerItemSKU() !== line.getRetailerItemSKU()) && (srLine.getSystemItemId() !== line.getSystemItemId())) {\r\n                    java.lang.System.out.println(\"Retailer Sku ShipmentRequest:\" + srLine.getRetailerItemSKU());\r\n\r\n\r\n                    var message = \"shipment-lineitem-mismatch|Saddle Creek could not process Shipment Number \" + shipmentNumber + \". In \" +\r\n                        \" received Shipment, the line item's ItemNumber does \" +\r\n                        \" not match the value on the Order, \" + shipment.getOrderNumber() + \". Expected: SKU: \" + srLine.getSystemItemId() + \" Found:  \" + line.getRetailerItemSKU();\r\n\r\n                    alertAndNotifyOfError(buildErrorList(message), shipmentNumber, shipment.getOrderNumber());\r\n\r\n                    validPackage = false;\r\n                } else {\r\n                    line.setLineUID(srLine.getLineUID());\r\n                    lineUidToShipmentLineMap.put(srLine.getLineUID(),line);\r\n                    java.lang.System.out.println(\"+++++Line UID:\"+line.getLineUID());\r\n                    java.lang.System.out.println(\"+++++SR Line UID:\"+srLine.getLineUID());\r\n                    line.setPoItemId(srLine.getPoItemId());\r\n                    if (line.getLotInfos() !== null) {\r\n                        lineUidLotInfos.put(line.getLineUID(), new java.util.ArrayList(line.getLotInfos()));\r\n                    }\r\n                    // TC - remove lot infos so finalize works for products that don't use \r\n                    // shelf life\r\n                    var product = productService.findProductInCatalog(catalog.getId(),\r\n                        srLine.getSystemItemId());\r\n                    if (product !== null) {\r\n                        if (!product.isShelfLifeRequired()) {\r\n                            if (line.getLotInfos() !== null) {\r\n                                line.getLotInfos().clear();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n\r\n                var message = \"shipment-lineitem-mismatch|Saddle Creek could not process Shipment Number\" + shipmentNumber + \",\" +\r\n                    \". On the Shipment, the line item's ItemNumber does \" +\r\n                    \" not match the value on the Order, \" + shipment.getOrderNumber() + \". Cause: Sipment contains omsLineNumber: \" + line.getOmsLineNumber() + \" but shipment Requests: \" + shipmentNumber + \" doesn't have any lineItem with omsLineNumber: \" + line.getOmsLineNumber();\r\n                handleError(buildErrorList(message), shipment, true);\r\n                validPackage = false;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return validPackage;\r\n}\r\n\r\nfunction finalizeShipment(shipment, shipmentRequest) {\r\n\r\n    var omsLineToLineItemMap = new java.util.HashMap();\r\n    var lineUidToShipmentLineMap = new java.util.HashMap();\r\n    var lineUidLotInfos = new java.util.HashMap();\r\n\r\n    try {\r\n\r\n        var validPackage = correlatePackageLinesToShipmentRequestLines(shipment, shipmentRequest, omsLineToLineItemMap, lineUidLotInfos,lineUidToShipmentLineMap);\r\n\r\n        if (validPackage) {\r\n\r\n            shipment.setShipmentRequestId(shipmentRequest.getId());\r\n\r\n            if (shipment.getDynAttributes() === null) {\r\n                shipment.setDynAttributes(new java.util.LinkedHashMap());\r\n            }\r\n            var orderNumber =  shipment.getOrderNumber();\r\n            var originalShipment = shipment;\r\n          \r\n            shipment = shipmentService.finalizeShipment(shipment);\r\n            if(!shipment) {\r\n                shipment = originalShipment;\r\n            }\r\n            var orders = salesOrderService.getList(0, 1, \"header.orderNumber:\" + orderNumber, null, null);\r\n            var order = orders.get(0);\r\n            \r\n            var shipmentRequests = shipmentRequestService.getList(0, 500, \"header.salesOrderNumber:\" + orderNumber, null, null);\r\n\r\n            if (shipment) {\r\n                \r\n\r\n                var packageIterator = shipment.getPackages().iterator();\r\n                while (packageIterator.hasNext()) {\r\n                    var p = packageIterator.next();\r\n                    var lineIterator = p.getLineItems().iterator();\r\n                    while (lineIterator.hasNext()) {\r\n                        var line = lineIterator.next();\r\n                        line.setLotInfos(lineUidLotInfos.get(line.getLineUID()));\r\n                    }\r\n                }\r\n\r\n                var shipmentReferences = shipment.getReferenceData();\r\n                var orderType = scriptUtils.getReferenceValueFromReferences(shipmentReferences, \"ORDER_TYPE\");\r\n                var softeonId = scriptUtils.getReferenceValueFromReferences(shipmentReferences, \"SofteonId\");\r\n\r\n                var shopifyOrder = scriptUtils.getReferenceValueFromReferences(shipmentReferences, \"Shopify\");\r\n\r\n                if (orderType !== 'DIST') {\r\n                    if (softeonId !== 'IWSTO') {\r\n                        var mailbox = scriptUtils.getMailbox(\"INWK-ShipmentConfirm-FromOMS\");\r\n                        writeToMailbox(shipment, mailbox);\r\n                    }\r\n                }\r\n\r\n                if (shopifyOrder === true || shopifyOrder === 'true') {\r\n                    if (shipment.getSalesChannel() === 'Pabst') {\r\n                        var mailbox = scriptUtils.getMailbox(\"PABST-Shipments-Out-Internal\");\r\n                        writeToMailbox(shipment, mailbox);\r\n                    }\r\n                }\r\n\r\n                if (orderType === 'DIST' || softeonId === 'IWSTO') {\r\n\r\n\r\n                    var shipToEmail = order.getHeader().getShipToContacts().get(0).getPrimaryEmail();\r\n                    var billToEmail = order.getHeader().getBillToContactInfo().getPrimaryEmail();\r\n\r\n                    if (softeonId === 'IWTFE') {\r\n                        var email = \"Orders.WGS@inwk.com\";\r\n                        if (isBlank(shipToEmail) && isBlank(billToEmail)) {\r\n                            generateShipConfirmEmail(order, shipment, email, \"tfe\");\r\n                        } else {\r\n                            if (shipToEmail === billToEmail) {\r\n                                generateShipConfirmEmail(order, shipment, shipToEmail, \"tfe\");\r\n                            } else {\r\n                                if (!isBlank(shipToEmail)) {\r\n                                    generateShipConfirmEmail(order, shipment, shipToEmail, \"tfe\");\r\n                                }\r\n\r\n                                if (!isBlank(billToEmail)) {\r\n                                    generateShipConfirmEmail(order, shipment, billToEmail, \"tfe\");\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (softeonId === 'IWSTO') {\r\n                        var email = \"Orders.WGS@sto.com\";\r\n                        if (isBlank(shipToEmail) && isBlank(billToEmail)) {\r\n                            generateShipConfirmEmail(order, shipment, email, \"stoli\");\r\n                        } else {\r\n                            if (shipToEmail === billToEmail) {\r\n                                generateShipConfirmEmail(order, shipment, shipToEmail, \"stoli\");\r\n                            } else {\r\n                                if (!isBlank(shipToEmail)) {\r\n                                    generateShipConfirmEmail(order, shipment, shipToEmail, \"stoli\");\r\n                                }\r\n\r\n                                if (!isBlank(billToEmail)) {\r\n                                    generateShipConfirmEmail(order, shipment, billToEmail, \"stoli\");\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            var allShipmentRequestsComplete = true;\r\n            var totalShipped = 0;\r\n            java.lang.System.out.println(\"+++++Num Shipment Requests:\"+shipmentRequests.size());\r\n            var srIterator = shipmentRequests.iterator();\r\n            while(srIterator.hasNext()) {\r\n                var sr = srIterator.next();\r\n                 java.lang.System.out.println(\"+++++Shipment Request Status:\"+sr.getHeader().getStatus());\r\n                if(sr.getHeader().getStatus().equals(com.eis.ssit.api.v1.model.ShipmentRequestStatus.PENDING) || sr.getHeader().getStatus().equals(com.eis.ssit.api.v1.model.ShipmentRequestStatus.SHIPMENT_IN_PROGRESS)) \r\n                {\r\n                    allShipmentRequestsComplete = false;\r\n                }\r\n                \r\n                var lineIterator = sr.getLineItems().iterator();\r\n                while(lineIterator.hasNext()) {\r\n                    var line = lineIterator.next();\r\n                    var shippedQty = line.getShippedQty();\r\n                    totalShipped = totalShipped + shippedQty;\r\n                }\r\n            \r\n            }\r\n            \r\n            var cancelOrder = false;\r\n            if(allShipmentRequestsComplete && totalShipped === 0){\r\n                cancelOrder = true;\r\n            }\r\n            \r\n            java.lang.System.out.println(\"+++++Order Status:\"+order.getHeader().getStatus());\r\n            if (order.getHeader().getStatus().equals(com.eis.ssit.api.v1.model.OrderStatus.PARTIALLY_SHIPPED)) {\r\n                \r\n                if(allShipmentRequestsComplete) {\r\n                    order.getHeader().setStatus(com.eis.ssit.api.v1.model.OrderStatus.SHIPPED);\r\n                }\r\n                \r\n                for (var q = 0; q < order.getLineItems().size(); q++) {\r\n                    var line = order.getLineItems().get(q);\r\n                    var shipmentLine = lineUidToShipmentLineMap.get(line.getUid());\r\n                    if(shipmentLine !== null) {\r\n                    var shippedQty = shipmentLine.getItemQty();\r\n                    \r\n                        if(shippedQty > 0 ) {\r\n                            if (line.getStatus().equals(com.eis.ssit.api.v1.model.OrderLineStatus.OPEN)) {\r\n                                line.setStatus(com.eis.ssit.api.v1.model.OrderLineStatus.CLOSED);\r\n                            }\r\n                        } else {\r\n                            if (line.getStatus().equals(com.eis.ssit.api.v1.model.OrderLineStatus.OPEN)) {\r\n                                line.setStatus(com.eis.ssit.api.v1.model.OrderLineStatus.REJECTED);\r\n                            }\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n               \r\n\r\n                order = salesOrderService.save(order);\r\n            } else if (order.getHeader().getStatus().equals(com.eis.ssit.api.v1.model.OrderStatus.FAILED_TO_ALLOCATE)) {\r\n                \r\n                if(allShipmentRequestsComplete && cancelOrder) {\r\n                    order.getHeader().setStatus(com.eis.ssit.api.v1.model.OrderStatus.CANCELED);\r\n                } else if(allShipmentRequestsComplete && totalShipped > 0) {\r\n                    order.getHeader().setStatus(com.eis.ssit.api.v1.model.OrderStatus.SHIPPED);\r\n                } else if(!allShipmentRequestsComplete && totalShipped > 0) {\r\n                    order.getHeader().setStatus(com.eis.ssit.api.v1.model.OrderStatus.PARTIALLY_SHIPPED);\r\n                } else if(!allShipmentRequestsComplete && totalShipped === 0) {\r\n                    order.getHeader().setStatus(com.eis.ssit.api.v1.model.OrderStatus.RELEASED);\r\n                }\r\n                \r\n                for (var q = 0; q < order.getLineItems().size(); q++) {\r\n                    var line = order.getLineItems().get(q);\r\n                    var shipmentLine = lineUidToShipmentLineMap.get(line.getUid());\r\n                    if(shipmentLine !== null) {\r\n                        java.lang.System.out.println(\"+++++ lineuidMap size:\"+lineUidToShipmentLineMap.size()+\", SOLine UID:\"+line.getUid()+\" ShipmentLine:\"+shipmentLine);\r\n                        var shippedQty = shipmentLine.getItemQty();\r\n                        if (line.getStatus().equals(com.eis.ssit.api.v1.model.OrderLineStatus.OPEN) && shippedQty === 0) {\r\n                            line.setStatus(com.eis.ssit.api.v1.model.OrderLineStatus.CANCELLED);\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                order = salesOrderService.save(order);\r\n\r\n            }\r\n        }\r\n\r\n        return shipment;\r\n    } catch (e) {\r\n        java.lang.System.out.println(\"Caught Exception:\" + e.message);\r\n        var message = \"shipment-quantity-mismatch|Saddle Creek could not process Shipment Number \" + shipment.getShipmentNumber() + \" listing the incorrect quantity on the shipment, or that the Assigned Id \" +\r\n            \"they provided does not match the expected value.\";\r\n        if (e.javaException) {\r\n            java.lang.System.out.println(\"Caught Exception:\" + e.javaException.message);\r\n            message = \"exceptions|\" + e.javaException.message;\r\n        }\r\n        handleError(buildErrorList(message), shipment, true);\r\n    }\r\n}\r\n\r\nfunction writeToMailbox(shipment, mailbox) {\r\n    var xml = mapper.writeValueAsString(shipment);\r\n    var metaData = new java.util.LinkedHashMap();\r\n    var shipmentReferences = shipment.getReferenceData();\r\n    var fromInternalAddress = scriptUtils.getReferenceValueFromReferences(shipmentReferences, \"internalFromAddress\");\r\n    var toInternalAddress = scriptUtils.getReferenceValueFromReferences(shipmentReferences, \"internalToAddress\");\r\n\r\n    if (fromInternalAddress === null) {\r\n        fromInternalAddress = \"vendor@innerworkings.com\";\r\n    }\r\n\r\n    if (toInternalAddress === null) {\r\n        toInternalAddress = \"shipconfirm@innerworkings.com\";\r\n    }\r\n\r\n    metaData.put(\"shipmentNumber\", shipment.getShipmentNumber());\r\n    metaData.put(\"orderNumber\", shipment.getOrderNumber());\r\n    var mailboxEntry = scriptUtils.createMailboxEntry(mailbox, xml, \"ShipmentConfirmation_\" + shipment.getShipmentNumber() + \".xml\", \"ShipmentConfirmation-\" + shipment.getShipmentNumber() + \"_Order-\" + shipment.getOrderNumber(), toInternalAddress, fromInternalAddress, metaData, metaData, true);\r\n    return mailboxEntry;\r\n}\r\n\r\nfunction handleError(errorList, shipment, alertError) {\r\n    var mailbox = scriptUtils.getMailbox(\"INWK-ShipmentConfirm-Import-Failure\");\r\n    var mailboxEntry = writeToMailbox(shipment, mailbox);\r\n    tags.add(\"reprocessMailboxEntryId-\" + mailboxEntry.getId());\r\n    if (alertError) {\r\n        alertAndNotifyOfError(errorList, shipment.getShipmentNumber(), shipment.getOrderNumber());\r\n    }\r\n}\r\n\r\nfunction processShipmentConfirmation() {\r\n\r\n    //org.apache.shiro.SecurityUtils.getSubject().getSession(false).setTimeout(36000000);\r\n    org.apache.shiro.SecurityUtils.getSubject().getSession(false).touch();\r\n\r\n    var clazz = new java.lang.Class.forName(\"com.eis.ssit.api.v1.model.Shipment\");\r\n    var shipment = mapper.readValue(body, clazz);\r\n    tags.add(\"shipmentNumber-\" + shipment.getShipmentNumber());\r\n    tags.add(\"orderNumber-\" + shipment.getOrderNumber());\r\n    tags.add(\"originalOrderNumber-\" + shipment.getOriginalOrderNumber());\r\n    shipment.setRefName(shipment.getShipmentNumber() + \"-\" + java.lang.System.nanoTime());\r\n\r\n    var shipmentRequest = null;\r\n\r\n    var shipmentRequest = findShipmentRequestForShipment(shipment);\r\n    if (shipmentRequest !== null && !hasShipmentBeenReceived(shipment)) {\r\n        isValidShipment = true;\r\n    } else {\r\n        isValidShipment = false;\r\n    }\r\n\r\n    if (isValidShipment) {\r\n\r\n        shipment.getDataDomains().clear();\r\n        shipment.getDataDomains().addAll(shipmentRequest.getDataDomains());\r\n        shipment.setOrderNumber(shipmentRequest.getHeader().getSalesOrderNumber());\r\n        shipment.setOriginalOrderNumber(shipmentRequest.getHeader().getOriginalOrderNumber());\r\n        shipment = finalizeShipment(shipment, shipmentRequest);\r\n\r\n    }\r\n}\r\n\r\n\r\nvar tags = new java.util.ArrayList();\r\ntags.add(\"transmissionId-\" + header_transmissionId);\r\ntags.add(\"file-\" + header_CamelFileName);\r\ntags.add(\"mailboxEntryId-\" + header_MailboxEntryId);\r\n\r\nprocessShipmentConfirmation();",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "processShipmentConfirm",
    "refKey" : "cc89b3e42c94f3562944909e56d40a2d",
    "displayName" : "processShipmentConfirm",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "processShipmentConfirm" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1508879019933,
      "createUser" : "Admin Innerworkings",
      "updateTs" : 1520859444543,
      "updateUser" : "Admin Innerworkings"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "5aa85de1-79f7-4f44-969d-c1af69617fa8",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        },
        "header_CamelFileName" : {
          "id" : null,
          "refName" : "header_CamelFileName",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_CamelFileName",
          "description" : null
        },
        "header_MailboxEntryId" : {
          "id" : null,
          "refName" : "header_MailboxEntryId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_MailboxEntryId",
          "description" : null
        },
        "header_transmissionId" : {
          "id" : null,
          "refName" : "header_transmissionId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_transmissionId",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "catalogService" : {
        "type" : "serviceBean",
        "name" : "catalogService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "catalogService",
        "parameterName" : null,
        "parameters" : { }
      },
      "correlationService" : {
        "type" : "serviceBean",
        "name" : "correlationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "correlationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "header_CamelFileName" : {
        "type" : "scriptInputVariable",
        "name" : "header_CamelFileName",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_CamelFileName",
        "parameters" : { }
      },
      "header_MailboxEntryId" : {
        "type" : "scriptInputVariable",
        "name" : "header_MailboxEntryId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_MailboxEntryId",
        "parameters" : { }
      },
      "header_transmissionId" : {
        "type" : "scriptInputVariable",
        "name" : "header_transmissionId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_transmissionId",
        "parameters" : { }
      },
      "inventoryPoolEntryService" : {
        "type" : "serviceBean",
        "name" : "inventoryPoolEntryService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolEntryService",
        "parameterName" : null,
        "parameters" : { }
      },
      "notificationDAO" : {
        "type" : "javaBean",
        "name" : "notificationDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "notificationDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationService" : {
        "type" : "serviceBean",
        "name" : "organizationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "organizationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "productService" : {
        "type" : "serviceBean",
        "name" : "productService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "productService",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderService" : {
        "type" : "serviceBean",
        "name" : "salesOrderService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderService",
        "parameterName" : null,
        "parameters" : { }
      },
      "scriptUtils" : {
        "type" : "javaBean",
        "name" : "scriptUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentDAO" : {
        "type" : "daoBean",
        "name" : "shipmentDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentRequestDAO" : {
        "type" : "daoBean",
        "name" : "shipmentRequestDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentRequestDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentRequestService" : {
        "type" : "serviceBean",
        "name" : "shipmentRequestService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentRequestService",
        "parameterName" : null,
        "parameters" : { }
      },
      "shipmentService" : {
        "type" : "serviceBean",
        "name" : "shipmentService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "shipmentService",
        "parameterName" : null,
        "parameters" : { }
      },
      "taskDAO" : {
        "type" : "javaBean",
        "name" : "taskDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "taskHelper" : {
        "type" : "javaBean",
        "name" : "taskHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorService" : {
        "type" : "serviceBean",
        "name" : "vendorService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.innerworkings" ]
  },
  "functionType" : "routing",
  "inputs" : { },
  "result" : null,
  "active" : true,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "innerworkingsPolicy",
    "refKey" : "6eca2f751c7092f4f789863252fbd7e1",
    "displayName" : "innerworkingsPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "innerworkingsPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1507818693457,
      "createUser" : "Admin Innerworkings",
      "updateTs" : 1559935221167,
      "updateUser" : "Tony Costanzo"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "3ca01532-b431-4906-a351-25394a7b5546",
    "allowedPackages" : {
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysyncfleetpride" : "com.eis.oms.inventory.sync.fleetpride",
      "comeisomsinventorysyncv2" : "com.eis.oms.inventory.sync.v2",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1integrationmarketplace" : "com.eis.ssit.api.v1.integration.marketplace",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparsers" : "com.eis.ssit.parsers",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersproductskufleetpride" : "com.eis.ssit.parsers.productsku.fleetpride",
      "comeisssitparserssite" : "com.eis.ssit.parsers.site",
      "comeisssitparsersskucrossreference" : "com.eis.ssit.parsers.skucrossreference",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.innerworkings" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "processShipmentConfirm",
    "refId" : "5aa85de1-79f7-4f44-969d-c1af69617fa8",
    "refKey" : "cc89b3e42c94f3562944909e56d40a2d",
    "displayName" : "processShipmentConfirm",
    "dataDomain" : "com.innerworkings",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "innerworkingsPolicy",
    "refId" : "3ca01532-b431-4906-a351-25394a7b5546",
    "refKey" : "6eca2f751c7092f4f789863252fbd7e1",
    "displayName" : "innerworkingsPolicy",
    "dataDomain" : "com.innerworkings",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "admin@innerworkings.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.innerworkings" ]
}