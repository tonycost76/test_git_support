{
  "refName" : "INWK-SalesOrder-Import",
  "refKey" : "70c1280373a49969e6900df44836adf8",
  "displayName" : "INWK-SalesOrder-Import",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1508877383665,
    "createUser" : "Admin Innerworkings",
    "updateTs" : 1522184553004,
    "updateUser" : "Admin Innerworkings"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "dd9af54a-3f75-492b-ad8b-7c18c385f52b",
  "script" : "\r\nvar mapper = new com.eis.json.EnvisionJacksonJaxbXMLMapper();\r\nmapper.enable(com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT);\r\nmapper.setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT);\r\n\r\n\r\n\r\nfunction isBlank(value) {\r\n    if (value === null || value === undefined || value === '') {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction removeWhiteSpace(value) {\r\n\r\n    if (value !== null) {\r\n        return new java.lang.String(value).trim();\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction buildErrorList(message) {\r\n    var errorList = new java.util.ArrayList();\r\n    errorList.add(message);\r\n    return errorList;\r\n\r\n}\r\n\r\n\r\nfunction createTaskAndNotification(errorName, description, taskQueue) {\r\n\r\n    var dataDomains = new java.util.ArrayList();\r\n    dataDomains.add(\"com.innerworkings\");\r\n    var notification = new com.eis.core.api.v1.model.Notification();\r\n\r\n    notification.setId(java.lang.String.valueOf(java.util.UUID.randomUUID()));\r\n    notification.setRefName(errorName + \"-\" + java.lang.System.nanoTime());\r\n    notification.setDisplayName(errorName);\r\n    notification.getDataDomains().addAll(dataDomains);\r\n    notification.setNotificationType(com.eis.core.api.v1.model.NotificationType.Alert);\r\n    notification.setBody(description);\r\n    notification.setSource(\"InnerWorkings VDP\");\r\n\r\n    //notificationDAO.save(notification);\r\n\r\n\r\n    var task = new com.eis.core.api.v1.model.Task();\r\n    task.setId(java.lang.String.valueOf(java.util.UUID.randomUUID()));\r\n    task.setDisplayName(errorName);\r\n    task.setStatus(\"Assigned\");\r\n    task.setRefName(errorName + \"-\" + java.lang.System.nanoTime());\r\n    description = description + \"\\n\\n\\n\";\r\n    for (var x = 0; x < tags.size(); x++) {\r\n        description = description + tags.get(x) + \"\\n\";\r\n    }\r\n    task.setDescription(description);\r\n    task.getDataDomains().addAll(dataDomains);\r\n\r\n    task.setAssignmentDate(new Date());\r\n    var dueDate = java.util.Calendar.getInstance();\r\n    dueDate.add(java.util.Calendar.DATE, 3);\r\n    task.setDueDate(dueDate.getTime());\r\n    task.setDateCreated(new Date());\r\n    task.setLabel(errorName);\r\n    task.setOwnerName(\"Admin Innerworkings\");\r\n    task.setTaskQueueRefName(taskQueue);\r\n    task.getTags().addAll(tags);\r\n    taskDAO.save(task);\r\n}\r\n\r\n\r\n\r\nfunction alertAndNotifyOfError(errorList, orderNumber, taskQueue) {\r\n    var primaryContactEmail = null;\r\n\r\n\r\n    var subject = 'InnerWorkings - Order Error - Order Number-' + orderNumber;\r\n\r\n    var message = errorList.get(0);\r\n    var taskQueueAndMessage = message.split('|');\r\n\r\n    if (isBlank(taskQueue)) {\r\n        if (taskQueueAndMessage.length > 1) {\r\n            taskQueue = taskQueueAndMessage[0];\r\n        } else {\r\n            taskQueue = 'order-processing-error';\r\n        }\r\n    }\r\n    var errorMessage = '';\r\n    if (taskQueueAndMessage.length > 1) {\r\n        errorMessage = taskQueueAndMessage[1];\r\n    } else {\r\n        errorMessage = taskQueueAndMessage[0];\r\n    }\r\n\r\n    var newErrorList = new java.util.ArrayList();\r\n    newErrorList.add(errorMessage);\r\n\r\n\r\n\r\n    if (primaryContactEmail === null) {\r\n        primaryContactEmail = \"gisley@enspirecommerce.com\";\r\n    }\r\n    \r\n\r\n    if (taskQueue === 'order-item-missing' || taskQueue === 'order-already-received' || taskQueue === 'order-product-invalid' || taskQueue === 'order-product-not-found' || taskQueue === 'order-channel-not-found') {\r\n        var velocityContext = new org.apache.velocity.VelocityContext();\r\n        //velocityContext.put(\"fileName\", fileName);\r\n        velocityContext.put(\"errorList\", newErrorList);\r\n        velocityContext.put(\"orderNumber\", orderNumber);\r\n        velocityContext.put(\"description\", subject);\r\n        var body = scriptUtils.buildMessageFromVelocityTemplate(\"integration/emailTemplates/orderValidationErrors.vm\", velocityContext);\r\n\r\n        var mailbox = scriptUtils.getMailbox(\"Orders-Invalid-Email\");\r\n        scriptUtils.createMailboxEntry(mailbox, body, \"InvalidOrder-\" + orderNumber + \".html\", subject, primaryContactEmail, \"alerts@enspirecommerce.com\", null, null, true);\r\n    }\r\n    \r\n    createTaskAndNotification(subject, errorMessage, taskQueue);\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction hasSalesOrderBeenReceived(salesOrder) {\r\n    var alreadyReceived = false;\r\n\r\n    var salesOrders = salesOrderService.getList(0, 10, \"header.orderNumber:\" + salesOrder.getHeader().getOrderNumber(), null, null);\r\n\r\n    if (salesOrders.size() > 0) {\r\n        alreadyReceived = true;\r\n        var errorList = new java.util.ArrayList();\r\n        errorList.add(\"Saddle Creek could not process Order,\" +\r\n            salesOrder.getHeader().getOrderNumber() + \". An order with this number has already been received and processed.\");\r\n        alertAndNotifyOfError(errorList, salesOrder.getHeader().getOrderNumber(), 'order-already-received');\r\n    }\r\n\r\n    return alreadyReceived;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction roundToTwo(num) {\r\n    return +(Math.round(num + \"e+2\") + \"e-2\");\r\n}\r\n\r\n\r\nfunction determineIfForceAllocation(salesOrder) {\r\n    var references = salesOrder.getReferenceData();\r\n    var forceAllocationSite = scriptUtils.getReferenceValueFromReferences(references, \"WR\");\r\n\r\n    if (forceAllocationSite !== null && forceAllocationSite !== 'NA') {\r\n        var siteRefName = null;\r\n        if (forceAllocationSite === 'FW2' || forceAllocationSite === 'fw2') {\r\n            siteRefName = \"fw2\";\r\n        } else {\r\n            // What do we do?\r\n        }\r\n\r\n        var site = siteService.getByRefName(siteRefName, \"com.innerworkings\");\r\n        var forceAllocationRequest = new com.eis.ssit.api.v1.model.ForceAllocationRequest();\r\n        forceAllocationRequest.setSiteId(site.getId());\r\n        salesOrder.setForceAllocationRequest(forceAllocationRequest);\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction determineShopfiySiteId(salesOrder) {\r\n    var references = salesOrder.getReferenceData();\r\n    var shopifySiteUrl = scriptUtils.getReferenceValueFromReferences(references, \"shopify_order_status_url\");\r\n     \r\n    if (!isBlank(shopifySiteUrl)) {\r\n        var shopfifySiteId = null;\r\n        shopifySiteUrl = shopifySiteUrl.substring(0, shopifySiteUrl.indexOf(\".com\")+4);\r\n        java.lang.System.out.println(\"ShopifySiteUrl:\"+shopifySiteUrl);\r\n        var shopifySiteIdsCorrelation = correlationService.getByRefName(\"ShopifySiteToSiteIdMapping\");\r\n        if(!isBlank(shopifySiteIdsCorrelation.getId())) {\r\n            shopifySiteId = shopifySiteIdsCorrelation.getValuesForKey(shopifySiteUrl);\r\n            \r\n            if(!isBlank(shopifySiteId)) {\r\n                var shopifySiteIdRef = new com.eis.core.api.v1.model.Reference();\r\n                shopifySiteIdRef.setName(\"shopifySiteId\");\r\n                shopifySiteIdRef.setValue(shopifySiteId);\r\n                shopifySiteIdRef.setType(\"String\");\r\n                salesOrder.getReferenceData().add(shopifySiteIdRef);\r\n                \r\n                salesOrder.getHeader().setOrderNumber(shopifySiteId+\"-\"+salesOrder.getHeader().getOrderNumber());\r\n                \r\n            } else {\r\n                \r\n                \r\n            }\r\n        \r\n        } else {\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction buildSalesOrder(salesOrder) {\r\n\r\n    var email = \"\";\r\n    var phone = \"\";\r\n    var shipFromContactInfo = salesOrder.getHeader().getShipFromContactInfo();\r\n\r\n    var shipToContact = null;\r\n    for (var i = 0; i < salesOrder.getHeader().getShipToContacts().size(); i++) {\r\n        shipToContact = salesOrder.getHeader().getShipToContacts().get(i);\r\n        \r\n        if(!isBlank(shipToContact.getAddress().getState())) {\r\n            shipToContact.getAddress().setState(\r\n                shipToContact.getAddress().getState().toUpperCase());\r\n        }\r\n    \r\n    }\r\n\r\n    if (salesOrder.getHeader().getBuyerContactInfo() === null || salesOrder.getHeader().getBuyerContactInfo().getAddress() === null || isBlank(salesOrder.getHeader().getBuyerContactInfo().getAddress().getAddress1())) {\r\n        salesOrder.getHeader().setBuyerContactInfo(shipToContact);\r\n    }\r\n    \r\n    if(salesOrder.getHeader().getBuyerContactInfo().getAddress().getCountry() === 'US') {\r\n       \r\n        salesOrder.getHeader().getBuyerContactInfo().getAddress().setState(\r\n                salesOrder.getHeader().getBuyerContactInfo().getAddress().getState().toUpperCase());\r\n        \r\n    }\r\n\r\n    if (salesOrder.getHeader().getBillToContactInfo() === null || salesOrder.getHeader().getBillToContactInfo().getAddress() === null || isBlank(salesOrder.getHeader().getBillToContactInfo().getAddress().getAddress1())) {\r\n\r\n        salesOrder.getHeader().setBillToContactInfo(salesOrder.getHeader().getBuyerContactInfo());\r\n    } else {\r\n        salesOrder.getHeader().getBillToContactInfo().getAddress().setState(\r\n                salesOrder.getHeader().getBillToContactInfo().getAddress().getState().toUpperCase());\r\n        \r\n    }\r\n\r\n\r\n    var shipFromContactInfo = salesOrder.getHeader().getShipFromContactInfo();\r\n\r\n    salesOrder.setRefName(salesOrder.getHeader().getOrderNumber() + \":\" + java.lang.System.nanoTime());\r\n\r\n    for (var i = 0; i < salesOrder.getLineItems().size(); i++) {\r\n        var lineItem = salesOrder.getLineItems().get(i);\r\n\r\n        lineItem.setShippingCharges(salesOrder.getHeader().getShippingCharges());\r\n        lineItem.setCarrierServiceType(salesOrder.getHeader().getCarrierServiceType());\r\n        lineItem.setShippingCarrier(salesOrder.getHeader().getShippingCarrier());\r\n\r\n        var product = productService.findProductByProductIdentifier(lineItem.getSystemCatalogProductIdentifier());\r\n\r\n        var sku = skuService.findBySkuId(lineItem.getSystemCatalogProductIdentifier());\r\n\r\n        if (sku === null) {\r\n            throw new com.eis.core.api.v1.exception.AccountConfigurationException(\"order-product-not-found|Could not process order:\" + salesOrder.getHeader().getOrderNumber() + \". The sku with sku:\" + lineItem.getSystemCatalogProductIdentifier() + \" was not found.\");\r\n        } else {\r\n            if (sku.isShelfLifeRequired()) {\r\n                if (salesOrder.getHeader().getShelfLifeInDays() != null) {\r\n                    lineItem.setShelfLifeInDays(salesOrder.getHeader().getShelfLifeInDays());\r\n                } else {\r\n                    var channel = channelService.getByRefName(salesOrder.getHeader().getSalesChannel());\r\n\r\n                    if (channel === null) {\r\n                        throw new com.eis.core.api.v1.exception.AccountConfigurationException(\"order-channel-not-found|Could not process order:\" + salesOrder.getHeader().getOrderNumber() + \". The channel with name\" + salesOrder.getHeader().getSalesChannel() + \" was not found. Please create this channel in the system if it is a valid Channel.\");\r\n\r\n                    } else {\r\n                        if (channel.getDefaultShelfLifeInDays() !== null) {\r\n                            lineItem.setShelfLifeInDays(channel.getDefaultShelfLifeInDays());\r\n                        } else {\r\n                            throw new com.eis.core.api.v1.exception.AccountConfigurationException(\"order-product-invalid|Could not process order:\" + salesOrder.getHeader().getOrderNumber() + \". The product with sku:\" + lineItem.getSystemCatalogProductIdentifier() + \" is supposed to have a shelf life, but no shelf life in days was passed in the order and no default shelf life in days was set in the channel.\");\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        var weight = roundToTwo(lineItem.getItemWeight());\r\n        java.lang.System.out.println(\"Weight:\" + weight);\r\n        lineItem.setItemWeight(weight);\r\n\r\n        var itemWeight = new java.math.BigDecimal(lineItem.getItemWeight());\r\n        itemWeight = itemWeight.setScale(2, java.math.BigDecimal.ROUND_HALF_EVEN);\r\n        java.lang.System.out.println(\"Item Weight:\" + itemWeight);\r\n        lineItem.setItemWeight(itemWeight);\r\n        if (lineItem.getItemWeight() !== null && lineItem.getItemWeight() !== 0) {\r\n\r\n\r\n        } else {\r\n            lineItem.setItemWeight(0);\r\n        }\r\n    }\r\n\r\n    determineShopfiySiteId(salesOrder);\r\n    salesOrder.getHeader().setOrderLookUpKey(salesOrder.getHeader().getOrderNumber());\r\n    determineIfForceAllocation(salesOrder);\r\n    salesOrder.setForced(true);\r\n    salesOrder = salesOrderService.save(salesOrder);\r\n\r\n    if (salesOrder.getHeader().getStatus().equals(com.eis.ssit.api.v1.model.OrderStatus.FAILED_TO_VALIDATE)) {\r\n        throw new com.eis.core.api.v1.exception.AccountConfigurationException(\"The Order had validation errors and is in FAILED_TO_VALIDATE status and will not be released. Please review the sales order and make sure all required information is completed.\");\r\n\r\n    }\r\n}\r\n\r\nfunction writeToMailbox(salesOrder, mailbox) {\r\n\r\n    var salesOrderCollection = new com.eis.ssit.api.v1.model.SalesOrderCollection();\r\n\r\n    salesOrderCollection.getItems().add(salesOrder);\r\n    var xml = mapper.writeValueAsString(salesOrderCollection);\r\n    var metaData = new java.util.LinkedHashMap();\r\n    var references = salesOrder.getReferenceData();\r\n\r\n    var fromInternalAddress = scriptUtils.getReferenceValueFromReferences(references, \"internalFromAddress\");\r\n    if (fromInternalAddress === null) {\r\n        fromInternalAddress = 'orders@innerworkings.com';\r\n    }\r\n    var toInternalAddress = scriptUtils.getReferenceValueFromReferences(references, \"internalToAddress\");\r\n\r\n    if (toInternalAddress === null) {\r\n        toInternalAddress = 'orders@innerworkings.com';\r\n    }\r\n\r\n    metaData.put(\"orderNumber\", salesOrder.getHeader().getOrderNumber());\r\n    var mailboxEntry = scriptUtils.createMailboxEntry(mailbox, xml, \"SO_\" + salesOrder.getHeader().getOrderNumber() + \".xml\", \"SO-\" + salesOrder.getHeader().getOrderNumber(), toInternalAddress, fromInternalAddress, null, metaData, true);\r\n    return mailboxEntry;\r\n}\r\n\r\n\r\nfunction isBlank(value) {\r\n    if (value === null || value === undefined || value === '') {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction handleError(errorList, salesOrder, alertError, taskQueue) {\r\n    var mailbox = scriptUtils.getMailbox(\"INWK-SalesOrder-Import-Failure\");\r\n    var mailboxEntry = writeToMailbox(salesOrder, mailbox);\r\n    tags.add(\"reprocessMailboxEntryId-\" + mailboxEntry.getId());\r\n    if (alertError) {\r\n        alertAndNotifyOfError(errorList, salesOrder.getHeader().getOrderNumber(),taskQueue);\r\n    }\r\n}\r\n\r\n/*\r\nfunction handleSuccess(salesOrder) {\r\n    var mailbox = scriptUtils.getMailbox(\"Order-Acknowledgement\");\r\n    \r\n    var metaData = new java.util.LinkedHashMap();\r\n    var references = salesOrder.getReferenceData();\r\n\r\n    var fromInternalAddress = scriptUtils.getReferenceValueFromReferences(references, \"internalFromAddress\");\r\n    if (fromInternalAddress === null) {\r\n        fromInternalAddress = 'orders@innerworkings.com';\r\n    }\r\n    var toInternalAddress = scriptUtils.getReferenceValueFromReferences(references, \"internalToAddress\");\r\n\r\n    if (toInternalAddress === null) {\r\n        toInternalAddress = 'orders@innerworkings.com';\r\n    }\r\n    \r\n    var orderStatusReport = new com.eis.ssit.api.v1.model.OrderStatusReport();\r\n    \r\n    //per Grant don't need, but commenting in case that changes\r\n    //orderStatusReport.setRefName(salesOrder.getRefName());\r\n    //orderStatusReport.setId(salesOrder.getId());\r\n    //orderStatusReport.setDataDomain(\"com.innerworkings\");\r\n    \r\n    orderStatusReport.setPurchaseOrderNumber(salesOrder.getHeader().getOrderNumber());\r\n    orderStatusReport.setStatusReportCode(\"A\");\r\n    orderStatusReport.setHierarchicalOrderNumber(1);\r\n    orderStatusReport.setDate(salesOrder.getHeader().getPurchaseDate());\r\n    orderStatusReport.getReferenceData().addAll(salesOrder.getReferenceData());\r\n    \r\n    for (var lineNum = 0; lineNum < salesOrder.getLineItems().size(); lineNum++) {\r\n        var line = salesOrder.getLineItems().get(lineNum);\r\n        var statusLine = new com.eis.ssit.api.v1.model.OrderStatusLine();\r\n        statusLine.setLineNumber(line.getLineItemNumber());\r\n        statusLine.setOrderStatusCode(\"A\");\r\n      \r\n        statusLine.setQuantity(line.getItemQty());\r\n        \r\n        var p1 = new com.eis.ssit.api.v1.model.ProductServiceIdentifier();\r\n        p1.setProductServiceIdQualifier(\"SK\");\r\n        p1.setProductServiceId(line.getSystemCatalogProductIdentifier());\r\n        statusLine.getProductServiceIds().add(p1);\r\n        \r\n        orderStatusReport.getOrderStatusLines().add(statusLine);\r\n        \r\n    }\r\n    \r\n    var xml = mapper.writeValueAsString(orderStatusReport);\r\n\r\n    metaData.put(\"orderNumber\", salesOrder.getHeader().getOrderNumber());\r\n    var mailboxEntry = scriptUtils.createMailboxEntry(mailbox, xml, \"SO_Ack_\" + salesOrder.getHeader().getOrderNumber() + \".xml\", \"SO-Ack-\" + salesOrder.getHeader().getOrderNumber(), toInternalAddress, fromInternalAddress, null, metaData, true);\r\n}*/\r\n\r\nfunction processSalesOrders() {\r\n\r\n    //org.apache.shiro.SecurityUtils.getSubject().getSession(false).setTimeout(36000000);\r\n    org.apache.shiro.SecurityUtils.getSubject().getSession(false).touch();\r\n\r\n    var clazz = new java.lang.Class.forName(\"com.eis.ssit.api.v1.model.SalesOrderCollection\");\r\n    var salesOrders = mapper.readValue(body, clazz).getItems();\r\n\r\n    for (var x = 0; x < salesOrders.size(); x++) {\r\n\t    tags = new java.util.ArrayList();\r\n\t    tags.addAll(tags1);\r\n        var salesOrder = salesOrders.get(x);\r\n        var shipFromContactInfo = salesOrder.getHeader().getShipFromContactInfo();\r\n\r\n        tags.add(\"orderNumber-\" + salesOrder.getHeader().getOrderNumber());\r\n        tags.add(\"originalOrderNumber-\" + salesOrder.getHeader().getOriginalOrderNumber());\r\n        \r\n\t    try {\r\n           \r\n            java.lang.System.out.println(\"Building Order\");\r\n            if (!hasSalesOrderBeenReceived(salesOrder)) {\r\n                buildSalesOrder(salesOrder);\r\n                //handleSuccess(salesOrder);\r\n            } else {\r\n                handleError(buildErrorList(\"Order Already Received.\"), salesOrder, false);\r\n            }\r\n        } catch (e) {\r\n\r\n            if (e instanceof com.eis.core.api.v1.exception.AccountConfigurationException) {\r\n\r\n                handleError(buildErrorList(e.getMessage()), salesOrder, true);\r\n                continue;\r\n\r\n            } else if (e.javaException) {\r\n                handleError(buildErrorList(e.javaException.message), salesOrder, true,'order-processing-error');\r\n                continue;\r\n\r\n            } else {\r\n                handleError(buildErrorList(e.message), salesOrder, true,'order-processing-error');\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar tags = null;\r\nvar tags1 = new java.util.ArrayList();\r\ntags1.add(\"transmissionId-\" + header_transmissionId);\r\ntags1.add(\"file-\" + header_CamelFileName);\r\ntags1.add(\"mailboxEntryId-\" + header_MailboxEntryId);\r\n\r\n\r\nprocessSalesOrders()\r\n                ",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "salesOrderImport",
    "refKey" : "1c5dc0ba5e3f8e75318dfee7f3321c71",
    "displayName" : "salesOrderImport",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "salesOrderImport" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1508876911304,
      "createUser" : "Admin Innerworkings",
      "updateTs" : 1522180792428,
      "updateUser" : "Admin Innerworkings"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "2c0d2a52-3efb-4446-9084-b9c95308b159",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        },
        "header_CamelFileName" : {
          "id" : null,
          "refName" : "header_CamelFileName",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_CamelFileName",
          "description" : null
        },
        "header_MailboxEntryID" : {
          "id" : null,
          "refName" : "header_MailboxEntryID",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_MailboxEntryID",
          "description" : null
        },
        "header_transmissionId" : {
          "id" : null,
          "refName" : "header_transmissionId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_transmissionId",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "businessNumberGenerator" : {
        "type" : "javaBean",
        "name" : "businessNumberGenerator",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "channelService" : {
        "type" : "serviceBean",
        "name" : "channelService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "channelService",
        "parameterName" : null,
        "parameters" : { }
      },
      "correlationService" : {
        "type" : "serviceBean",
        "name" : "correlationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "correlationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "customerService" : {
        "type" : "serviceBean",
        "name" : "customerService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "customerService",
        "parameterName" : null,
        "parameters" : { }
      },
      "header_CamelFileName" : {
        "type" : "scriptInputVariable",
        "name" : "header_CamelFileName",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_CamelFileName",
        "parameters" : { }
      },
      "header_MailboxEntryId" : {
        "type" : "scriptInputVariable",
        "name" : "header_MailboxEntryId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_MailboxEntryID",
        "parameters" : { }
      },
      "header_transmissionId" : {
        "type" : "scriptInputVariable",
        "name" : "header_transmissionId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_transmissionId",
        "parameters" : { }
      },
      "itemService" : {
        "type" : "serviceBean",
        "name" : "itemService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "itemService",
        "parameterName" : null,
        "parameters" : { }
      },
      "notificationDAO" : {
        "type" : "javaBean",
        "name" : "notificationDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationService" : {
        "type" : "serviceBean",
        "name" : "organizationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "organizationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "priceBookEntryService" : {
        "type" : "serviceBean",
        "name" : "priceBookEntryService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "priceBookEntryService",
        "parameterName" : null,
        "parameters" : { }
      },
      "productService" : {
        "type" : "serviceBean",
        "name" : "productService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "productService",
        "parameterName" : null,
        "parameters" : { }
      },
      "salesOrderService" : {
        "type" : "serviceBean",
        "name" : "salesOrderService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "salesOrderService",
        "parameterName" : null,
        "parameters" : { }
      },
      "scriptUtils" : {
        "type" : "javaBean",
        "name" : "scriptUtils",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "siteService" : {
        "type" : "serviceBean",
        "name" : "siteService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "siteService",
        "parameterName" : null,
        "parameters" : { }
      },
      "skuService" : {
        "type" : "serviceBean",
        "name" : "skuService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "skuService",
        "parameterName" : null,
        "parameters" : { }
      },
      "taskDAO" : {
        "type" : "javaBean",
        "name" : "taskDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "taskHelper" : {
        "type" : "javaBean",
        "name" : "taskHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "tradeAgreementService" : {
        "type" : "serviceBean",
        "name" : "tradeAgreementService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "tradeAgreementService",
        "parameterName" : null,
        "parameters" : { }
      },
      "vendorService" : {
        "type" : "serviceBean",
        "name" : "vendorService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "vendorService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.innerworkings" ]
  },
  "functionType" : "routing",
  "inputs" : { },
  "result" : null,
  "active" : true,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "innerworkingsPolicy",
    "refKey" : "6eca2f751c7092f4f789863252fbd7e1",
    "displayName" : "innerworkingsPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "innerworkingsPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1507818693457,
      "createUser" : "Admin Innerworkings",
      "updateTs" : 1559935221167,
      "updateUser" : "Tony Costanzo"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "3ca01532-b431-4906-a351-25394a7b5546",
    "allowedPackages" : {
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysyncfleetpride" : "com.eis.oms.inventory.sync.fleetpride",
      "comeisomsinventorysyncv2" : "com.eis.oms.inventory.sync.v2",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1integrationmarketplace" : "com.eis.ssit.api.v1.integration.marketplace",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparsers" : "com.eis.ssit.parsers",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersproductskufleetpride" : "com.eis.ssit.parsers.productsku.fleetpride",
      "comeisssitparserssite" : "com.eis.ssit.parsers.site",
      "comeisssitparsersskucrossreference" : "com.eis.ssit.parsers.skucrossreference",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.innerworkings" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "salesOrderImport",
    "refId" : "2c0d2a52-3efb-4446-9084-b9c95308b159",
    "refKey" : "1c5dc0ba5e3f8e75318dfee7f3321c71",
    "displayName" : "salesOrderImport",
    "dataDomain" : "com.innerworkings",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "innerworkingsPolicy",
    "refId" : "3ca01532-b431-4906-a351-25394a7b5546",
    "refKey" : "6eca2f751c7092f4f789863252fbd7e1",
    "displayName" : "innerworkingsPolicy",
    "dataDomain" : "com.innerworkings",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "admin@innerworkings.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.innerworkings" ]
}