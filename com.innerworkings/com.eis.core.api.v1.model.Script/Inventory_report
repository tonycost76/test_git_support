{
  "refName" : "Inventory_report",
  "refKey" : "2f212df295bf8410ce289004c326e25c",
  "displayName" : "Inventory_report",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1518732877932,
    "createUser" : "Admin Innerworkings",
    "updateTs" : 1518792482930,
    "updateUser" : "Admin Innerworkings"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "b6052df2-22dc-40a2-96b7-fac43b31ed21",
  "script" : "\n// IMPORTANT: This is a generated file; do not make any changes because they will be overwritten with no warning.\n// Generated from the script with id 'fac7feef-1968-4d8d-96d0-680ba1166561'\n\nclient = null; // Some scripts use this to represent the value of the client option\nclients = null; // ... and others use this.\n                                               \n\nvar LOG = org.slf4j.LoggerFactory.getLogger(\"inventoryReport:\");\n\nvar MAX_NUM_POOLS_EXPECTED = 100;\n\nfunction isBlank(value) {\n    return (typeof value === 'undefined' || value === null || value === undefined || value === '' || value === '?');\n}\n\nfunction isNotBlank(value) {\n    return isBlank(value) == false;\n}\n\nfunction buildQueryFromCollection(fieldName, javaUtilCollectionObj) {\n    if (javaUtilCollectionObj == null) {\n        return \"\";\n    }\n    else {\n        return fieldName + \":^\" + javaUtilCollectionObj.toString().replace(/\\s/g, \"\"); // TODO: Must the join char not be \",\"?\n    }\n}\n\nfunction dateDiffInDays(firstDate, secondDate) {\n    var millisInOneDay=1000*60*60*24;\n\n    return java.lang.Math.round((firstDate.getTime()-secondDate.getTime())/millisInOneDay);\n}\n\nfunction getSkus(clientList, skuIdentifierList) {\n\n    if (isBlank(skuIdentifierList)) {\n        throw \"skuIdentifierList can't be empty to get the list of products\"\n    }\n\n    var clientQuery = buildQueryFromCollection(\"dataDomain\", clientList);\n\n    var prodIdQuery = buildQueryFromCollection(\"productIdentifier\", skuIdentifierList);\n\n    var query;\n\n    if (isNotBlank(clientQuery) && isNotBlank(prodIdQuery)) {\n        query = clientQuery + \"&&\" + prodIdQuery;\n    }\n    else if (isNotBlank(prodIdQuery)) {\n        query = prodIdQuery;\n    }\n    else if (isNotBlank(clientQuery)) {\n        query = clientQuery;\n    }\n\n    var skuFields = new java.util.ArrayList();\n    skuFields.add(\"description\");\n    skuFields.add(\"productIdentifier\");\n\n    var skus = skuService.getList(0,MAX_NUM_POOLS_EXPECTED, query, skuFields, null);\n\n    return skus;\n}\n\nvar isValid = true;\nvar currentDate = null;\n\nif(shelfLife){\n    currentDate = new Date();\n}\n\nvar clientList = clients;\nvar poolIds = new java.util.ArrayList();\n\nvar q1 = buildQueryFromCollection(\"dataDomain\", clientList);\n\nif (isNotBlank(poolPrefix)) {\n    var poolQuery = \"(refName:\" + poolPrefix + \"%||displayName:\" + poolPrefix + \"%)\";\n\n    if (isNotBlank(q1)) {\n      q1 = q1 + \"&&\" + poolQuery;\n    }\n    else {\n      q1 = poolQuery;\n    }\n}\n\nif (!isBlank(facility)) {\n    var siteQuery = \"refName:\" + facility;\n    var clientQuery = buildQueryFromCollection(\"dataDomain\", clientList);\n\n    if (isNotBlank(clientQuery)) {\n        siteQuery = siteQuery + \"&&\" + clientQuery;\n    }\n\n    var sites = siteService.getList(0, 1, siteQuery, java.util.Collections.singletonList(\"id\"), null);\n\n    if (sites == null || sites.isEmpty()) {\n        isValid = false;\n        throw \"No facility (site) found with refName:\" + facility;\n    }\n\n    var site = sites.get(0);\n    var facilityId = site.getId();\n\n    if (isNotBlank(q1)) {\n        q1 = q1 + \"&&siteId:\" + facilityId;\n    }\n    else {\n        q1 = \"siteId:\" + facilityId;\n    }\n}\n\nvar pools = inventoryPoolService.getList(0, MAX_NUM_POOLS_EXPECTED, q1, null, null);\n\nif (!isBlank(pools) && !pools.isEmpty()) {\n    for (var j = 0; j < pools.size(); j++) {\n        poolIds.add(pools.get(j).getId());\n    }\n}\nelse {\n    isValid = false;\n    throw \"No suitable pools found\";\n}\n\nif (isValid) {\n\n    var inventoryPoolEntryFields = new java.util.ArrayList();\n    inventoryPoolEntryFields.add(\"dataDomain\");\n    inventoryPoolEntryFields.add(\"refName\");\n    inventoryPoolEntryFields.add(\"skuId\");\n    inventoryPoolEntryFields.add(\"availableQty\");\n    inventoryPoolEntryFields.add(\"reservedQty\");\n    inventoryPoolEntryFields.add(\"holdQty\");\n    inventoryPoolEntryFields.add(\"lots.expirationDate\");\n    inventoryPoolEntryFields.add(\"lots.availableQty\");\n    inventoryPoolEntryFields.add(\"lots.reservedQty\");\n    inventoryPoolEntryFields.add(\"lots.holdQty\");\n    inventoryPoolEntryFields.add(\"parentInventoryPoolId\");\n\n    var inventoryPoolEntrySort = new java.util.ArrayList();\n    inventoryPoolEntrySort.add(new com.eis.core.api.v1.model.SortParameter(\"productIdentifier\", com.eis.core.api.v1.model.SortParameter.SortOrderEnum.ASC));\n\n    var q2 = buildQueryFromCollection(\"dataDomain\", clientList);\n\n    if (!isBlank(poolIds) && !poolIds.isEmpty()) {\n        var poolIdsQuery = buildQueryFromCollection(\"parentInventoryPoolId\", poolIds);\n        if (isNotBlank(q2) && isNotBlank(poolIds)) {\n            q2 = q2 + \"&&\" + poolIdsQuery;\n        }\n        else if (isNotBlank(poolIds)) {\n            q2 = poolIdsQuery;\n        }\n    }\n\n    var output1 = inventoryPoolEntryService.getList(0,-1,q2, inventoryPoolEntryFields, inventoryPoolEntrySort);\n\n    var output = new java.util.ArrayList();\n    for(var z=0; z < output1.size() ;z++){\n\n        var o = output1.get(z);\n\n        if(o.getLots().size()>0){\n\n            for(y=0;y<o.getLots().size();y++){\n                var tempMap = new java.util.LinkedHashMap();\n                tempMap.put(\"dataDomain\",o.getDataDomain());\n                tempMap.put(\"skuId\",o.getSkuId());\n                tempMap.put(\"parentInventoryPoolId\",o.getParentInventoryPoolId());\n                tempMap.put(\"lots.expirationDate\",o.getLots().get(y).getExpirationDate());\n                tempMap.put(\"lots.availableQty\",o.getLots().get(y).getAvailableQty());\n                tempMap.put(\"lots.reservedQty\",o.getLots().get(y).getReservedQty());\n                tempMap.put(\"lots.holdQty\",o.getLots().get(y).getHoldQty());\n                tempMap.put(\"refName\",o.getRefName());\n                output.add(tempMap);\n            }\n        }else{\n            var tempMap1 = new java.util.LinkedHashMap();\n            tempMap1.put(\"dataDomain\",o.getDataDomain());\n            tempMap1.put(\"skuId\",o.getSkuId());\n            tempMap1.put(\"parentInventoryPoolId\",o.getParentInventoryPoolId());\n            tempMap1.put(\"lots.availableQty\",o.getAvailableQty());\n            tempMap1.put(\"lots.reservedQty\",o.getReservedQty());\n            tempMap1.put(\"lots.holdQty\",o.getHoldQty());\n            tempMap1.put(\"refName\",o.getRefName());\n            output.add(tempMap1);\n        }\n    }\n\n    var skuQueryList = new java.util.ArrayList();\n    var skuMap = new java.util.HashMap();\n\n    for(var b=0; b < output.size() ;b++){\n\n\t//Add shelfLife if requested\n\tif(shelfLife){\n            var expDate = output.get(b).get(\"lots.expirationDate\");\n            if(!isBlank(expDate)){\n\n\t\tvar days = dateDiffInDays(expDate,currentDate);\n\n\t\toutput.get(b).put(\"shelfLife\",days);\n            }\n        }\n\n\n\tif(!isBlank(output.get(b).get(\"skuId\"))){\n\n            if(!skuQueryList.contains(output.get(b).get(\"skuId\")) && !skuMap.containsKey(output.get(b).get(\"skuId\"))){\n\t\tskuQueryList.add(output.get(b).get(\"skuId\"));\n            }\n\n            if(skuQueryList.size() == MAX_NUM_POOLS_EXPECTED || b == output.size()-1){\n\n\t\tvar skus = getSkus(clientList, skuQueryList);\n\n\t\tfor(var p =0 ; p< skus.size(); p++){\n                    var sku =  skus.get(p);\n\n                    if(!isBlank(sku.getProductIdentifier()) && !isBlank(sku.getDescription())){\n\t\t\tskuMap.put(sku.getProductIdentifier(),sku.getDescription());\n                    }\n\t\t}\n\n\t\tskuQueryList.clear();\n            }\n\t}\n    }\n\n    for(var d=0; d < output.size() ;d++){\n\tif(!isBlank(output.get(d).get(\"skuId\"))){\n            if(skuMap.containsKey(output.get(d).get(\"skuId\"))){\n\t\toutput.get(d).put(\"description\",skuMap.get(output.get(d).get(\"skuId\")));\n            }\n\t}\n    }\n}\n                     ",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "inventoryReportScriptTypeForClientUse",
    "refKey" : "ed00ea0f9b86fe6f8b8ee8563a0a2c75",
    "displayName" : "inventoryReportScriptType For Client Use",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "inventoryReportScriptType" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : null,
      "createUser" : null,
      "updateTs" : 1508876112579,
      "updateUser" : "Admin Admin"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "637ddead-42f3-428a-a3ec-37e38181348e",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "facility" : {
          "id" : null,
          "refName" : "facility",
          "type" : "Select",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : "correlation",
          "selectValuesKey" : "facilitiesForReports",
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "Facility (represented by the matching Site)",
          "description" : null
        },
        "poolPrefix" : {
          "id" : null,
          "refName" : "poolPrefix",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "A prefix of the pool's refName",
          "description" : null
        },
        "shelfLife" : {
          "id" : null,
          "refName" : "shelfLife",
          "type" : "Boolean",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "shelfLife",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : {
        "output" : {
          "id" : null,
          "refName" : "output",
          "type" : "Object",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "Output",
          "description" : null
        }
      }
    },
    "scriptContextObjects" : {
      "inventoryPoolEntryService" : {
        "type" : "serviceBean",
        "name" : "inventoryPoolEntryService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolEntryService",
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryPoolService" : {
        "type" : "serviceBean",
        "name" : "inventoryPoolService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolService",
        "parameterName" : null,
        "parameters" : { }
      },
      "productService" : {
        "type" : "serviceBean",
        "name" : "productService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "productService",
        "parameterName" : null,
        "parameters" : { }
      },
      "siteService" : {
        "type" : "serviceBean",
        "name" : "siteService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "siteService",
        "parameterName" : null,
        "parameters" : { }
      },
      "skuService" : {
        "type" : "serviceBean",
        "name" : "skuService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "skuService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.saddlecreek", "com.thk", "com.zurvita", "com.blenders", "com.innerworkings", "com.testprowares24", "com.testprowares25", "com.testprowares26", "com.testprowares27", "com.testprowares28", "com.testprowares30", "com.testprowares31", "com.testprowares32", "com.testprowares33", "com.testprowares50", "com.testprowares51", "com.testprowares66", "com.testprowares67", "com.testprowares68", "com.testprowares69", "com.testprowares70", "com.exostar", "com.reshoevn8r" ]
  },
  "functionType" : "reportData",
  "inputs" : { },
  "result" : null,
  "active" : false,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "innerworkingsPolicy",
    "refKey" : "6eca2f751c7092f4f789863252fbd7e1",
    "displayName" : "innerworkingsPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "innerworkingsPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1507818693457,
      "createUser" : "Admin Innerworkings",
      "updateTs" : 1559935221167,
      "updateUser" : "Tony Costanzo"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "3ca01532-b431-4906-a351-25394a7b5546",
    "allowedPackages" : {
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysyncfleetpride" : "com.eis.oms.inventory.sync.fleetpride",
      "comeisomsinventorysyncv2" : "com.eis.oms.inventory.sync.v2",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1integrationmarketplace" : "com.eis.ssit.api.v1.integration.marketplace",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparsers" : "com.eis.ssit.parsers",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersproductskufleetpride" : "com.eis.ssit.parsers.productsku.fleetpride",
      "comeisssitparserssite" : "com.eis.ssit.parsers.site",
      "comeisssitparsersskucrossreference" : "com.eis.ssit.parsers.skucrossreference",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.innerworkings" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "inventoryReportScriptTypeForClientUse",
    "refId" : "637ddead-42f3-428a-a3ec-37e38181348e",
    "refKey" : "ed00ea0f9b86fe6f8b8ee8563a0a2c75",
    "displayName" : "inventoryReportScriptType For Client Use",
    "dataDomain" : "com.saddlecreek",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "innerworkingsPolicy",
    "refId" : "3ca01532-b431-4906-a351-25394a7b5546",
    "refKey" : "6eca2f751c7092f4f789863252fbd7e1",
    "displayName" : "innerworkingsPolicy",
    "dataDomain" : "com.innerworkings",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "admin@innerworkings.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.innerworkings" ]
}