{
  "refName" : "syncSkuCrossReferences",
  "refKey" : "4b923eeff06f89c65946ae064346ad0b",
  "displayName" : "syncSkuCrossReferences",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1542050900024,
    "createUser" : "Tony Costanzo",
    "updateTs" : 1543285209630,
    "updateUser" : "Tony Costanzo"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "create" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "4840b7d7-3b68-47c0-a775-963886a6d2b4",
  "script" : "\r\nvar LOG = org.slf4j.LoggerFactory.getLogger(\"syncSkuCrossReferences script:\");\r\n\r\nLOG.info(\">>>>>>> syncSkuCrossReferences Script STARTING -> received file name: \" + header_CamelFileName);\r\n\r\n//LOG.info(\">>>>>>> syncSkuCrossReferences received LoadType: \" + header_LoadType);\r\n\r\nvar manualResync = false; //Used when cleaning up the existing collections and freshly loading a full sync. In this case we want to avoid doing the comparison since nothing will exist in the proposed collections.\r\n\r\nvar itemInputStream = body.getInputStream();\r\n\r\n//NOTE - Cleanup must happen first else Mongo will not bulk insert records!\r\n// Caution, this WILL remove existing collections by the names specified in xCollectionOverride below\r\nvar cleanUpBeforeRun = java.lang.Boolean.TRUE;\r\nvar byPassZip = java.lang.Boolean.TRUE; //Defaults to TRUE for Deltas which are sent as XML -\r\n// needs to be updated to FALSE for full feeds\r\n\r\nvar fastForward = java.lang.Boolean.FALSE; //For skipping ahead 'startFrom' number of lines in the input file\r\nvar startFrom = 0;\r\n\r\nvar isFullSync = java.lang.Boolean.TRUE; //Allows us to deactivate Products/SKUs that are missing TRUE = deactivate, FALSE = leave alone\r\nvar isDryRun = java.lang.Boolean.FALSE; //TRUE - Don't insert/update during comparison, only report what would happpen\r\n\r\nvar fileName = header_CamelFileName;\r\n\r\nvar skuCrossReferenceCollectionOverride = \"skuCrossReferenceProposed\";\r\n\r\nvar dataDomain = \"com.innerworkings\";\r\nvar accountRefName = \"SaddleCreek-Account\";\r\n\r\n\r\n\r\n//var FullLoad = (new RegExp('SearsSTIBOFullItemDownload')).test(fileName);\r\n//var DeltaLoad = (new RegExp('^(DELTA|delta|Delta).*\\.xml')).test(fileName);\r\nvar FullLoad = true;\r\nvar DeltaLoad = false;\r\nvar parseThenCompare = true;\r\nvar mode;\r\n\r\nif(FullLoad && !DeltaLoad) {\r\n\r\n    LOG.info(\">>>>>>> masterItemDownloadCombined is a FULL SYNC LOAD\");\r\n\r\n    byPassZip = java.lang.Boolean.TRUE; //Full feeds come zipped\r\n    mode = \"FULL SYNC\";\r\n\r\n} else if(!FullLoad && DeltaLoad) {\r\n\r\n    LOG.info(\">>>>>>> masterItemDownloadCombined is a DELTA LOAD\");\r\n    mode = \"DELTA SYNC\";\r\n    byPassZip = java.lang.Boolean.TRUE;\r\n\r\n} else {\r\n\r\n    LOG.error(\">>>>>>> masterItemDownloadCombined file name does not match excepted pattern for full or delta load! ABORTING!\");\r\n    parseThenCompare = false;\r\n\r\n}\r\n\r\nvar skuCrossReferenceArgs = new com.eis.ssit.parsers.skucrossreference.SkuCrossReferenceArgs();\r\n\r\n\r\n\r\n\r\nvar account = accountService.getByRefName(accountRefName, dataDomain);\r\n\r\n\r\nif(parseThenCompare) {\r\n\r\n    LOG.info(\">>>>>>> Starting syncSkuCrossReferences...MODE: \" + mode);\r\n\r\n    var producerFuture = bulkSkuCrossReferenceHelper.createBulkInsertParserProducerThread(cleanUpBeforeRun, fileName, itemInputStream, byPassZip, fastForward, startFrom,\r\n        dataDomain, account, skuCrossReferenceCollectionOverride,\"fleetprideJSONSkuCrossReferenceParser\",skuCrossReferenceArgs);\r\n\r\n    LOG.info(\">>>>>>> Checking Producer Future Status -> isDone? \" + producerFuture.isDone());\r\n\r\n    var skuCrossReferenceConsumerFuture = bulkSkuCrossReferenceHelper.createBulkInsertSkuCrossReferenceConsumerThread(skuCrossReferenceCollectionOverride);\r\n\r\n\r\n    if (skuCrossReferenceConsumerFuture !== null) {\r\n\r\n        LOG.info(\">>>>>>> Created SKU Consumer with isDone status: \" + skuCrossReferenceConsumerFuture.isDone());\r\n    }\r\n    \r\n    //Tell the ThreadPoolTaskExecutor to wait until the producer finishes its workload\r\n    var producerRes = producerFuture.get();\r\n\r\n    var skuCrossReferenceRes = skuCrossReferenceConsumerFuture.get();\r\n\r\n\r\n    LOG.info(\">>>>>>> syncSkuCrossReferences AFTER Future.get() -> Attempting to create report! \");\r\n\r\n    if (producerRes !== null && skuCrossReferenceRes !== null) {\r\n\r\n        LOG.info(\"Combining reports...\");\r\n\r\n        var skuCrossReferenceResTotalQueueRead = java.lang.Float.valueOf(skuCrossReferenceRes.getTotalQueueReadTime());\r\n\r\n        skuCrossReferenceRes.setTotalQueueReadTimeAgg(skuCrossReferenceResTotalQueueRead);\r\n\r\n        producerRes.setSkuCrossReferenceConsumerResults(skuCrossReferenceRes);\r\n\r\n        LOG.info(\"Printing report...\");\r\n        producerRes.printReport();\r\n        \r\n        var reviewSkuCrossReferencesTask =  producerRes.generateTaskForManualReviewSkuCrossReference();\r\n        if(reviewSkuCrossReferencesTask !== null) {\r\n            taskService.save(reviewSkuCrossReferencesTask);\r\n        }\r\n        \r\n        var reportNotification = producerRes.generateNotificationFromReport();\r\n        if( reportNotification !== null) {\r\n            notificationService.save(reportNotification);\r\n        }\r\n\r\n        LOG.warn(\">>>>>>> syncSkuCrossReferences END OF PARSING\");\r\n\r\n     \r\n        var totalSKUsInserted = skuCrossReferenceRes.getTotalInserted();\r\n\r\n        LOG.warn(\">>>>>>> syncSkuCrossReferences Comparing counts of load result to database...\");\r\n\r\n        var existingSkuCrossReferenceCount = bulkSkuCrossReferenceHelper.getCollectionDocCount(\"skuCrossReference\");\r\n        var proposedSkuCrossReferenceCount = bulkSkuCrossReferenceHelper.getCollectionDocCount(\"skuCrossReferenceProposed\");\r\n\r\n\r\n        LOG.info(\">>>>>>> syncSkuCrossReferences Database Counts: PROPOSED COUNTS\\nSKU CROSS REFERENCE Proposed: \" + proposedSkuCrossReferenceCount +\r\n\t\t \"\\nEXISTING COUNTS\\nSKU CROSS REFERENCE Existing: \"+ existingSkuCrossReferenceCount);\r\n\r\n        if(!manualResync) {\r\n\r\n            if ((totalSKUsInserted !== proposedSkuCrossReferenceCount)) {\r\n                //We shouldn't proceed with the comparison here, something went wrong\r\n\r\n                LOG.error(\">>>>>>> syncSkuCrossReferences Parsing counts do not match database counts on proposed tables: \" +\r\n                    \"\\nSKUs Parsed: \" + totalSKUsInserted + \" | DB Count SKUs: \" + proposedSkuCrossReferenceCount);\r\n\r\n                //TODO - some exception handling here\r\n                //Check if the difference is within some margin of error that is deemed acceptable then continue with compare?\r\n            }\r\n            else {\r\n                //Counts in DB match parsing counts, continue with comparison\r\n                LOG.warn(\">>>>>>> syncSkuCrossReferences Count verification passed, Beginning DIFF ALGORITHM to compare proposed with existing\");\r\n\r\n                LOG.info(\">>>>>>> itemCompareAndUpdate START OF SCRIPT -> Will compare contents of \" +\r\n                    \"skuCrossReferenceProposed MongoDB collections and either insert, update, or deactivate the existing \" +\r\n                    \"products and skuCrossReferences in the live tables\");\r\n\r\n\r\n                // in the delta but there in the DB\r\n                var batchSize = 10000; //How many records to compare per batch\r\n                var dataDomain = \"com.innerworkings\";\r\n\r\n                var comparisonResults = bulkSkuCrossReferenceHelper.readProposedAndExisting(dataDomain, isFullSync, isDryRun, batchSize, skuCrossReferenceArgs);\r\n                \r\n                var crossReferenceSyncTask = comparisonResults.generateTaskSkuCrossReferenceSyncErrors();\r\n                if(crossReferenceSyncTask !== null) {\r\n                   taskService.save(crossReferenceSyncTask); \r\n                }\r\n\r\n                //Print out results of comparison\r\n                LOG.info(comparisonResults.toString());\r\n\r\n                LOG.warn(\">>>>>>> itemCompareAndUpdate END OF SCRIPT\");\r\n            }\r\n        } else {\r\n            LOG.warn(\">>>>>>> itemCompareAndUpdate Manual Re-sync, Skipping comparison! - END OF SCRIPT\");\r\n        }\r\n    }\r\n} else {\r\n    throw new java.lang.Exception(\"Invalid file name format: \" + header_CamelFileName);\r\n}",
  "compensateScript" : null,
  "language" : null,
  "type" : {
    "refName" : "syncSkuCrossReferences",
    "refKey" : "4b923eeff06f89c65946ae064346ad0b",
    "displayName" : "syncSkuCrossReferences",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "syncSkuCrossReferences" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1542051273305,
      "createUser" : "Tony Costanzo",
      "updateTs" : 1559249859600,
      "updateUser" : "Tony Costanzo"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "b907da89-fe88-4af4-9093-3b41ef40176b",
    "inputs" : {
      "name" : null,
      "attributes" : {
        "FileSystemEntryId" : {
          "id" : null,
          "refName" : "FileSystemEntryId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "FileSystemEntryId",
          "description" : null
        },
        "body" : {
          "id" : null,
          "refName" : "body",
          "type" : "Object",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : true,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "body",
          "description" : null
        },
        "header_CamelFileName" : {
          "id" : null,
          "refName" : "header_CamelFileName",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : true,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_CamelFileName",
          "description" : null
        },
        "header_FileSystemEntryId" : {
          "id" : null,
          "refName" : "header_FileSystemEntryId",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : false,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_FileSystemEntryId",
          "description" : null
        },
        "header_LoadType" : {
          "id" : null,
          "refName" : "header_LoadType",
          "type" : "String",
          "value" : null,
          "className" : null,
          "selectValues" : [ ],
          "selectValuesType" : null,
          "selectValuesKey" : null,
          "defaultValue" : null,
          "required" : true,
          "inheritable" : false,
          "hidden" : false,
          "displayOnFrontend" : true,
          "label" : "header_LoadType",
          "description" : null
        }
      }
    },
    "outputs" : {
      "name" : null,
      "attributes" : { }
    },
    "scriptContextObjects" : {
      "FileSystemEntryId" : {
        "type" : "scriptInputVariable",
        "name" : "FileSystemEntryId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "FileSystemEntryId",
        "parameters" : { }
      },
      "accountService" : {
        "type" : "serviceBean",
        "name" : "accountService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "accountService",
        "parameterName" : null,
        "parameters" : { }
      },
      "body" : {
        "type" : "scriptInputVariable",
        "name" : "body",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "body",
        "parameters" : { }
      },
      "bulkInventoryPoolEntryHelperV2" : {
        "type" : "javaBean",
        "name" : "bulkInventoryPoolEntryHelperV2",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "bulkProductSkuHelper" : {
        "type" : "javaBean",
        "name" : "bulkProductSkuHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "bulkSkuCrossReferenceHelper" : {
        "type" : "javaBean",
        "name" : "bulkSkuCrossReferenceHelper",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "catalogService" : {
        "type" : "serviceBean",
        "name" : "catalogService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "catalogService",
        "parameterName" : null,
        "parameters" : { }
      },
      "header_CamelFileName" : {
        "type" : "scriptInputVariable",
        "name" : "header_CamelFileName",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_CamelFileName",
        "parameters" : { }
      },
      "header_FileSystemEntryId" : {
        "type" : "scriptInputVariable",
        "name" : "header_FileSystemEntryId",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_FileSystemEntryId",
        "parameters" : { }
      },
      "header_LoadType" : {
        "type" : "scriptInputVariable",
        "name" : "header_LoadType",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : "header_LoadType",
        "parameters" : { }
      },
      "inventoryPoolDAO" : {
        "type" : "daoBean",
        "name" : "inventoryPoolDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "inventoryPoolDAO",
        "parameterName" : null,
        "parameters" : { }
      },
      "inventoryPoolEntryDAO" : {
        "type" : "javaBean",
        "name" : "inventoryPoolEntryDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "notificationService" : {
        "type" : "serviceBean",
        "name" : "notificationService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "notificationService",
        "parameterName" : null,
        "parameters" : { }
      },
      "organizationDAO" : {
        "type" : "javaBean",
        "name" : "organizationDAO",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : null,
        "parameterName" : null,
        "parameters" : { }
      },
      "skuService" : {
        "type" : "serviceBean",
        "name" : "skuService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "skuService",
        "parameterName" : null,
        "parameters" : { }
      },
      "taskService" : {
        "type" : "serviceBean",
        "name" : "taskService",
        "methodName" : null,
        "modelName" : null,
        "serviceName" : "taskService",
        "parameterName" : null,
        "parameters" : { }
      }
    },
    "type" : "GENERIC",
    "eventType" : null,
    "scheduledActionTriggerRef" : null,
    "dataDomains" : [ "com.innerworkings" ]
  },
  "functionType" : "routing",
  "inputs" : { },
  "result" : null,
  "active" : false,
  "blacklisted" : false,
  "blacklistReason" : null,
  "scriptTracer" : null,
  "scriptSecurityPolicy" : {
    "refName" : "innerworkingsPolicy",
    "refKey" : "6eca2f751c7092f4f789863252fbd7e1",
    "displayName" : "innerworkingsPolicy",
    "schemaVersion" : null,
    "version" : null,
    "current" : true,
    "txId" : null,
    "keywords" : [ "innerworkingsPolicy" ],
    "tags" : [ ],
    "hashSum" : null,
    "auditInfo" : {
      "creationTs" : 1507818693457,
      "createUser" : "Admin Innerworkings",
      "updateTs" : 1559935221167,
      "updateUser" : "Tony Costanzo"
    },
    "uiactions" : [ ],
    "forced" : false,
    "objRef" : false,
    "doNotAudit" : false,
    "logicallyDeleted" : false,
    "create" : false,
    "violationsSet" : null,
    "dynAttributes" : { },
    "internal" : false,
    "referenceData" : [ ],
    "id" : "3ca01532-b431-4906-a351-25394a7b5546",
    "allowedPackages" : {
      "aucombytecodeopencsv" : "au.com.bytecode.opencsv",
      "comcsvreader" : "com.csvreader",
      "comctcwstxsr" : "com.ctc.wstx.sr",
      "comctcwstxstax" : "com.ctc.wstx.stax",
      "comeisb2bmbapiv1model" : "com.eis.b2bmb.api.v1.model",
      "comeisb2bmbapiv1servicesimpl" : "com.eis.b2bmb.api.v1.services.impl",
      "comeisb2bmbutil" : "com.eis.b2bmb.util",
      "comeisbasegrammarlistenerquery" : "com.eis.base.grammar.listener.query",
      "comeisbasetransaction" : "com.eis.base.transaction",
      "comeisblobstoregridfs" : "com.eis.blobstore.gridfs",
      "comeiscoreapiv1daoimplsprngmongo" : "com.eis.core.api.v1.dao.impl.sprngmongo",
      "comeiscoreapiv1exception" : "com.eis.core.api.v1.exception",
      "comeiscoreapiv1model" : "com.eis.core.api.v1.model",
      "comeiscoreapiv1serviceimpl" : "com.eis.core.api.v1.service.impl",
      "comeiscorecommon" : "com.eis.core.common",
      "comeiscrypto" : "com.eis.crypto",
      "comeisextsvrsshipstationapiv1util" : "com.eis.extsvrs.shipstation.api.v1.util",
      "comeisjson" : "com.eis.json",
      "comeisomsinventoryallocationEngineactions" : "com.eis.oms.inventory.allocationEngine.actions",
      "comeisomsinventoryallocationEngineengine" : "com.eis.oms.inventory.allocationEngine.engine",
      "comeisomsinventorysyncfleetpride" : "com.eis.oms.inventory.sync.fleetpride",
      "comeisomsinventorysyncv2" : "com.eis.oms.inventory.sync.v2",
      "comeisomspricingpricingEnginemodel" : "com.eis.oms.pricing.pricingEngine.model",
      "comeisomspricingpricingEngineservices" : "com.eis.oms.pricing.pricingEngine.services",
      "comeissecurityjacksonFilters" : "com.eis.security.jacksonFilters",
      "comeissecuritymultitenancymodel" : "com.eis.security.multitenancy.model",
      "comeissecuritymultitenancyshiro" : "com.eis.security.multitenancy.shiro",
      "comeisssitapiv1allocengine" : "com.eis.ssit.api.v1.allocengine",
      "comeisssitapiv1daosprngmongo" : "com.eis.ssit.api.v1.dao.sprngmongo",
      "comeisssitapiv1integrationmarketplace" : "com.eis.ssit.api.v1.integration.marketplace",
      "comeisssitapiv1model" : "com.eis.ssit.api.v1.model",
      "comeisssitapiv1services" : "com.eis.ssit.api.v1.services",
      "comeisssitapiv1util" : "com.eis.ssit.api.v1.util",
      "comeisssitparsers" : "com.eis.ssit.parsers",
      "comeisssitparsersproductsku" : "com.eis.ssit.parsers.productsku",
      "comeisssitparsersproductskufleetpride" : "com.eis.ssit.parsers.productsku.fleetpride",
      "comeisssitparserssite" : "com.eis.ssit.parsers.site",
      "comeisssitparsersskucrossreference" : "com.eis.ssit.parsers.skucrossreference",
      "comeisutil" : "com.eis.util",
      "comfasterxmljacksonannotation" : "com.fasterxml.jackson.annotation",
      "comfasterxmljacksonannotationJsonInclude" : "com.fasterxml.jackson.annotation.JsonInclude",
      "comfasterxmljacksonannotationJsonIncludeInclude" : "com.fasterxml.jackson.annotation.JsonInclude.Include",
      "comfasterxmljacksondatabind" : "com.fasterxml.jackson.databind",
      "comfasterxmljacksondatabindserimpl" : "com.fasterxml.jackson.databind.ser.impl",
      "comgooglecommonbase" : "com.google.common.base",
      "comgooglecommoncollect" : "com.google.common.collect",
      "comgooglegson" : "com.google.gson",
      "comgooglegsonstream" : "com.google.gson.stream",
      "comhazelcast" : "com.hazelcast",
      "commongodb" : "com.mongodb",
      "commongodbgridfs" : "com.mongodb.gridfs",
      "comopencsv" : "com.opencsv",
      "comsunorgapachexercesinternaljaxp" : "com.sun.org.apache.xerces.internal.jaxp",
      "comsunproxy" : "com.sun.proxy",
      "javaio" : "java.io",
      "javalang" : "java.lang",
      "javalangreflect" : "java.lang.reflect",
      "javamath" : "java.math",
      "javanet" : "java.net",
      "javatext" : "java.text",
      "javatime" : "java.time",
      "javatimeformat" : "java.time.format",
      "javautil" : "java.util",
      "javautilzip" : "java.util.zip",
      "javaxwsrsclient" : "javax.ws.rs.client",
      "javaxwsrscore" : "javax.ws.rs.core",
      "javaxxmlbind" : "javax.xml.bind",
      "javaxxmlparsers" : "javax.xml.parsers",
      "javaxxmlstream" : "javax.xml.stream",
      "javaxxmltransformstream" : "javax.xml.transform.stream",
      "orgapachecamelconverterstream" : "org.apache.camel.converter.stream",
      "orgapachecommonsbeanutils" : "org.apache.commons.beanutils",
      "orgapachecommonsbeanutilsconverters" : "org.apache.commons.beanutils.converters",
      "orgapachecommonscollections4" : "org.apache.commons.collections4",
      "orgapachecommonsio" : "org.apache.commons.io",
      "orgapachecommonslang" : "org.apache.commons.lang",
      "orgapachecommonslang3" : "org.apache.commons.lang3",
      "orgapachecxfjaxrsclient" : "org.apache.cxf.jaxrs.client",
      "orgapachecxfjaxrsimpl" : "org.apache.cxf.jaxrs.impl",
      "orgapachecxfmessage" : "org.apache.cxf.message",
      "orgapacheloggingslf4j" : "org.apache.logging.slf4j",
      "orgapacheshiro" : "org.apache.shiro",
      "orgapachevelocity" : "org.apache.velocity",
      "orgcodehausjacksonmapserimpl" : "org.codehaus.jackson.map.ser.impl",
      "orgjodatime" : "org.joda.time",
      "orgjodatimeformat" : "org.joda.time.format",
      "orgmozillajavascript" : "org.mozilla.javascript",
      "orgslf4j" : "org.slf4j",
      "orgslf4jLoggerFactory" : "org.slf4j.LoggerFactory",
      "orgslf4jimpl" : "org.slf4j.impl",
      "orgspringframeworkbeans" : "org.springframework.beans",
      "sunnetwwwprotocolhttp" : "sun.net.www.protocol.http",
      "sunutilcalendar" : "sun.util.calendar"
    },
    "allowedClasses" : { },
    "allowedMethods" : { },
    "permissionsNeeded" : { },
    "dataDomains" : [ "com.innerworkings" ]
  },
  "scriptTypeObjRef" : {
    "refName" : "syncSkuCrossReferences",
    "refId" : "b907da89-fe88-4af4-9093-3b41ef40176b",
    "refKey" : "4b923eeff06f89c65946ae064346ad0b",
    "displayName" : "syncSkuCrossReferences",
    "dataDomain" : "com.innerworkings",
    "type" : "com.eis.core.api.v1.model.ScriptType",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "scriptSecurityPolicyObjRef" : {
    "refName" : "innerworkingsPolicy",
    "refId" : "3ca01532-b431-4906-a351-25394a7b5546",
    "refKey" : "6eca2f751c7092f4f789863252fbd7e1",
    "displayName" : "innerworkingsPolicy",
    "dataDomain" : "com.innerworkings",
    "type" : "com.eis.core.api.v1.model.ScriptSecurityPolicy",
    "nullable" : false,
    "internal" : false,
    "parentId" : null,
    "parentType" : null
  },
  "runAsId" : "admin@innerworkings.com",
  "runAsDefaultDataDomain" : null,
  "dataDomains" : [ "com.innerworkings" ]
}