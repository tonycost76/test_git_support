{
  "refName" : "inventoryreport",
  "refKey" : "9a584f1c0c6b6e06956aae3fc2a4c3b6",
  "displayName" : "Inventory_report",
  "schemaVersion" : null,
  "version" : null,
  "current" : true,
  "txId" : null,
  "keywords" : [ "Inventory_report" ],
  "tags" : [ ],
  "hashSum" : null,
  "auditInfo" : {
    "creationTs" : 1518733145301,
    "createUser" : "Admin Innerworkings",
    "updateTs" : 1518794749897,
    "updateUser" : "Admin Innerworkings"
  },
  "uiactions" : [ ],
  "forced" : false,
  "objRef" : false,
  "doNotAudit" : false,
  "logicallyDeleted" : false,
  "violationsSet" : null,
  "dynAttributes" : { },
  "internal" : false,
  "referenceData" : [ ],
  "id" : "aeeb6d77-1fc1-4dfa-8a80-792583f067be",
  "xslt" : "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- IMPORTANT: This is a generated file; do not make any changes because they will be overwritten with no warning. -->\n<!-- Generated from the ReportLayoutDefinition with id 'c381e3e8-d404-412f-9272-ec98264be232' -->\n                                             \n                              <xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n                                <xsl:output method=\"text\"/>\n                                <xsl:template match=\"ArrayList\">\n                                <xsl:text>SKU,Description,Product_manager,Avail_QTY,BackOrderQTY,OnHoldQTY,OnHandQTY,CommitedQTY,RetailCost,UnitCost,UOM,Category,CustomerID,BillingCode,Warehouse,Weborderable,Thumbnail,CreateDate,Last_update,Release_date,Declared_value</xsl:text>\n                                <xsl:text>&#10;</xsl:text>\n                                <xsl:for-each select=\"item\">\n                                     \n                                   \n                                     <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"skuId\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     <xsl:choose>\n                                        <xsl:when test=\"string-length   (description) = 0\">\n                                           <xsl:text>NA</xsl:text>\n                                        </xsl:when>\n                                        <xsl:otherwise>\n                                          <xsl:call-template name=\"escape\">\n                                            <xsl:with-param name=\"text\" select=\"description\"/>\n                                          </xsl:call-template>\n                                        </xsl:otherwise>\n                                     </xsl:choose>\n                                     <xsl:text>,</xsl:text>\n                                     \n                                      <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"AvailQTY\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                      <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"BackOrder\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                       <xsl:call-template name=\"escape\">\n                                          <xsl:with-param name=\"text\" select=\"substring-before(lots.holdQty,'.')\"/>\n                                      </xsl:call-template>\n                                      <xsl:text>,</xsl:text>\n                                       <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"sum(( lots.reservedQty| lots.availableQty )[number(.) = .])\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     \n                                     <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"CommitedQTY\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text><xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"RetailCost\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text><xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"UnitCost\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                    \n                                     <xsl:choose>\n                                         <xsl:when test=\"string-length(uom) = 0\">\n                                            <xsl:text>EA</xsl:text>\n                                         </xsl:when>\n                                         <xsl:otherwise>\n                                           <xsl:call-template name=\"escape\">\n                                              <xsl:with-param name=\"text\" select=\"uom\"/>\n                                           </xsl:call-template>\n                                         </xsl:otherwise>\n                                      </xsl:choose>\n                                      <xsl:text>,</xsl:text>\n                                      <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"category\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"customerID\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"BillingCode\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"Warehouse\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"WebOrderable\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"Thumbnail\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"CreateDate\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"LastUpdate\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"ReleaseDate\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     <xsl:call-template name=\"escape\">\n                                         <xsl:with-param name=\"text\" select=\"DeclaredValue\"/>\n                                     </xsl:call-template>\n                                     <xsl:text>,</xsl:text>\n                                     \n                                    \n                                      \n                           <xsl:call-template name=\"escape\">\n\t\t\t\t\t\t\t\t\t<xsl:with-param name=\"text\" select=\"substring-before(auditInfo.creationTs, 'T')\"/>\n\t\t\t\t\t\t\t\t\t</xsl:call-template>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t  <xsl:text>&#10;</xsl:text>\n                          </xsl:for-each>\n                      </xsl:template>\n                      <xsl:template name=\"escape\">\n                          <xsl:param name=\"text\" />\n                          <xsl:choose>\n                              <xsl:when test=\"contains($text,',') or starts-with($text,'&quot;')\">\n                                  <xsl:text>&quot;</xsl:text>\n                                  <xsl:call-template name=\"doublequotes\">\n                                      <xsl:with-param name=\"text\" select=\"$text\" />\n                                  </xsl:call-template>\n                                  <xsl:text>&quot;</xsl:text>\n                              </xsl:when>\n                              <xsl:otherwise>\n                                  <xsl:value-of select=\"$text\" />\n                              </xsl:otherwise>\n                          </xsl:choose>\n                      </xsl:template>\n\n                      <xsl:template name=\"doublequotes\">\n                          <xsl:param name=\"text\" />\n                          <xsl:choose>\n                              <xsl:when test=\"contains($text,'&quot;')\">\n                                  <xsl:value-of select=\"concat(substring-before($text,'&quot;'),'&quot;&quot;')\" />\n                                  <xsl:call-template name=\"doublequotes\">\n                                      <xsl:with-param name=\"text\" select=\"substring-after($text,'&quot;')\" />\n                                  </xsl:call-template>\n                              </xsl:when>\n                              <xsl:otherwise>\n                                  <xsl:value-of select=\"$text\" />\n                              </xsl:otherwise>\n                          </xsl:choose>\n                      </xsl:template>\n                  </xsl:stylesheet>\n                  ",
  "reportLayoutDefinitionType" : "XSLT",
  "varNameInTemplate" : null,
  "templateFileSystemEntry" : null,
  "targetOutput" : "CSV",
  "category" : "Inventory",
  "reportSourceType" : "SCRIPT",
  "scriptId" : "b6052df2-22dc-40a2-96b7-fac43b31ed21",
  "scriptInputs" : {
    "name" : null,
    "attributes" : {
      "facility" : {
        "id" : null,
        "refName" : "facility",
        "type" : "Select",
        "value" : null,
        "className" : null,
        "selectValues" : [ {
          "type" : null,
          "refName" : "joliet-dc",
          "value" : "joliet-dc",
          "selected" : false,
          "order" : 0,
          "additionalPrice" : 0.0
        } ],
        "selectValuesType" : "correlation",
        "selectValuesKey" : "facilitiesForReports",
        "defaultValue" : null,
        "required" : false,
        "inheritable" : false,
        "hidden" : false,
        "displayOnFrontend" : true,
        "label" : "Facility (represented by the matching Site)",
        "description" : null
      },
      "poolPrefix" : {
        "id" : null,
        "refName" : "poolPrefix",
        "type" : "String",
        "value" : null,
        "className" : null,
        "selectValues" : [ ],
        "selectValuesType" : null,
        "selectValuesKey" : null,
        "defaultValue" : null,
        "required" : false,
        "inheritable" : false,
        "hidden" : false,
        "displayOnFrontend" : true,
        "label" : "A prefix of the pool's refName",
        "description" : null
      },
      "shelfLife" : {
        "id" : null,
        "refName" : "shelfLife",
        "type" : "Boolean",
        "value" : null,
        "className" : null,
        "selectValues" : [ ],
        "selectValuesType" : null,
        "selectValuesKey" : null,
        "defaultValue" : null,
        "required" : false,
        "inheritable" : false,
        "hidden" : false,
        "displayOnFrontend" : true,
        "label" : "shelfLife",
        "description" : null
      }
    }
  },
  "functionalDomain" : null,
  "fields" : [ ],
  "defaultFilter" : null,
  "sorts" : [ ]
}